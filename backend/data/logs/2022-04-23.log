[INFO] 07:30:08 MongoDB: database_names_list has been updated .
[INFO] 07:30:08 MongoDB: database_names_list has been updated .
[INFO] 07:30:08 ######## NL-BACKEND RUN NOW ######## .
[INFO] 07:30:08 BackendInit: now start backend .
[INFO] 07:30:08 WsServer: Start websocket server... .
[INFO] 07:30:08 HttpServer: Start http server... .
[INFO] 07:30:08 WsServer: ServerAddr: ws://0.0.0.0:5024 .
[INFO] 07:30:08 HttpServer: ServerAddr: 0.0.0.0:5000 .
[INFO] 07:30:17 HttpHandler: received http request, start handle... .
[INFO] 07:30:17 HttpHandler: start auth .
[INFO] 07:30:17 MongoDB: coll_exist?: second time search start .
[INFO] 07:30:17 MongoDB: collection_names_list has been updated .
[INFO] 07:30:17 MongoDB: collection-class1 exist .
[INFO] 07:30:29 HttpHandler: auth completed .
[INFO] 07:30:29 HttpHandler: user_login is allowed, start handle .
[INFO] 07:30:29 LocalCaller: start user_login .
[INFO] 07:30:29 UserManager: Try login class1 .
[INFO] 07:30:29 UserInfoManager: try to get user- class1's password .
[INFO] 07:30:29 MongoDB: try to get document from class/class1 .
[INFO] 07:30:29 MongoDB: parsing the documents, targets: ['password'] .
[INFO] 07:30:29 UserInfoManager: try to get user- class1's user_type .
[INFO] 07:30:29 MongoDB: update document success. Update count: 0 .
[INFO] 07:30:29 MongoDB: update document success. Update count: 1 .
[INFO] 07:30:29 MongoDB: update document success. Update count: 1 .
[INFO] 07:30:29 UserManager: login success .
[INFO] 07:30:29 HttpHandler: command-user_login handle completed .
[INFO] 07:31:50 HttpHandler: received http request, start handle... .
[INFO] 07:31:50 HttpHandler: start auth .
[INFO] 07:31:50 MongoDB: collection-class1 exist .
[INFO] 07:31:50 MongoDB: coll_exist?: second time search start .
[INFO] 07:31:50 MongoDB: collection_names_list has been updated .
[INFO] 07:31:50 MongoDB: collection-class1 exist .
[INFO] 07:31:50 HttpHandler: auth completed .
[INFO] 07:31:50 HttpHandler: user_login is allowed, start handle .
[INFO] 07:31:50 LocalCaller: start user_login .
[INFO] 07:31:50 UserManager: Try login class1 .
[INFO] 07:31:50 UserInfoManager: try to get user- class1's password .
[INFO] 07:31:50 MongoDB: try to get document from class/class1 .
[INFO] 07:31:50 MongoDB: parsing the documents, targets: ['password'] .
[INFO] 07:31:50 UserInfoManager: try to get user- class1's user_type .
[INFO] 07:31:50 MongoDB: update document success. Update count: 0 .
[INFO] 07:31:50 MongoDB: update document success. Update count: 1 .
[INFO] 07:31:50 MongoDB: update document success. Update count: 1 .
[INFO] 07:31:50 UserManager: login success .
[INFO] 07:31:50 HttpHandler: command-user_login handle completed .
[INFO] 07:31:58 WsHandler: receive new websocket conn .
[INFO] 07:34:16 HttpHandler: received http request, start handle... .
[INFO] 07:34:16 HttpHandler: start auth .
[INFO] 07:34:16 MongoDB: collection-class1 exist .
[INFO] 07:34:16 MongoDB: coll_exist?: second time search start .
[INFO] 07:34:16 MongoDB: collection_names_list has been updated .
[INFO] 07:34:16 MongoDB: collection-class1 exist .
[INFO] 07:34:16 HttpHandler: auth completed .
[INFO] 07:34:16 HttpHandler: user_login is allowed, start handle .
[INFO] 07:34:16 LocalCaller: start user_login .
[INFO] 07:34:16 UserManager: Try login class1 .
[INFO] 07:34:16 UserInfoManager: try to get user- class1's password .
[INFO] 07:34:16 MongoDB: try to get document from class/class1 .
[INFO] 07:34:16 MongoDB: parsing the documents, targets: ['password'] .
[INFO] 07:34:16 UserInfoManager: try to get user- class1's user_type .
[INFO] 07:34:16 MongoDB: update document success. Update count: 0 .
[INFO] 07:34:16 MongoDB: update document success. Update count: 1 .
[INFO] 07:34:16 MongoDB: update document success. Update count: 1 .
[INFO] 07:34:16 UserManager: login success .
[INFO] 07:34:16 HttpHandler: command-user_login handle completed .
[INFO] 07:34:24 WsHandler: receive new websocket conn .
[INFO] 07:35:05 HttpHandler: received http request, start handle... .
[INFO] 07:35:05 HttpHandler: start auth .
[INFO] 07:35:05 MongoDB: collection-class1 exist .
[INFO] 07:35:05 MongoDB: coll_exist?: second time search start .
[INFO] 07:35:05 MongoDB: collection_names_list has been updated .
[INFO] 07:35:05 MongoDB: collection-class1 exist .
[INFO] 07:35:05 HttpHandler: auth completed .
[INFO] 07:35:05 HttpHandler: user_login is allowed, start handle .
[INFO] 07:35:05 LocalCaller: start user_login .
[INFO] 07:35:05 UserManager: Try login class1 .
[INFO] 07:35:05 UserInfoManager: try to get user- class1's password .
[INFO] 07:35:05 MongoDB: try to get document from class/class1 .
[INFO] 07:35:05 MongoDB: parsing the documents, targets: ['password'] .
[INFO] 07:35:05 UserInfoManager: try to get user- class1's user_type .
[INFO] 07:35:05 MongoDB: update document success. Update count: 0 .
[INFO] 07:35:05 MongoDB: update document success. Update count: 1 .
[INFO] 07:35:05 MongoDB: update document success. Update count: 1 .
[INFO] 07:35:05 UserManager: login success .
[INFO] 07:35:05 HttpHandler: command-user_login handle completed .
[INFO] 07:35:05 WsHandler: receive new websocket conn .
[INFO] 07:35:19 HttpHandler: received http request, start handle... .
[INFO] 07:35:19 HttpHandler: start auth .
[INFO] 07:35:19 MongoDB: collection-class1 exist .
[INFO] 07:35:19 MongoDB: coll_exist?: second time search start .
[INFO] 07:35:19 MongoDB: collection_names_list has been updated .
[INFO] 07:35:19 MongoDB: collection-class1 exist .
[INFO] 07:35:19 HttpHandler: auth completed .
[INFO] 07:35:19 HttpHandler: user_login is allowed, start handle .
[INFO] 07:35:19 LocalCaller: start user_login .
[INFO] 07:35:19 UserManager: Try login class1 .
[INFO] 07:35:19 UserInfoManager: try to get user- class1's password .
[INFO] 07:35:19 MongoDB: try to get document from class/class1 .
[INFO] 07:35:19 MongoDB: parsing the documents, targets: ['password'] .
[INFO] 07:35:19 UserInfoManager: try to get user- class1's user_type .
[INFO] 07:35:19 MongoDB: update document success. Update count: 0 .
[INFO] 07:35:19 MongoDB: update document success. Update count: 1 .
[INFO] 07:35:19 MongoDB: update document success. Update count: 1 .
[INFO] 07:35:19 UserManager: login success .
[INFO] 07:35:19 HttpHandler: command-user_login handle completed .
[INFO] 07:35:19 WsHandler: receive new websocket conn .
[INFO] 07:38:38 MongoDB: database_names_list has been updated .
[INFO] 07:38:38 MongoDB: database_names_list has been updated .
[INFO] 07:38:38 ######## NL-BACKEND RUN NOW ######## .
[INFO] 07:38:38 BackendInit: now start backend .
[INFO] 07:38:38 HttpServer: Start http server... .
[INFO] 07:38:38 WsServer: Start websocket server... .
[INFO] 07:38:38 WsServer: ServerAddr: ws://0.0.0.0:5024 .
[INFO] 07:38:38 HttpServer: ServerAddr: 0.0.0.0:5000 .
[INFO] 07:38:56 HttpHandler: received http request, start handle... .
[INFO] 07:38:56 HttpHandler: start auth .
[INFO] 07:38:56 MongoDB: coll_exist?: second time search start .
[INFO] 07:38:56 MongoDB: collection_names_list has been updated .
[INFO] 07:38:56 MongoDB: collection-class1 exist .
[INFO] 07:38:56 HttpHandler: auth completed .
[INFO] 07:38:56 HttpHandler: user_login is allowed, start handle .
[INFO] 07:38:56 LocalCaller: start user_login .
[INFO] 07:38:56 UserManager: Try login class1 .
[INFO] 07:38:56 UserInfoManager: try to get user- class1's password .
[INFO] 07:38:56 MongoDB: try to get document from class/class1 .
[INFO] 07:38:56 MongoDB: parsing the documents, targets: ['password'] .
[INFO] 07:38:56 UserInfoManager: try to get user- class1's user_type .
[INFO] 07:38:56 MongoDB: update document success. Update count: 0 .
[INFO] 07:38:56 MongoDB: update document success. Update count: 1 .
[INFO] 07:38:56 MongoDB: update document success. Update count: 1 .
[INFO] 07:38:56 UserManager: login success .
[INFO] 07:38:56 HttpHandler: command-user_login handle completed .
[INFO] 07:38:56 WsHandler: receive new websocket conn .
[INFO] 07:40:04 MongoDB: database_names_list has been updated .
[INFO] 07:40:04 MongoDB: database_names_list has been updated .
[INFO] 07:40:04 ######## NL-BACKEND RUN NOW ######## .
[INFO] 07:40:04 BackendInit: now start backend .
[INFO] 07:40:04 HttpServer: Start http server... .
[INFO] 07:40:04 WsServer: Start websocket server... .
[INFO] 07:40:04 HttpServer: ServerAddr: 0.0.0.0:5000 .
[INFO] 07:40:04 WsServer: ServerAddr: ws://0.0.0.0:5024 .
[INFO] 07:40:09 HttpHandler: received http request, start handle... .
[INFO] 07:40:09 HttpHandler: start auth .
[INFO] 07:40:09 MongoDB: coll_exist?: second time search start .
[INFO] 07:40:09 MongoDB: collection_names_list has been updated .
[INFO] 07:40:09 MongoDB: collection-class1 exist .
[INFO] 07:40:09 HttpHandler: auth completed .
[INFO] 07:40:09 HttpHandler: user_login is allowed, start handle .
[INFO] 07:40:09 LocalCaller: start user_login .
[INFO] 07:40:09 UserManager: Try login class1 .
[INFO] 07:40:09 UserInfoManager: try to get user- class1's password .
[INFO] 07:40:09 MongoDB: try to get document from class/class1 .
[INFO] 07:40:09 MongoDB: parsing the documents, targets: ['password'] .
[INFO] 07:40:09 UserInfoManager: try to get user- class1's user_type .
[INFO] 07:40:09 MongoDB: update document success. Update count: 0 .
[INFO] 07:40:09 MongoDB: update document success. Update count: 1 .
[INFO] 07:40:09 MongoDB: update document success. Update count: 1 .
[INFO] 07:40:09 UserManager: login success .
[INFO] 07:40:09 HttpHandler: command-user_login handle completed .
[INFO] 07:40:09 WsHandler: receive new websocket conn .
[INFO] 07:40:09 WsHandler: start auto_close_conn .
[INFO] 07:40:50 MongoDB: database_names_list has been updated .
[INFO] 07:40:50 MongoDB: database_names_list has been updated .
[INFO] 07:40:50 ######## NL-BACKEND RUN NOW ######## .
[INFO] 07:40:50 BackendInit: now start backend .
[INFO] 07:40:50 WsServer: Start websocket server... .
[INFO] 07:40:50 HttpServer: Start http server... .
[INFO] 07:40:50 WsServer: ServerAddr: ws://0.0.0.0:5024 .
[INFO] 07:40:50 HttpServer: ServerAddr: 0.0.0.0:5000 .
[INFO] 07:41:06 HttpHandler: received http request, start handle... .
[INFO] 07:41:06 HttpHandler: start auth .
[INFO] 07:41:06 MongoDB: coll_exist?: second time search start .
[INFO] 07:41:06 MongoDB: collection_names_list has been updated .
[INFO] 07:41:06 MongoDB: collection-class1 exist .
[INFO] 07:41:06 HttpHandler: auth completed .
[INFO] 07:41:06 HttpHandler: user_login is allowed, start handle .
[INFO] 07:41:06 LocalCaller: start user_login .
[INFO] 07:41:06 UserManager: Try login class1 .
[INFO] 07:41:06 UserInfoManager: try to get user- class1's password .
[INFO] 07:41:06 MongoDB: try to get document from class/class1 .
[INFO] 07:41:06 MongoDB: parsing the documents, targets: ['password'] .
[INFO] 07:41:06 UserInfoManager: try to get user- class1's user_type .
[INFO] 07:41:06 MongoDB: update document success. Update count: 0 .
[INFO] 07:41:06 MongoDB: update document success. Update count: 1 .
[INFO] 07:41:06 MongoDB: update document success. Update count: 1 .
[INFO] 07:41:06 UserManager: login success .
[INFO] 07:41:06 HttpHandler: command-user_login handle completed .
[INFO] 07:41:06 WsHandler: receive new websocket conn .
[INFO] 07:41:06 WsHandler: start auto_close_conn .
[INFO] 07:43:04 MongoDB: database_names_list has been updated .
[INFO] 07:43:04 MongoDB: database_names_list has been updated .
[INFO] 07:43:04 ######## NL-BACKEND RUN NOW ######## .
[INFO] 07:43:04 BackendInit: now start backend .
[INFO] 07:43:04 HttpServer: Start http server... .
[INFO] 07:43:04 WsServer: Start websocket server... .
[INFO] 07:43:04 HttpServer: ServerAddr: 0.0.0.0:5000 .
[INFO] 07:43:04 WsServer: ServerAddr: ws://0.0.0.0:5024 .
[INFO] 07:43:16 HttpHandler: received http request, start handle... .
[INFO] 07:43:16 HttpHandler: start auth .
[INFO] 07:43:16 MongoDB: coll_exist?: second time search start .
[INFO] 07:43:16 MongoDB: collection_names_list has been updated .
[INFO] 07:43:16 MongoDB: collection-class1 exist .
[INFO] 07:43:16 HttpHandler: auth completed .
[INFO] 07:43:16 HttpHandler: user_login is allowed, start handle .
[INFO] 07:43:16 LocalCaller: start user_login .
[INFO] 07:43:16 UserManager: Try login class1 .
[INFO] 07:43:16 UserInfoManager: try to get user- class1's password .
[INFO] 07:43:16 MongoDB: try to get document from class/class1 .
[INFO] 07:43:16 MongoDB: parsing the documents, targets: ['password'] .
[INFO] 07:43:16 UserInfoManager: try to get user- class1's user_type .
[INFO] 07:43:16 MongoDB: update document success. Update count: 0 .
[INFO] 07:43:16 MongoDB: update document success. Update count: 1 .
[INFO] 07:43:16 MongoDB: update document success. Update count: 1 .
[INFO] 07:43:16 UserManager: login success .
[INFO] 07:43:16 HttpHandler: command-user_login handle completed .
[INFO] 07:43:16 WsHandler: receive new websocket conn .
[INFO] 07:43:16 WsHandler: start auto_close_conn .
[INFO] 07:47:16 MongoDB: database_names_list has been updated .
[INFO] 07:47:16 MongoDB: database_names_list has been updated .
[INFO] 07:47:16 ######## NL-BACKEND RUN NOW ######## .
[INFO] 07:47:16 BackendInit: now start backend .
[INFO] 07:47:16 HttpServer: Start http server... .
[INFO] 07:47:16 WsServer: Start websocket server... .
[INFO] 07:47:16 WsServer: ServerAddr: ws://0.0.0.0:5024 .
[INFO] 07:47:16 HttpServer: ServerAddr: 0.0.0.0:5000 .
[INFO] 07:47:22 HttpHandler: received http request, start handle... .
[INFO] 07:47:22 HttpHandler: start auth .
[INFO] 07:47:22 MongoDB: coll_exist?: second time search start .
[INFO] 07:47:22 MongoDB: collection_names_list has been updated .
[INFO] 07:47:22 MongoDB: collection-class1 exist .
[INFO] 07:47:22 HttpHandler: auth completed .
[INFO] 07:47:22 HttpHandler: user_login is allowed, start handle .
[INFO] 07:47:22 LocalCaller: start user_login .
[INFO] 07:47:22 UserManager: Try login class1 .
[INFO] 07:47:22 UserInfoManager: try to get user- class1's password .
[INFO] 07:47:22 MongoDB: try to get document from class/class1 .
[INFO] 07:47:22 MongoDB: parsing the documents, targets: ['password'] .
[INFO] 07:47:22 UserInfoManager: try to get user- class1's user_type .
[INFO] 07:47:22 MongoDB: update document success. Update count: 0 .
[INFO] 07:47:22 MongoDB: update document success. Update count: 1 .
[INFO] 07:47:22 MongoDB: update document success. Update count: 1 .
[INFO] 07:47:22 UserManager: login success .
[INFO] 07:47:22 HttpHandler: command-user_login handle completed .
[INFO] 07:47:22 WsHandler: receive new websocket conn .
[INFO] 07:47:22 WsHandler: start auto_close_conn .
[INFO] 07:56:43 MongoDB: database_names_list has been updated .
[INFO] 07:56:43 MongoDB: database_names_list has been updated .
[INFO] 07:56:43 ######## NL-BACKEND RUN NOW ######## .
[INFO] 07:56:43 BackendInit: now start backend .
[INFO] 07:56:43 HttpServer: Start http server... .
[INFO] 07:56:43 WsServer: Start websocket server... .
[INFO] 07:56:43 HttpServer: ServerAddr: 0.0.0.0:5000 .
[INFO] 07:56:43 WsServer: ServerAddr: ws://0.0.0.0:5024 .
[INFO] 07:58:31 HttpHandler: received http request, start handle... .
[INFO] 07:58:31 HttpHandler: start auth .
[INFO] 07:58:31 MongoDB: coll_exist?: second time search start .
[INFO] 07:58:31 MongoDB: collection_names_list has been updated .
[INFO] 07:58:31 MongoDB: collection-class1 exist .
[INFO] 07:58:31 HttpHandler: auth completed .
[INFO] 07:58:31 HttpHandler: user_login is allowed, start handle .
[INFO] 07:58:31 LocalCaller: start user_login .
[INFO] 07:58:31 UserManager: Try login class1 .
[INFO] 07:58:31 UserInfoManager: try to get user- class1's password .
[INFO] 07:58:31 MongoDB: try to get document from class/class1 .
[INFO] 07:58:31 MongoDB: parsing the documents, targets: ['password'] .
[INFO] 07:58:31 UserInfoManager: try to get user- class1's user_type .
[INFO] 07:58:31 MongoDB: update document success. Update count: 0 .
[INFO] 07:58:31 MongoDB: update document success. Update count: 1 .
[INFO] 07:58:31 MongoDB: update document success. Update count: 1 .
[INFO] 07:58:31 UserManager: login success .
[INFO] 07:58:31 HttpHandler: command-user_login handle completed .
[INFO] 07:58:31 WsHandler: receive new websocket conn .
[INFO] 07:58:31 WsHandler: start auto_close_conn .
[INFO] 08:14:36 MongoDB: database_names_list has been updated .
[INFO] 08:14:36 MongoDB: database_names_list has been updated .
[INFO] 08:14:36 ######## NL-BACKEND RUN NOW ######## .
[INFO] 08:14:36 BackendInit: now start backend .
[INFO] 08:14:36 HttpServer: Start http server... .
[INFO] 08:14:36 WsServer: Start websocket server... .
[INFO] 08:14:36 WsServer: ServerAddr: ws://0.0.0.0:5024 .
[INFO] 08:14:36 HttpServer: ServerAddr: 0.0.0.0:5000 .
[INFO] 08:14:47 HttpHandler: received http request, start handle... .
[INFO] 08:14:47 HttpHandler: start auth .
[INFO] 08:14:47 MongoDB: coll_exist?: second time search start .
[INFO] 08:14:47 MongoDB: collection_names_list has been updated .
[INFO] 08:14:47 MongoDB: collection-class1 exist .
[INFO] 08:14:47 HttpHandler: auth completed .
[INFO] 08:14:47 HttpHandler: user_login is allowed, start handle .
[INFO] 08:14:47 LocalCaller: start user_login .
[INFO] 08:14:47 UserManager: Try login class1 .
[INFO] 08:14:47 UserInfoManager: try to get user- class1's password .
[INFO] 08:14:47 MongoDB: try to get document from class/class1 .
[INFO] 08:14:47 MongoDB: parsing the documents, targets: ['password'] .
[INFO] 08:14:47 UserInfoManager: try to get user- class1's user_type .
[INFO] 08:14:47 MongoDB: update document success. Update count: 0 .
[INFO] 08:14:47 MongoDB: update document success. Update count: 1 .
[INFO] 08:14:47 MongoDB: update document success. Update count: 1 .
[INFO] 08:14:47 UserManager: login success .
[INFO] 08:14:47 HttpHandler: command-user_login handle completed .
[INFO] 08:14:47 WsHandler: receive new websocket conn .
[INFO] 08:14:47 WsHandler: start auto_close_conn .
[INFO] 08:20:37 HttpHandler: received http request, start handle... .
[INFO] 08:20:37 HttpHandler: start auth .
[INFO] 08:20:37 MongoDB: collection-class1 exist .
[INFO] 08:20:37 MongoDB: coll_exist?: second time search start .
[INFO] 08:20:37 MongoDB: collection_names_list has been updated .
[INFO] 08:20:37 MongoDB: collection-class1 exist .
[INFO] 08:20:37 HttpHandler: auth completed .
[INFO] 08:20:37 HttpHandler: user_login is allowed, start handle .
[INFO] 08:20:37 LocalCaller: start user_login .
[INFO] 08:20:37 UserManager: Try login class1 .
[INFO] 08:20:37 UserInfoManager: try to get user- class1's password .
[INFO] 08:20:37 MongoDB: try to get document from class/class1 .
[INFO] 08:20:37 MongoDB: parsing the documents, targets: ['password'] .
[INFO] 08:20:37 UserInfoManager: try to get user- class1's user_type .
[INFO] 08:20:37 MongoDB: update document success. Update count: 0 .
[INFO] 08:20:37 MongoDB: update document success. Update count: 1 .
[INFO] 08:20:37 MongoDB: update document success. Update count: 1 .
[INFO] 08:20:37 UserManager: login success .
[INFO] 08:20:37 HttpHandler: command-user_login handle completed .
[INFO] 08:20:37 WsHandler: receive new websocket conn .
[INFO] 08:20:37 WsHandler: start auto_close_conn .
[INFO] 08:20:37 WsHandler: receive command, start handle .
[INFO] 08:21:21 MongoDB: database_names_list has been updated .
[INFO] 08:21:21 MongoDB: database_names_list has been updated .
[INFO] 08:21:21 ######## NL-BACKEND RUN NOW ######## .
[INFO] 08:21:21 BackendInit: now start backend .
[INFO] 08:21:21 WsServer: Start websocket server... .
[INFO] 08:21:21 HttpServer: Start http server... .
[INFO] 08:21:21 WsServer: ServerAddr: ws://0.0.0.0:5024 .
[INFO] 08:21:21 HttpServer: ServerAddr: 0.0.0.0:5000 .
[INFO] 08:21:34 HttpHandler: received http request, start handle... .
[INFO] 08:21:34 HttpHandler: start auth .
[INFO] 08:21:34 MongoDB: coll_exist?: second time search start .
[INFO] 08:21:34 MongoDB: collection_names_list has been updated .
[INFO] 08:21:34 MongoDB: collection-class1 exist .
[INFO] 08:21:34 HttpHandler: auth completed .
[INFO] 08:21:34 HttpHandler: user_login is allowed, start handle .
[INFO] 08:21:34 LocalCaller: start user_login .
[INFO] 08:21:34 UserManager: Try login class1 .
[INFO] 08:21:34 UserInfoManager: try to get user- class1's password .
[INFO] 08:21:34 MongoDB: try to get document from class/class1 .
[INFO] 08:21:34 MongoDB: parsing the documents, targets: ['password'] .
[INFO] 08:21:34 UserInfoManager: try to get user- class1's user_type .
[INFO] 08:21:34 MongoDB: update document success. Update count: 0 .
[INFO] 08:21:34 MongoDB: update document success. Update count: 1 .
[INFO] 08:21:34 MongoDB: update document success. Update count: 1 .
[INFO] 08:21:34 UserManager: login success .
[INFO] 08:21:34 HttpHandler: command-user_login handle completed .
[INFO] 08:21:34 WsHandler: receive new websocket conn .
[INFO] 08:21:34 WsHandler: receive command, start handle .
[INFO] 08:22:32 MongoDB: database_names_list has been updated .
[INFO] 08:22:32 MongoDB: database_names_list has been updated .
[INFO] 08:22:32 ######## NL-BACKEND RUN NOW ######## .
[INFO] 08:22:32 BackendInit: now start backend .
[INFO] 08:22:32 HttpServer: Start http server... .
[INFO] 08:22:32 WsServer: Start websocket server... .
[INFO] 08:22:32 HttpServer: ServerAddr: 0.0.0.0:5000 .
[INFO] 08:22:32 WsServer: ServerAddr: ws://0.0.0.0:5024 .
[INFO] 08:22:43 HttpHandler: received http request, start handle... .
[INFO] 08:22:43 HttpHandler: start auth .
[INFO] 08:22:43 MongoDB: coll_exist?: second time search start .
[INFO] 08:22:43 MongoDB: collection_names_list has been updated .
[INFO] 08:22:43 MongoDB: collection-class1 exist .
[INFO] 08:22:43 HttpHandler: auth completed .
[INFO] 08:22:43 HttpHandler: user_login is allowed, start handle .
[INFO] 08:22:43 LocalCaller: start user_login .
[INFO] 08:22:43 UserManager: Try login class1 .
[INFO] 08:22:43 UserInfoManager: try to get user- class1's password .
[INFO] 08:22:43 MongoDB: try to get document from class/class1 .
[INFO] 08:22:43 MongoDB: parsing the documents, targets: ['password'] .
[INFO] 08:22:43 UserInfoManager: try to get user- class1's user_type .
[INFO] 08:22:43 MongoDB: update document success. Update count: 0 .
[INFO] 08:22:43 MongoDB: update document success. Update count: 1 .
[INFO] 08:22:43 MongoDB: update document success. Update count: 1 .
[INFO] 08:22:43 UserManager: login success .
[INFO] 08:22:43 HttpHandler: command-user_login handle completed .
[INFO] 08:22:43 WsHandler: receive new websocket conn .
[INFO] 08:22:43 WsHandler: receive command, start handle .
[ERROR] 08:22:43 WsHandler: wrong format of message, close .
[INFO] 08:24:54 HttpHandler: received http request, start handle... .
[INFO] 08:24:54 HttpHandler: start auth .
[INFO] 08:24:54 MongoDB: collection-class1 exist .
[INFO] 08:24:54 MongoDB: coll_exist?: second time search start .
[INFO] 08:24:54 MongoDB: collection_names_list has been updated .
[INFO] 08:24:54 MongoDB: collection-class1 exist .
[INFO] 08:24:54 HttpHandler: auth completed .
[INFO] 08:24:54 HttpHandler: user_login is allowed, start handle .
[INFO] 08:24:54 LocalCaller: start user_login .
[INFO] 08:24:54 UserManager: Try login class1 .
[INFO] 08:24:54 UserInfoManager: try to get user- class1's password .
[INFO] 08:24:54 MongoDB: try to get document from class/class1 .
[INFO] 08:24:54 MongoDB: parsing the documents, targets: ['password'] .
[INFO] 08:24:54 UserInfoManager: try to get user- class1's user_type .
[INFO] 08:24:54 MongoDB: update document success. Update count: 0 .
[INFO] 08:24:54 MongoDB: update document success. Update count: 1 .
[INFO] 08:24:54 MongoDB: update document success. Update count: 1 .
[INFO] 08:24:54 UserManager: login success .
[INFO] 08:24:54 HttpHandler: command-user_login handle completed .
[INFO] 08:24:54 WsHandler: receive new websocket conn .
[INFO] 08:24:54 WsHandler: receive command, start handle .
[ERROR] 08:24:54 WsHandler: wrong format of message, close .
[INFO] 08:26:52 MongoDB: database_names_list has been updated .
[INFO] 08:26:52 MongoDB: database_names_list has been updated .
[INFO] 08:26:52 ######## NL-BACKEND RUN NOW ######## .
[INFO] 08:26:52 BackendInit: now start backend .
[INFO] 08:26:52 WsServer: Start websocket server... .
[INFO] 08:26:52 HttpServer: Start http server... .
[INFO] 08:26:52 WsServer: ServerAddr: ws://0.0.0.0:5024 .
[INFO] 08:26:52 HttpServer: ServerAddr: 0.0.0.0:5000 .
[INFO] 08:27:05 HttpHandler: received http request, start handle... .
[INFO] 08:27:05 HttpHandler: start auth .
[INFO] 08:27:05 MongoDB: coll_exist?: second time search start .
[INFO] 08:27:05 MongoDB: collection_names_list has been updated .
[INFO] 08:27:05 MongoDB: collection-class1 exist .
[INFO] 08:27:05 HttpHandler: auth completed .
[INFO] 08:27:05 HttpHandler: user_login is allowed, start handle .
[INFO] 08:27:05 LocalCaller: start user_login .
[INFO] 08:27:05 UserManager: Try login class1 .
[INFO] 08:27:05 UserInfoManager: try to get user- class1's password .
[INFO] 08:27:05 MongoDB: try to get document from class/class1 .
[INFO] 08:27:05 MongoDB: parsing the documents, targets: ['password'] .
[INFO] 08:27:05 UserInfoManager: try to get user- class1's user_type .
[INFO] 08:27:05 MongoDB: update document success. Update count: 0 .
[INFO] 08:27:05 MongoDB: update document success. Update count: 1 .
[INFO] 08:27:05 MongoDB: update document success. Update count: 1 .
[INFO] 08:27:05 UserManager: login success .
[INFO] 08:27:05 HttpHandler: command-user_login handle completed .
[INFO] 08:27:05 WsHandler: receive new websocket conn .
[INFO] 08:27:05 WsHandler: receive command, start handle .
[INFO] 08:27:30 MongoDB: database_names_list has been updated .
[INFO] 08:27:30 MongoDB: database_names_list has been updated .
[INFO] 08:27:30 ######## NL-BACKEND RUN NOW ######## .
[INFO] 08:27:30 BackendInit: now start backend .
[INFO] 08:27:30 HttpServer: Start http server... .
[INFO] 08:27:30 WsServer: Start websocket server... .
[INFO] 08:27:30 HttpServer: ServerAddr: 0.0.0.0:5000 .
[INFO] 08:27:30 WsServer: ServerAddr: ws://0.0.0.0:5024 .
[INFO] 08:27:43 HttpHandler: received http request, start handle... .
[INFO] 08:27:43 HttpHandler: start auth .
[INFO] 08:27:43 MongoDB: coll_exist?: second time search start .
[INFO] 08:27:43 MongoDB: collection_names_list has been updated .
[INFO] 08:27:43 MongoDB: collection-class1 exist .
[INFO] 08:27:43 HttpHandler: auth completed .
[INFO] 08:27:43 HttpHandler: user_login is allowed, start handle .
[INFO] 08:27:43 LocalCaller: start user_login .
[INFO] 08:27:43 UserManager: Try login class1 .
[INFO] 08:27:43 UserInfoManager: try to get user- class1's password .
[INFO] 08:27:43 MongoDB: try to get document from class/class1 .
[INFO] 08:27:43 MongoDB: parsing the documents, targets: ['password'] .
[INFO] 08:27:43 UserInfoManager: try to get user- class1's user_type .
[INFO] 08:27:43 MongoDB: update document success. Update count: 0 .
[INFO] 08:27:43 MongoDB: update document success. Update count: 1 .
[INFO] 08:27:43 MongoDB: update document success. Update count: 1 .
[INFO] 08:27:43 UserManager: login success .
[INFO] 08:27:43 HttpHandler: command-user_login handle completed .
[INFO] 08:27:43 WsHandler: receive new websocket conn .
[INFO] 08:27:43 WsHandler: receive command, start handle .
[INFO] 08:31:01 MongoDB: database_names_list has been updated .
[INFO] 08:31:01 MongoDB: database_names_list has been updated .
[INFO] 08:31:01 ######## NL-BACKEND RUN NOW ######## .
[INFO] 08:31:01 BackendInit: now start backend .
[INFO] 08:31:01 HttpServer: Start http server... .
[INFO] 08:31:01 WsServer: Start websocket server... .
[INFO] 08:31:01 WsServer: ServerAddr: ws://0.0.0.0:5024 .
[INFO] 08:31:01 HttpServer: ServerAddr: 0.0.0.0:5000 .
[INFO] 08:31:11 HttpHandler: received http request, start handle... .
[INFO] 08:31:11 HttpHandler: start auth .
[INFO] 08:31:11 MongoDB: coll_exist?: second time search start .
[INFO] 08:31:11 MongoDB: collection_names_list has been updated .
[INFO] 08:31:11 MongoDB: collection-class1 exist .
[INFO] 08:31:11 HttpHandler: auth completed .
[INFO] 08:31:11 HttpHandler: user_login is allowed, start handle .
[INFO] 08:31:11 LocalCaller: start user_login .
[INFO] 08:31:11 UserManager: Try login class1 .
[INFO] 08:31:11 UserInfoManager: try to get user- class1's password .
[INFO] 08:31:11 MongoDB: try to get document from class/class1 .
[INFO] 08:31:11 MongoDB: parsing the documents, targets: ['password'] .
[INFO] 08:31:11 UserInfoManager: try to get user- class1's user_type .
[INFO] 08:31:11 MongoDB: update document success. Update count: 0 .
[INFO] 08:31:11 MongoDB: update document success. Update count: 1 .
[INFO] 08:31:11 MongoDB: update document success. Update count: 1 .
[INFO] 08:31:11 UserManager: login success .
[INFO] 08:31:11 HttpHandler: command-user_login handle completed .
[INFO] 08:31:11 WsHandler: receive new websocket conn .
[INFO] 08:31:11 WsHandler: receive command, start handle .
[INFO] 08:32:41 MongoDB: database_names_list has been updated .
[INFO] 08:32:41 MongoDB: database_names_list has been updated .
[INFO] 08:32:41 ######## NL-BACKEND RUN NOW ######## .
[INFO] 08:32:41 BackendInit: now start backend .
[INFO] 08:32:41 HttpServer: Start http server... .
[INFO] 08:32:41 WsServer: Start websocket server... .
[INFO] 08:32:41 WsServer: ServerAddr: ws://0.0.0.0:5024 .
[INFO] 08:32:41 HttpServer: ServerAddr: 0.0.0.0:5000 .
[INFO] 08:32:48 MongoDB: database_names_list has been updated .
[INFO] 08:32:48 MongoDB: database_names_list has been updated .
[INFO] 08:32:48 ######## NL-BACKEND RUN NOW ######## .
[INFO] 08:32:48 BackendInit: now start backend .
[INFO] 08:32:48 HttpServer: Start http server... .
[INFO] 08:32:48 WsServer: Start websocket server... .
[INFO] 08:32:48 HttpServer: ServerAddr: 0.0.0.0:5000 .
[INFO] 08:32:48 WsServer: ServerAddr: ws://0.0.0.0:5024 .
[INFO] 08:32:58 HttpHandler: received http request, start handle... .
[INFO] 08:32:58 HttpHandler: start auth .
[INFO] 08:32:58 MongoDB: coll_exist?: second time search start .
[INFO] 08:32:58 MongoDB: collection_names_list has been updated .
[INFO] 08:32:58 MongoDB: collection-class1 exist .
[INFO] 08:32:58 HttpHandler: auth completed .
[INFO] 08:32:58 HttpHandler: user_login is allowed, start handle .
[INFO] 08:32:58 LocalCaller: start user_login .
[INFO] 08:32:58 UserManager: Try login class1 .
[INFO] 08:32:58 UserInfoManager: try to get user- class1's password .
[INFO] 08:32:58 MongoDB: try to get document from class/class1 .
[INFO] 08:32:58 MongoDB: parsing the documents, targets: ['password'] .
[INFO] 08:32:58 UserInfoManager: try to get user- class1's user_type .
[INFO] 08:32:58 MongoDB: update document success. Update count: 0 .
[INFO] 08:32:58 MongoDB: update document success. Update count: 1 .
[INFO] 08:32:58 MongoDB: update document success. Update count: 1 .
[INFO] 08:32:58 UserManager: login success .
[INFO] 08:32:58 HttpHandler: command-user_login handle completed .
[INFO] 08:32:58 WsHandler: receive new websocket conn .
[INFO] 08:32:58 WsHandler: receive command, start handle .
[INFO] 08:34:51 MongoDB: database_names_list has been updated .
[INFO] 08:34:51 MongoDB: database_names_list has been updated .
[INFO] 08:34:51 ######## NL-BACKEND RUN NOW ######## .
[INFO] 08:34:51 BackendInit: now start backend .
[INFO] 08:34:51 HttpServer: Start http server... .
[INFO] 08:34:51 WsServer: Start websocket server... .
[INFO] 08:34:51 HttpServer: ServerAddr: 0.0.0.0:5000 .
[INFO] 08:34:51 WsServer: ServerAddr: ws://0.0.0.0:5024 .
[INFO] 08:35:01 HttpHandler: received http request, start handle... .
[INFO] 08:35:01 HttpHandler: start auth .
[INFO] 08:35:01 MongoDB: coll_exist?: second time search start .
[INFO] 08:35:01 MongoDB: collection_names_list has been updated .
[INFO] 08:35:01 MongoDB: collection-class1 exist .
[INFO] 08:35:01 HttpHandler: auth completed .
[INFO] 08:35:01 HttpHandler: user_login is allowed, start handle .
[INFO] 08:35:01 LocalCaller: start user_login .
[INFO] 08:35:01 UserManager: Try login class1 .
[INFO] 08:35:01 UserInfoManager: try to get user- class1's password .
[INFO] 08:35:01 MongoDB: try to get document from class/class1 .
[INFO] 08:35:01 MongoDB: parsing the documents, targets: ['password'] .
[INFO] 08:35:01 UserInfoManager: try to get user- class1's user_type .
[INFO] 08:35:01 MongoDB: update document success. Update count: 0 .
[INFO] 08:35:01 MongoDB: update document success. Update count: 1 .
[INFO] 08:35:01 MongoDB: update document success. Update count: 1 .
[INFO] 08:35:01 UserManager: login success .
[INFO] 08:35:01 HttpHandler: command-user_login handle completed .
[INFO] 08:35:01 WsHandler: receive new websocket conn .
[INFO] 08:35:01 WsHandler: receive command, start handle .
[ERROR] 08:35:10 WsHandler: param not complete, close .
[INFO] 08:35:36 HttpHandler: received http request, start handle... .
[INFO] 08:35:36 HttpHandler: start auth .
[INFO] 08:35:36 MongoDB: collection-class1 exist .
[INFO] 08:35:36 MongoDB: coll_exist?: second time search start .
[INFO] 08:35:36 MongoDB: collection_names_list has been updated .
[INFO] 08:35:36 MongoDB: collection-class1 exist .
[INFO] 08:35:36 HttpHandler: auth completed .
[INFO] 08:35:36 HttpHandler: user_login is allowed, start handle .
[INFO] 08:35:36 LocalCaller: start user_login .
[INFO] 08:35:36 UserManager: Try login class1 .
[INFO] 08:35:36 UserInfoManager: try to get user- class1's password .
[INFO] 08:35:36 MongoDB: try to get document from class/class1 .
[INFO] 08:35:36 MongoDB: parsing the documents, targets: ['password'] .
[INFO] 08:35:36 UserInfoManager: try to get user- class1's user_type .
[INFO] 08:35:36 MongoDB: update document success. Update count: 0 .
[INFO] 08:35:36 MongoDB: update document success. Update count: 1 .
[INFO] 08:35:36 MongoDB: update document success. Update count: 1 .
[INFO] 08:35:36 UserManager: login success .
[INFO] 08:35:36 HttpHandler: command-user_login handle completed .
[INFO] 08:35:36 WsHandler: receive new websocket conn .
[INFO] 08:35:36 WsHandler: receive command, start handle .
[INFO] 08:35:59 MongoDB: database_names_list has been updated .
[INFO] 08:35:59 MongoDB: database_names_list has been updated .
[INFO] 08:35:59 ######## NL-BACKEND RUN NOW ######## .
[INFO] 08:35:59 BackendInit: now start backend .
[INFO] 08:35:59 WsServer: Start websocket server... .
[INFO] 08:35:59 HttpServer: Start http server... .
[INFO] 08:35:59 WsServer: ServerAddr: ws://0.0.0.0:5024 .
[INFO] 08:35:59 HttpServer: ServerAddr: 0.0.0.0:5000 .
[INFO] 08:36:10 HttpHandler: received http request, start handle... .
[INFO] 08:36:10 HttpHandler: start auth .
[INFO] 08:36:10 MongoDB: coll_exist?: second time search start .
[INFO] 08:36:10 MongoDB: collection_names_list has been updated .
[INFO] 08:36:10 MongoDB: collection-class1 exist .
[INFO] 08:36:10 HttpHandler: auth completed .
[INFO] 08:36:10 HttpHandler: user_login is allowed, start handle .
[INFO] 08:36:10 LocalCaller: start user_login .
[INFO] 08:36:10 UserManager: Try login class1 .
[INFO] 08:36:10 UserInfoManager: try to get user- class1's password .
[INFO] 08:36:10 MongoDB: try to get document from class/class1 .
[INFO] 08:36:10 MongoDB: parsing the documents, targets: ['password'] .
[INFO] 08:36:10 UserInfoManager: try to get user- class1's user_type .
[INFO] 08:36:10 MongoDB: update document success. Update count: 0 .
[INFO] 08:36:10 MongoDB: update document success. Update count: 1 .
[INFO] 08:36:10 MongoDB: update document success. Update count: 1 .
[INFO] 08:36:10 UserManager: login success .
[INFO] 08:36:10 HttpHandler: command-user_login handle completed .
[INFO] 08:36:10 WsHandler: receive new websocket conn .
[INFO] 08:36:10 WsHandler: receive command, start handle .
[INFO] 08:36:10 MongoDB: collection-class1 exist .
[INFO] 08:36:10 MongoDB: coll_exist?: second time search start .
[INFO] 08:36:10 MongoDB: collection_names_list has been updated .
[INFO] 08:36:10 MongoDB: collection-class1 exist .
[INFO] 08:36:10 MongoDB: try to get document from class/class1 .
[INFO] 08:36:10 MongoDB: parsing the documents, targets: ['isOnline'] .
[INFO] 08:36:10 MongoDB: try to get document from class/class1 .
[INFO] 08:36:10 MongoDB: parsing the documents, targets: ['token'] .
[INFO] 08:37:21 MongoDB: database_names_list has been updated .
[INFO] 08:37:21 MongoDB: database_names_list has been updated .
[INFO] 08:37:21 ######## NL-BACKEND RUN NOW ######## .
[INFO] 08:37:21 BackendInit: now start backend .
[INFO] 08:37:21 WsServer: Start websocket server... .
[INFO] 08:37:21 HttpServer: Start http server... .
[INFO] 08:37:21 WsServer: ServerAddr: ws://0.0.0.0:5024 .
[INFO] 08:37:21 HttpServer: ServerAddr: 0.0.0.0:5000 .
[INFO] 08:37:29 HttpHandler: received http request, start handle... .
[INFO] 08:37:29 HttpHandler: start auth .
[INFO] 08:37:29 MongoDB: coll_exist?: second time search start .
[INFO] 08:37:29 MongoDB: collection_names_list has been updated .
[INFO] 08:37:29 MongoDB: collection-class1 exist .
[INFO] 08:37:29 HttpHandler: auth completed .
[INFO] 08:37:29 HttpHandler: user_login is allowed, start handle .
[INFO] 08:37:29 LocalCaller: start user_login .
[INFO] 08:37:29 UserManager: Try login class1 .
[INFO] 08:37:29 UserInfoManager: try to get user- class1's password .
[INFO] 08:37:29 MongoDB: try to get document from class/class1 .
[INFO] 08:37:29 MongoDB: parsing the documents, targets: ['password'] .
[INFO] 08:37:29 UserInfoManager: try to get user- class1's user_type .
[INFO] 08:37:29 MongoDB: update document success. Update count: 0 .
[INFO] 08:37:29 MongoDB: update document success. Update count: 1 .
[INFO] 08:37:29 MongoDB: update document success. Update count: 1 .
[INFO] 08:37:29 UserManager: login success .
[INFO] 08:37:29 HttpHandler: command-user_login handle completed .
[INFO] 08:37:29 WsHandler: receive new websocket conn .
[INFO] 08:37:29 WsHandler: receive command, start handle .
[INFO] 08:41:19 MongoDB: database_names_list has been updated .
[INFO] 08:41:19 MongoDB: database_names_list has been updated .
[INFO] 08:41:19 ######## NL-BACKEND RUN NOW ######## .
[INFO] 08:41:19 BackendInit: now start backend .
[INFO] 08:41:19 HttpServer: Start http server... .
[INFO] 08:41:19 HttpServer: ServerAddr: 0.0.0.0:5000 .
[INFO] 08:41:19 WsServer: Start websocket server... .
[INFO] 08:41:19 WsServer: ServerAddr: ws://0.0.0.0:5024 .
[INFO] 08:41:28 HttpHandler: received http request, start handle... .
[INFO] 08:41:28 HttpHandler: start auth .
[INFO] 08:41:28 MongoDB: coll_exist?: second time search start .
[INFO] 08:41:28 MongoDB: collection_names_list has been updated .
[INFO] 08:41:28 MongoDB: collection-class1 exist .
[INFO] 08:41:28 HttpHandler: auth completed .
[INFO] 08:41:28 HttpHandler: user_login is allowed, start handle .
[INFO] 08:41:28 LocalCaller: start user_login .
[INFO] 08:41:28 UserManager: Try login class1 .
[INFO] 08:41:28 UserInfoManager: try to get user- class1's password .
[INFO] 08:41:28 MongoDB: try to get document from class/class1 .
[INFO] 08:41:28 MongoDB: parsing the documents, targets: ['password'] .
[INFO] 08:41:28 UserInfoManager: try to get user- class1's user_type .
[INFO] 08:41:28 MongoDB: update document success. Update count: 0 .
[INFO] 08:41:28 MongoDB: update document success. Update count: 1 .
[INFO] 08:41:28 MongoDB: update document success. Update count: 1 .
[INFO] 08:41:28 UserManager: login success .
[INFO] 08:41:28 HttpHandler: command-user_login handle completed .
[INFO] 08:41:28 WsHandler: receive new websocket conn .
[INFO] 08:41:28 WsHandler: receive command, start handle .
[INFO] 08:41:28 MongoDB: collection-class1 exist .
[INFO] 08:41:28 MongoDB: coll_exist?: second time search start .
[INFO] 08:41:28 MongoDB: collection_names_list has been updated .
[INFO] 08:41:28 MongoDB: collection-class1 exist .
[INFO] 08:41:28 MongoDB: try to get document from class/class1 .
[INFO] 08:41:28 MongoDB: parsing the documents, targets: ['isOnline'] .
[INFO] 08:41:28 MongoDB: try to get document from class/class1 .
[INFO] 08:41:28 MongoDB: parsing the documents, targets: ['token'] .
[INFO] 08:41:28 WsHandler: auth success .
[INFO] 08:41:28 WsHandler: start communicate with client-class1 .
[INFO] 08:41:28 WsHandler: start auto_close_conn .
[INFO] 08:42:26 HttpHandler: received http request, start handle... .
[INFO] 08:42:26 HttpHandler: start auth .
[INFO] 08:42:26 MongoDB: collection-class1 exist .
[INFO] 08:42:26 MongoDB: coll_exist?: second time search start .
[INFO] 08:42:26 MongoDB: collection_names_list has been updated .
[INFO] 08:42:26 MongoDB: collection-class1 exist .
[INFO] 08:42:26 HttpHandler: auth completed .
[INFO] 08:42:26 HttpHandler: user_login is allowed, start handle .
[INFO] 08:42:26 LocalCaller: start user_login .
[INFO] 08:42:26 UserManager: Try login class1 .
[INFO] 08:42:26 UserInfoManager: try to get user- class1's password .
[INFO] 08:42:26 MongoDB: try to get document from class/class1 .
[INFO] 08:42:26 MongoDB: parsing the documents, targets: ['password'] .
[INFO] 08:42:26 UserInfoManager: try to get user- class1's user_type .
[INFO] 08:42:26 MongoDB: update document success. Update count: 0 .
[INFO] 08:42:26 MongoDB: update document success. Update count: 1 .
[INFO] 08:42:26 MongoDB: update document success. Update count: 1 .
[INFO] 08:42:26 UserManager: login success .
[INFO] 08:42:26 HttpHandler: command-user_login handle completed .
[INFO] 08:42:26 WsHandler: receive new websocket conn .
[INFO] 08:42:26 WsHandler: receive command, start handle .
[INFO] 08:42:26 MongoDB: collection-class1 exist .
[INFO] 08:42:26 MongoDB: coll_exist?: second time search start .
[INFO] 08:42:26 MongoDB: collection_names_list has been updated .
[INFO] 08:42:26 MongoDB: collection-class1 exist .
[INFO] 08:42:26 MongoDB: try to get document from class/class1 .
[INFO] 08:42:26 MongoDB: parsing the documents, targets: ['isOnline'] .
[INFO] 08:42:26 MongoDB: try to get document from class/class1 .
[INFO] 08:42:26 MongoDB: parsing the documents, targets: ['token'] .
[INFO] 08:42:26 WsHandler: auth success .
[INFO] 08:42:26 WsHandler: start auto_close_conn .
[INFO] 08:42:26 WsHandler: start communicate with client-class1 .
[INFO] 08:45:25 MongoDB: database_names_list has been updated .
[INFO] 08:45:25 MongoDB: database_names_list has been updated .
[INFO] 08:45:25 ######## NL-BACKEND RUN NOW ######## .
[INFO] 08:45:25 BackendInit: now start backend .
[INFO] 08:45:25 WsServer: Start websocket server... .
[INFO] 08:45:25 HttpServer: Start http server... .
[INFO] 08:45:25 WsServer: ServerAddr: ws://0.0.0.0:5024 .
[INFO] 08:45:25 HttpServer: ServerAddr: 0.0.0.0:5000 .
[INFO] 08:45:30 HttpHandler: received http request, start handle... .
[INFO] 08:45:30 HttpHandler: start auth .
[INFO] 08:45:30 MongoDB: coll_exist?: second time search start .
[INFO] 08:45:30 MongoDB: collection_names_list has been updated .
[INFO] 08:45:30 MongoDB: collection-class1 exist .
[INFO] 08:45:30 HttpHandler: auth completed .
[INFO] 08:45:30 HttpHandler: user_login is allowed, start handle .
[INFO] 08:45:30 LocalCaller: start user_login .
[INFO] 08:45:30 UserManager: Try login class1 .
[INFO] 08:45:30 UserInfoManager: try to get user- class1's password .
[INFO] 08:45:30 MongoDB: try to get document from class/class1 .
[INFO] 08:45:30 MongoDB: parsing the documents, targets: ['password'] .
[INFO] 08:45:30 UserInfoManager: try to get user- class1's user_type .
[INFO] 08:45:30 MongoDB: update document success. Update count: 0 .
[INFO] 08:45:30 MongoDB: update document success. Update count: 1 .
[INFO] 08:45:30 MongoDB: update document success. Update count: 1 .
[INFO] 08:45:30 UserManager: login success .
[INFO] 08:45:30 HttpHandler: command-user_login handle completed .
[INFO] 08:45:31 WsHandler: receive new websocket conn .
[INFO] 08:45:31 WsHandler: receive command, start handle .
[INFO] 08:45:31 MongoDB: collection-class1 exist .
[INFO] 08:45:31 MongoDB: coll_exist?: second time search start .
[INFO] 08:45:31 MongoDB: collection_names_list has been updated .
[INFO] 08:45:31 MongoDB: collection-class1 exist .
[INFO] 08:45:31 MongoDB: try to get document from class/class1 .
[INFO] 08:45:31 MongoDB: parsing the documents, targets: ['isOnline'] .
[INFO] 08:45:31 MongoDB: try to get document from class/class1 .
[INFO] 08:45:31 MongoDB: parsing the documents, targets: ['token'] .
[INFO] 08:45:31 WsHandler: auth success .
[INFO] 08:45:31 WsHandler: start auto_close_conn .
[INFO] 08:45:31 WsHandler: start communicate with client-class1 .
[INFO] 08:46:36 HttpHandler: received http request, start handle... .
[INFO] 08:46:36 HttpHandler: start auth .
[INFO] 08:46:36 MongoDB: collection-class1 exist .
[INFO] 08:46:36 MongoDB: coll_exist?: second time search start .
[INFO] 08:46:36 MongoDB: collection_names_list has been updated .
[INFO] 08:46:36 MongoDB: collection-class1 exist .
[INFO] 08:46:36 HttpHandler: auth completed .
[INFO] 08:46:36 HttpHandler: user_login is allowed, start handle .
[INFO] 08:46:36 LocalCaller: start user_login .
[INFO] 08:46:36 UserManager: Try login class1 .
[INFO] 08:46:36 UserInfoManager: try to get user- class1's password .
[INFO] 08:46:36 MongoDB: try to get document from class/class1 .
[INFO] 08:46:36 MongoDB: parsing the documents, targets: ['password'] .
[INFO] 08:46:36 UserInfoManager: try to get user- class1's user_type .
[INFO] 08:46:36 MongoDB: update document success. Update count: 0 .
[INFO] 08:46:36 MongoDB: update document success. Update count: 1 .
[INFO] 08:46:36 MongoDB: update document success. Update count: 1 .
[INFO] 08:46:36 UserManager: login success .
[INFO] 08:46:36 HttpHandler: command-user_login handle completed .
[INFO] 08:46:36 WsHandler: receive new websocket conn .
[INFO] 08:46:36 WsHandler: receive command, start handle .
[INFO] 08:46:36 MongoDB: collection-class1 exist .
[INFO] 08:46:36 MongoDB: coll_exist?: second time search start .
[INFO] 08:46:36 MongoDB: collection_names_list has been updated .
[INFO] 08:46:36 MongoDB: collection-class1 exist .
[INFO] 08:46:36 MongoDB: try to get document from class/class1 .
[INFO] 08:46:36 MongoDB: parsing the documents, targets: ['isOnline'] .
[INFO] 08:46:36 MongoDB: try to get document from class/class1 .
[INFO] 08:46:36 MongoDB: parsing the documents, targets: ['token'] .
[INFO] 08:46:36 WsHandler: auth success .
[INFO] 08:46:36 WsHandler: start communicate with client-class1 .
[INFO] 08:46:36 WsHandler: start auto_close_conn .
[INFO] 08:51:42 MongoDB: database_names_list has been updated .
[INFO] 08:51:42 MongoDB: database_names_list has been updated .
[INFO] 08:51:42 ######## NL-BACKEND RUN NOW ######## .
[INFO] 08:51:42 BackendInit: now start backend .
[INFO] 08:51:42 HttpServer: Start http server... .
[INFO] 08:51:42 WsServer: Start websocket server... .
[INFO] 08:51:42 HttpServer: ServerAddr: 0.0.0.0:5000 .
[INFO] 08:51:42 WsServer: ServerAddr: ws://0.0.0.0:5024 .
[INFO] 08:51:47 HttpHandler: received http request, start handle... .
[INFO] 08:51:47 HttpHandler: start auth .
[INFO] 08:51:47 MongoDB: coll_exist?: second time search start .
[INFO] 08:51:47 MongoDB: collection_names_list has been updated .
[INFO] 08:51:47 MongoDB: collection-class1 exist .
[INFO] 08:51:47 HttpHandler: auth completed .
[INFO] 08:51:47 HttpHandler: user_login is allowed, start handle .
[INFO] 08:51:47 LocalCaller: start user_login .
[INFO] 08:51:47 UserManager: Try login class1 .
[INFO] 08:51:47 UserInfoManager: try to get user- class1's password .
[INFO] 08:51:47 MongoDB: try to get document from class/class1 .
[INFO] 08:51:47 MongoDB: parsing the documents, targets: ['password'] .
[INFO] 08:51:47 UserInfoManager: try to get user- class1's user_type .
[INFO] 08:51:47 MongoDB: update document success. Update count: 0 .
[INFO] 08:51:47 MongoDB: update document success. Update count: 1 .
[INFO] 08:51:47 MongoDB: update document success. Update count: 1 .
[INFO] 08:51:47 UserManager: login success .
[INFO] 08:51:47 HttpHandler: command-user_login handle completed .
[INFO] 08:51:47 WsHandler: receive new websocket conn .
[INFO] 08:51:47 WsHandler: receive command, start handle .
[INFO] 08:51:47 MongoDB: collection-class1 exist .
[INFO] 08:51:47 MongoDB: coll_exist?: second time search start .
[INFO] 08:51:47 MongoDB: collection_names_list has been updated .
[INFO] 08:51:47 MongoDB: collection-class1 exist .
[INFO] 08:51:47 MongoDB: try to get document from class/class1 .
[INFO] 08:51:47 MongoDB: parsing the documents, targets: ['isOnline'] .
[INFO] 08:51:47 MongoDB: try to get document from class/class1 .
[INFO] 08:51:47 MongoDB: parsing the documents, targets: ['token'] .
[INFO] 08:51:47 WsHandler: auth success .
[INFO] 08:51:47 WsHandler: start communicate with client-class1 .
[INFO] 08:51:47 WsHandler: start auto_close_conn .
[INFO] 08:52:13 WsHandler: receive message from client-class1, start handle .
[INFO] 08:54:28 MongoDB: database_names_list has been updated .
[INFO] 08:54:28 MongoDB: database_names_list has been updated .
[INFO] 08:54:28 ######## NL-BACKEND RUN NOW ######## .
[INFO] 08:54:28 BackendInit: now start backend .
[INFO] 08:54:28 HttpServer: Start http server... .
[INFO] 08:54:28 WsServer: Start websocket server... .
[INFO] 08:54:28 HttpServer: ServerAddr: 0.0.0.0:5000 .
[INFO] 08:54:28 WsServer: ServerAddr: ws://0.0.0.0:5024 .
[INFO] 08:54:38 HttpHandler: received http request, start handle... .
[INFO] 08:54:38 HttpHandler: start auth .
[INFO] 08:54:38 MongoDB: coll_exist?: second time search start .
[INFO] 08:54:38 MongoDB: collection_names_list has been updated .
[INFO] 08:54:38 MongoDB: collection-class1 exist .
[INFO] 08:54:38 HttpHandler: auth completed .
[INFO] 08:54:38 HttpHandler: user_login is allowed, start handle .
[INFO] 08:54:38 LocalCaller: start user_login .
[INFO] 08:54:38 UserManager: Try login class1 .
[INFO] 08:54:38 UserInfoManager: try to get user- class1's password .
[INFO] 08:54:38 MongoDB: try to get document from class/class1 .
[INFO] 08:54:38 MongoDB: parsing the documents, targets: ['password'] .
[INFO] 08:54:38 UserInfoManager: try to get user- class1's user_type .
[INFO] 08:54:38 MongoDB: update document success. Update count: 0 .
[INFO] 08:54:38 MongoDB: update document success. Update count: 1 .
[INFO] 08:54:38 MongoDB: update document success. Update count: 1 .
[INFO] 08:54:38 UserManager: login success .
[INFO] 08:54:38 HttpHandler: command-user_login handle completed .
[INFO] 08:54:38 WsHandler: receive new websocket conn .
[INFO] 08:54:38 WsHandler: receive command, start handle .
[INFO] 08:54:38 MongoDB: collection-class1 exist .
[INFO] 08:54:38 MongoDB: coll_exist?: second time search start .
[INFO] 08:54:38 MongoDB: collection_names_list has been updated .
[INFO] 08:54:38 MongoDB: collection-class1 exist .
[INFO] 08:54:38 MongoDB: try to get document from class/class1 .
[INFO] 08:54:38 MongoDB: parsing the documents, targets: ['isOnline'] .
[INFO] 08:54:38 MongoDB: try to get document from class/class1 .
[INFO] 08:54:38 MongoDB: parsing the documents, targets: ['token'] .
[INFO] 08:54:38 WsHandler: auth success .
[INFO] 08:54:38 WsHandler: start communicate with client-class1 .
[INFO] 08:54:38 WsHandler: start auto_close_conn .
[INFO] 08:54:38 WsHandler: receive message from client-class1, start handle .
[ERROR] 08:54:38 WsHandler: wrong format of message .
[INFO] 09:01:25 MongoDB: database_names_list has been updated .
[INFO] 09:01:25 MongoDB: database_names_list has been updated .
[INFO] 09:01:25 ######## NL-BACKEND RUN NOW ######## .
[INFO] 09:01:25 BackendInit: now start backend .
[INFO] 09:01:25 WsServer: Start websocket server... .
[INFO] 09:01:25 HttpServer: Start http server... .
[INFO] 09:01:25 HttpServer: ServerAddr: 0.0.0.0:5000 .
[INFO] 09:01:25 WsServer: ServerAddr: ws://0.0.0.0:5024 .
[INFO] 09:01:34 HttpHandler: received http request, start handle... .
[INFO] 09:01:34 HttpHandler: start auth .
[INFO] 09:01:34 MongoDB: coll_exist?: second time search start .
[INFO] 09:01:34 MongoDB: collection_names_list has been updated .
[INFO] 09:01:34 MongoDB: collection-class1 exist .
[INFO] 09:01:34 HttpHandler: auth completed .
[INFO] 09:01:34 HttpHandler: user_login is allowed, start handle .
[INFO] 09:01:34 LocalCaller: start user_login .
[INFO] 09:01:34 UserManager: Try login class1 .
[INFO] 09:01:34 UserInfoManager: try to get user- class1's password .
[INFO] 09:01:34 MongoDB: try to get document from class/class1 .
[INFO] 09:01:34 MongoDB: parsing the documents, targets: ['password'] .
[INFO] 09:01:34 UserInfoManager: try to get user- class1's user_type .
[INFO] 09:01:34 MongoDB: update document success. Update count: 0 .
[INFO] 09:01:34 MongoDB: update document success. Update count: 1 .
[INFO] 09:01:34 MongoDB: update document success. Update count: 1 .
[INFO] 09:01:34 UserManager: login success .
[INFO] 09:01:34 HttpHandler: command-user_login handle completed .
[INFO] 09:01:34 WsHandler: receive new websocket conn .
[INFO] 09:01:34 WsHandler: receive command, start handle .
[INFO] 09:01:34 MongoDB: collection-class1 exist .
[INFO] 09:01:34 MongoDB: coll_exist?: second time search start .
[INFO] 09:01:34 MongoDB: collection_names_list has been updated .
[INFO] 09:01:34 MongoDB: collection-class1 exist .
[INFO] 09:01:34 MongoDB: try to get document from class/class1 .
[INFO] 09:01:34 MongoDB: parsing the documents, targets: ['isOnline'] .
[INFO] 09:01:34 MongoDB: try to get document from class/class1 .
[INFO] 09:01:34 MongoDB: parsing the documents, targets: ['token'] .
[INFO] 09:01:34 WsHandler: auth success .
[INFO] 09:01:34 WsHandler: start auto_close_conn .
[INFO] 09:01:34 WsHandler: start communicate with client-class1 .
[INFO] 09:01:34 WsHandler: receive message from client-class1, start handle .
[ERROR] 09:01:44 WsHandler: wrong format of message .
[INFO] 09:02:04 WsHandler: receive message from client-class1, start handle .
[ERROR] 09:02:09 WsHandler: wrong format of message .
[INFO] 09:04:20 MongoDB: database_names_list has been updated .
[INFO] 09:04:20 MongoDB: database_names_list has been updated .
[INFO] 09:04:20 ######## NL-BACKEND RUN NOW ######## .
[INFO] 09:04:20 BackendInit: now start backend .
[INFO] 09:04:20 HttpServer: Start http server... .
[INFO] 09:04:20 WsServer: Start websocket server... .
[INFO] 09:04:20 HttpServer: ServerAddr: 0.0.0.0:5000 .
[INFO] 09:04:20 WsServer: ServerAddr: ws://0.0.0.0:5024 .
[INFO] 09:05:44 HttpHandler: received http request, start handle... .
[INFO] 09:05:44 HttpHandler: start auth .
[INFO] 09:05:44 MongoDB: coll_exist?: second time search start .
[INFO] 09:05:44 MongoDB: collection_names_list has been updated .
[INFO] 09:05:44 MongoDB: collection-class1 exist .
[INFO] 09:05:44 HttpHandler: auth completed .
[INFO] 09:05:44 HttpHandler: user_login is allowed, start handle .
[INFO] 09:05:44 LocalCaller: start user_login .
[INFO] 09:05:44 UserManager: Try login class1 .
[INFO] 09:05:44 UserInfoManager: try to get user- class1's password .
[INFO] 09:05:44 MongoDB: try to get document from class/class1 .
[INFO] 09:05:44 MongoDB: parsing the documents, targets: ['password'] .
[INFO] 09:05:44 UserInfoManager: try to get user- class1's user_type .
[INFO] 09:05:44 MongoDB: update document success. Update count: 0 .
[INFO] 09:05:44 MongoDB: update document success. Update count: 1 .
[INFO] 09:05:44 MongoDB: update document success. Update count: 1 .
[INFO] 09:05:44 UserManager: login success .
[INFO] 09:05:44 HttpHandler: command-user_login handle completed .
[INFO] 09:05:44 WsHandler: receive new websocket conn .
[INFO] 09:05:44 WsHandler: receive command, start handle .
[INFO] 09:05:44 MongoDB: collection-class1 exist .
[INFO] 09:05:44 MongoDB: coll_exist?: second time search start .
[INFO] 09:05:44 MongoDB: collection_names_list has been updated .
[INFO] 09:05:44 MongoDB: collection-class1 exist .
[INFO] 09:05:44 MongoDB: try to get document from class/class1 .
[INFO] 09:05:44 MongoDB: parsing the documents, targets: ['isOnline'] .
[INFO] 09:05:44 MongoDB: try to get document from class/class1 .
[INFO] 09:05:44 MongoDB: parsing the documents, targets: ['token'] .
[INFO] 09:05:44 WsHandler: auth success .
[INFO] 09:05:44 WsHandler: start communicate with client-class1 .
[INFO] 09:05:44 WsHandler: start auto_close_conn .
[INFO] 09:05:44 WsHandler: receive message from client-class1, start handle .
[INFO] 09:05:44 WsHandler: empty param .
[INFO] 09:05:44 WsHandler: recv_command-heartbeat from client-class1 .
[INFO] 09:06:14 WsHandler: receive message from client-class1, start handle .
[INFO] 09:06:14 WsHandler: empty param .
[INFO] 09:06:14 WsHandler: recv_command-heartbeat from client-class1 .
[INFO] 09:08:22 MongoDB: database_names_list has been updated .
[INFO] 09:08:22 MongoDB: database_names_list has been updated .
[INFO] 09:08:22 ######## NL-BACKEND RUN NOW ######## .
[INFO] 09:08:22 BackendInit: now start backend .
[INFO] 09:08:22 WsServer: Start websocket server... .
[INFO] 09:08:22 HttpServer: Start http server... .
[INFO] 09:08:22 HttpServer: ServerAddr: 0.0.0.0:5000 .
[INFO] 09:08:22 WsServer: ServerAddr: ws://0.0.0.0:5024 .
[INFO] 09:08:29 HttpHandler: received http request, start handle... .
[INFO] 09:08:29 HttpHandler: start auth .
[INFO] 09:08:29 MongoDB: coll_exist?: second time search start .
[INFO] 09:08:29 MongoDB: collection_names_list has been updated .
[INFO] 09:08:29 MongoDB: collection-class1 exist .
[INFO] 09:08:29 HttpHandler: auth completed .
[INFO] 09:08:29 HttpHandler: user_login is allowed, start handle .
[INFO] 09:08:29 LocalCaller: start user_login .
[INFO] 09:08:29 UserManager: Try login class1 .
[INFO] 09:08:29 UserInfoManager: try to get user- class1's password .
[INFO] 09:08:29 MongoDB: try to get document from class/class1 .
[INFO] 09:08:29 MongoDB: parsing the documents, targets: ['password'] .
[INFO] 09:08:29 UserInfoManager: try to get user- class1's user_type .
[INFO] 09:08:30 MongoDB: update document success. Update count: 0 .
[INFO] 09:08:30 MongoDB: update document success. Update count: 1 .
[INFO] 09:08:30 MongoDB: update document success. Update count: 1 .
[INFO] 09:08:30 UserManager: login success .
[INFO] 09:08:30 HttpHandler: command-user_login handle completed .
[INFO] 09:08:30 WsHandler: receive new websocket conn .
[INFO] 09:08:30 WsHandler: receive command, start handle .
[INFO] 09:08:30 MongoDB: collection-class1 exist .
[INFO] 09:08:30 MongoDB: coll_exist?: second time search start .
[INFO] 09:08:30 MongoDB: collection_names_list has been updated .
[INFO] 09:08:30 MongoDB: collection-class1 exist .
[INFO] 09:08:30 MongoDB: try to get document from class/class1 .
[INFO] 09:08:30 MongoDB: parsing the documents, targets: ['isOnline'] .
[INFO] 09:08:30 MongoDB: try to get document from class/class1 .
[INFO] 09:08:30 MongoDB: parsing the documents, targets: ['token'] .
[INFO] 09:08:30 WsHandler: auth success .
[INFO] 09:08:30 WsHandler: start auto_close_conn .
[INFO] 09:08:30 WsHandler: start communicate with client-class1 .
[INFO] 09:08:30 WsHandler: receive message from client-class1, start handle .
[INFO] 09:08:30 WsHandler: empty param .
[INFO] 09:08:30 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 09:08:30 WsHandler: client-class1 heartbeat success .
[INFO] 09:09:00 WsHandler: receive message from client-class1, start handle .
[INFO] 09:09:00 WsHandler: empty param .
[INFO] 09:09:00 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 09:09:00 WsHandler: client-class1 heartbeat success .
[INFO] 09:12:27 HttpHandler: received http request, start handle... .
[INFO] 09:12:27 HttpHandler: start auth .
[INFO] 09:12:27 MongoDB: collection-class1 exist .
[INFO] 09:12:27 MongoDB: coll_exist?: second time search start .
[INFO] 09:12:27 MongoDB: collection_names_list has been updated .
[INFO] 09:12:27 MongoDB: collection-class1 exist .
[INFO] 09:12:27 HttpHandler: auth completed .
[INFO] 09:12:27 HttpHandler: user_login is allowed, start handle .
[INFO] 09:12:27 LocalCaller: start user_login .
[INFO] 09:12:27 UserManager: Try login class1 .
[INFO] 09:12:27 UserInfoManager: try to get user- class1's password .
[INFO] 09:12:27 MongoDB: try to get document from class/class1 .
[INFO] 09:12:27 MongoDB: parsing the documents, targets: ['password'] .
[INFO] 09:12:27 UserInfoManager: try to get user- class1's user_type .
[INFO] 09:12:27 MongoDB: update document success. Update count: 0 .
[INFO] 09:12:27 MongoDB: update document success. Update count: 1 .
[INFO] 09:12:27 MongoDB: update document success. Update count: 1 .
[INFO] 09:12:27 UserManager: login success .
[INFO] 09:12:27 HttpHandler: command-user_login handle completed .
[INFO] 09:12:27 WsHandler: receive new websocket conn .
[INFO] 09:12:27 WsHandler: receive command, start handle .
[INFO] 09:12:27 MongoDB: collection-class1 exist .
[INFO] 09:12:27 MongoDB: coll_exist?: second time search start .
[INFO] 09:12:27 MongoDB: collection_names_list has been updated .
[INFO] 09:12:27 MongoDB: collection-class1 exist .
[INFO] 09:12:27 MongoDB: try to get document from class/class1 .
[INFO] 09:12:27 MongoDB: parsing the documents, targets: ['isOnline'] .
[INFO] 09:12:27 MongoDB: try to get document from class/class1 .
[INFO] 09:12:27 MongoDB: parsing the documents, targets: ['token'] .
[INFO] 09:12:27 WsHandler: auth success .
[INFO] 09:12:27 WsHandler: start auto_close_conn .
[INFO] 09:12:27 WsHandler: start communicate with client-class1 .
[INFO] 09:15:08 HttpHandler: received http request, start handle... .
[INFO] 09:15:08 HttpHandler: start auth .
[INFO] 09:15:08 MongoDB: collection-class1 exist .
[INFO] 09:15:08 MongoDB: coll_exist?: second time search start .
[INFO] 09:15:08 MongoDB: collection_names_list has been updated .
[INFO] 09:15:08 MongoDB: collection-class1 exist .
[INFO] 09:15:08 HttpHandler: auth completed .
[INFO] 09:15:08 HttpHandler: user_login is allowed, start handle .
[INFO] 09:15:08 LocalCaller: start user_login .
[INFO] 09:15:08 UserManager: Try login class1 .
[INFO] 09:15:08 UserInfoManager: try to get user- class1's password .
[INFO] 09:15:08 MongoDB: try to get document from class/class1 .
[INFO] 09:15:08 MongoDB: parsing the documents, targets: ['password'] .
[INFO] 09:15:08 UserInfoManager: try to get user- class1's user_type .
[INFO] 09:15:08 MongoDB: update document success. Update count: 0 .
[INFO] 09:15:08 MongoDB: update document success. Update count: 1 .
[INFO] 09:15:08 MongoDB: update document success. Update count: 1 .
[INFO] 09:15:08 UserManager: login success .
[INFO] 09:15:08 HttpHandler: command-user_login handle completed .
[INFO] 09:15:08 WsHandler: receive new websocket conn .
[INFO] 09:15:08 WsHandler: receive command, start handle .
[INFO] 09:15:08 MongoDB: collection-class1 exist .
[INFO] 09:15:08 MongoDB: coll_exist?: second time search start .
[INFO] 09:15:08 MongoDB: collection_names_list has been updated .
[INFO] 09:15:08 MongoDB: collection-class1 exist .
[INFO] 09:15:08 MongoDB: try to get document from class/class1 .
[INFO] 09:15:08 MongoDB: parsing the documents, targets: ['isOnline'] .
[INFO] 09:15:08 MongoDB: try to get document from class/class1 .
[INFO] 09:15:08 MongoDB: parsing the documents, targets: ['token'] .
[INFO] 09:15:08 WsHandler: auth success .
[INFO] 09:15:08 WsHandler: start communicate with client-class1 .
[INFO] 09:15:08 WsHandler: start auto_close_conn .
[INFO] 09:15:54 HttpHandler: received http request, start handle... .
[INFO] 09:15:54 HttpHandler: start auth .
[INFO] 09:15:54 MongoDB: collection-class1 exist .
[INFO] 09:15:54 MongoDB: coll_exist?: second time search start .
[INFO] 09:15:54 MongoDB: collection_names_list has been updated .
[INFO] 09:15:54 MongoDB: collection-class1 exist .
[INFO] 09:15:54 HttpHandler: auth completed .
[INFO] 09:15:54 HttpHandler: user_login is allowed, start handle .
[INFO] 09:15:54 LocalCaller: start user_login .
[INFO] 09:15:54 UserManager: Try login class1 .
[INFO] 09:15:54 UserInfoManager: try to get user- class1's password .
[INFO] 09:15:54 MongoDB: try to get document from class/class1 .
[INFO] 09:15:54 MongoDB: parsing the documents, targets: ['password'] .
[INFO] 09:15:54 UserInfoManager: try to get user- class1's user_type .
[INFO] 09:15:54 MongoDB: update document success. Update count: 0 .
[INFO] 09:15:54 MongoDB: update document success. Update count: 1 .
[INFO] 09:15:54 MongoDB: update document success. Update count: 1 .
[INFO] 09:15:54 UserManager: login success .
[INFO] 09:15:54 HttpHandler: command-user_login handle completed .
[INFO] 09:15:54 WsHandler: receive new websocket conn .
[INFO] 09:15:54 WsHandler: receive command, start handle .
[INFO] 09:15:54 MongoDB: collection-class1 exist .
[INFO] 09:15:54 MongoDB: coll_exist?: second time search start .
[INFO] 09:15:54 MongoDB: collection_names_list has been updated .
[INFO] 09:15:54 MongoDB: collection-class1 exist .
[INFO] 09:15:54 MongoDB: try to get document from class/class1 .
[INFO] 09:15:54 MongoDB: parsing the documents, targets: ['isOnline'] .
[INFO] 09:15:54 MongoDB: try to get document from class/class1 .
[INFO] 09:15:54 MongoDB: parsing the documents, targets: ['token'] .
[INFO] 09:15:54 WsHandler: auth success .
[INFO] 09:15:54 WsHandler: start auto_close_conn .
[INFO] 09:15:54 WsHandler: start communicate with client-class1 .
[INFO] 09:19:10 HttpHandler: received http request, start handle... .
[INFO] 09:19:10 HttpHandler: start auth .
[INFO] 09:19:10 MongoDB: collection-class1 exist .
[INFO] 09:19:10 MongoDB: coll_exist?: second time search start .
[INFO] 09:19:10 MongoDB: collection_names_list has been updated .
[INFO] 09:19:10 MongoDB: collection-class1 exist .
[INFO] 09:19:10 HttpHandler: auth completed .
[INFO] 09:19:10 HttpHandler: user_login is allowed, start handle .
[INFO] 09:19:10 LocalCaller: start user_login .
[INFO] 09:19:10 UserManager: Try login class1 .
[INFO] 09:19:10 UserInfoManager: try to get user- class1's password .
[INFO] 09:19:10 MongoDB: try to get document from class/class1 .
[INFO] 09:19:10 MongoDB: parsing the documents, targets: ['password'] .
[INFO] 09:19:10 UserInfoManager: try to get user- class1's user_type .
[INFO] 09:19:10 MongoDB: update document success. Update count: 0 .
[INFO] 09:19:10 MongoDB: update document success. Update count: 1 .
[INFO] 09:19:10 MongoDB: update document success. Update count: 1 .
[INFO] 09:19:10 UserManager: login success .
[INFO] 09:19:10 HttpHandler: command-user_login handle completed .
[INFO] 09:19:10 WsHandler: receive new websocket conn .
[INFO] 09:19:10 WsHandler: receive command, start handle .
[INFO] 09:19:10 MongoDB: collection-class1 exist .
[INFO] 09:19:10 MongoDB: coll_exist?: second time search start .
[INFO] 09:19:10 MongoDB: collection_names_list has been updated .
[INFO] 09:19:10 MongoDB: collection-class1 exist .
[INFO] 09:19:10 MongoDB: try to get document from class/class1 .
[INFO] 09:19:10 MongoDB: parsing the documents, targets: ['isOnline'] .
[INFO] 09:19:10 MongoDB: try to get document from class/class1 .
[INFO] 09:19:10 MongoDB: parsing the documents, targets: ['token'] .
[INFO] 09:19:10 WsHandler: auth success .
[INFO] 09:19:10 WsHandler: start auto_close_conn .
[INFO] 09:19:10 WsHandler: start communicate with client-class1 .
[INFO] 09:21:47 HttpHandler: received http request, start handle... .
[INFO] 09:21:47 HttpHandler: start auth .
[INFO] 09:21:47 MongoDB: collection-class1 exist .
[INFO] 09:21:47 MongoDB: coll_exist?: second time search start .
[INFO] 09:21:47 MongoDB: collection_names_list has been updated .
[INFO] 09:21:47 MongoDB: collection-class1 exist .
[INFO] 09:21:47 HttpHandler: auth completed .
[INFO] 09:21:47 HttpHandler: user_login is allowed, start handle .
[INFO] 09:21:47 LocalCaller: start user_login .
[INFO] 09:21:47 UserManager: Try login class1 .
[INFO] 09:21:47 UserInfoManager: try to get user- class1's password .
[INFO] 09:21:47 MongoDB: try to get document from class/class1 .
[INFO] 09:21:47 MongoDB: parsing the documents, targets: ['password'] .
[INFO] 09:21:47 UserInfoManager: try to get user- class1's user_type .
[INFO] 09:21:47 MongoDB: update document success. Update count: 0 .
[INFO] 09:21:47 MongoDB: update document success. Update count: 1 .
[INFO] 09:21:47 MongoDB: update document success. Update count: 1 .
[INFO] 09:21:47 UserManager: login success .
[INFO] 09:21:47 HttpHandler: command-user_login handle completed .
[INFO] 09:21:47 WsHandler: receive new websocket conn .
[INFO] 09:21:47 WsHandler: receive command, start handle .
[INFO] 09:21:47 MongoDB: collection-class1 exist .
[INFO] 09:21:47 MongoDB: coll_exist?: second time search start .
[INFO] 09:21:47 MongoDB: collection_names_list has been updated .
[INFO] 09:21:47 MongoDB: collection-class1 exist .
[INFO] 09:21:47 MongoDB: try to get document from class/class1 .
[INFO] 09:21:47 MongoDB: parsing the documents, targets: ['isOnline'] .
[INFO] 09:21:47 MongoDB: try to get document from class/class1 .
[INFO] 09:21:47 MongoDB: parsing the documents, targets: ['token'] .
[INFO] 09:21:47 WsHandler: auth success .
[INFO] 09:21:47 WsHandler: start auto_close_conn .
[INFO] 09:21:47 WsHandler: start communicate with client-class1 .
[INFO] 10:23:43 MongoDB: database_names_list has been updated .
[INFO] 10:23:43 MongoDB: database_names_list has been updated .
[INFO] 10:23:43 ######## NL-BACKEND RUN NOW ######## .
[INFO] 10:23:43 BackendInit: now start backend .
[INFO] 10:23:43 WsServer: Start websocket server... .
[INFO] 10:23:43 HttpServer: Start http server... .
[INFO] 10:23:43 WsServer: ServerAddr: ws://0.0.0.0:5024 .
[INFO] 10:23:43 HttpServer: ServerAddr: 0.0.0.0:5000 .
[INFO] 10:30:52 MongoDB: database_names_list has been updated .
[INFO] 10:30:53 MongoDB: database_names_list has been updated .
[INFO] 10:30:53 ######## NL-BACKEND RUN NOW ######## .
[INFO] 10:30:53 BackendInit: now start backend .
[INFO] 10:30:53 HttpServer: Start http server... .
[INFO] 10:30:53 WsServer: Start websocket server... .
[INFO] 10:30:53 HttpServer: ServerAddr: 0.0.0.0:5000 .
[INFO] 10:30:53 WsServer: ServerAddr: ws://0.0.0.0:5024 .
[INFO] 10:31:06 HttpHandler: received http request, start handle... .
[INFO] 10:31:06 HttpHandler: start auth .
[INFO] 10:31:06 MongoDB: coll_exist?: second time search start .
[INFO] 10:31:06 MongoDB: collection_names_list has been updated .
[INFO] 10:31:06 MongoDB: collection-class1 exist .
[INFO] 10:31:06 HttpHandler: auth completed .
[INFO] 10:31:06 HttpHandler: user_login is allowed, start handle .
[INFO] 10:31:06 LocalCaller: start user_login .
[INFO] 10:31:06 UserManager: Try login class1 .
[INFO] 10:31:06 UserInfoManager: try to get user- class1's password .
[INFO] 10:31:06 MongoDB: try to get document from class/class1 .
[INFO] 10:31:06 MongoDB: parsing the documents, targets: ['password'] .
[INFO] 10:31:06 UserInfoManager: try to get user- class1's user_type .
[INFO] 10:31:06 MongoDB: update document success. Update count: 0 .
[INFO] 10:31:06 MongoDB: update document success. Update count: 1 .
[INFO] 10:31:06 MongoDB: update document success. Update count: 1 .
[INFO] 10:31:06 UserManager: login success .
[INFO] 10:31:06 HttpHandler: command-user_login handle completed .
[INFO] 10:31:32 HttpHandler: received http request, start handle... .
[INFO] 10:31:32 HttpHandler: start auth .
[INFO] 10:31:32 MongoDB: collection-class1 exist .
[INFO] 10:31:32 MongoDB: coll_exist?: second time search start .
[INFO] 10:31:32 MongoDB: collection_names_list has been updated .
[INFO] 10:31:32 MongoDB: collection-class1 exist .
[INFO] 10:31:32 HttpHandler: auth completed .
[INFO] 10:31:32 HttpHandler: user_login is allowed, start handle .
[INFO] 10:31:32 LocalCaller: start user_login .
[INFO] 10:31:32 UserManager: Try login class1 .
[INFO] 10:31:32 UserInfoManager: try to get user- class1's password .
[INFO] 10:31:32 MongoDB: try to get document from class/class1 .
[INFO] 10:31:32 MongoDB: parsing the documents, targets: ['password'] .
[INFO] 10:31:32 UserInfoManager: try to get user- class1's user_type .
[INFO] 10:31:32 MongoDB: update document success. Update count: 0 .
[INFO] 10:31:32 MongoDB: update document success. Update count: 1 .
[INFO] 10:31:32 MongoDB: update document success. Update count: 1 .
[INFO] 10:31:32 UserManager: login success .
[INFO] 10:31:32 HttpHandler: command-user_login handle completed .
[INFO] 10:33:22 HttpHandler: received http request, start handle... .
[INFO] 10:33:22 HttpHandler: start auth .
[INFO] 10:33:22 MongoDB: collection-class1 exist .
[INFO] 10:33:22 MongoDB: coll_exist?: second time search start .
[INFO] 10:33:22 MongoDB: collection_names_list has been updated .
[INFO] 10:33:22 MongoDB: collection-class1 exist .
[INFO] 10:33:22 HttpHandler: auth completed .
[INFO] 10:33:22 HttpHandler: user_login is allowed, start handle .
[INFO] 10:33:22 LocalCaller: start user_login .
[INFO] 10:33:22 UserManager: Try login class1 .
[INFO] 10:33:22 UserInfoManager: try to get user- class1's password .
[INFO] 10:33:22 MongoDB: try to get document from class/class1 .
[INFO] 10:33:22 MongoDB: parsing the documents, targets: ['password'] .
[INFO] 10:33:22 UserInfoManager: try to get user- class1's user_type .
[INFO] 10:33:22 MongoDB: update document success. Update count: 0 .
[INFO] 10:33:22 MongoDB: update document success. Update count: 1 .
[INFO] 10:33:22 MongoDB: update document success. Update count: 1 .
[INFO] 10:33:22 UserManager: login success .
[INFO] 10:33:22 HttpHandler: command-user_login handle completed .
[INFO] 10:35:08 MongoDB: database_names_list has been updated .
[INFO] 10:35:08 MongoDB: database_names_list has been updated .
[INFO] 10:35:08 ######## NL-BACKEND RUN NOW ######## .
[INFO] 10:35:08 BackendInit: now start backend .
[INFO] 10:35:08 HttpServer: Start http server... .
[INFO] 10:35:08 WsServer: Start websocket server... .
[INFO] 10:35:08 HttpServer: ServerAddr: 0.0.0.0:5000 .
[INFO] 10:35:08 WsServer: ServerAddr: ws://0.0.0.0:5024 .
[INFO] 10:35:45 MongoDB: database_names_list has been updated .
[INFO] 10:35:45 MongoDB: database_names_list has been updated .
[INFO] 10:35:45 ######## NL-BACKEND RUN NOW ######## .
[INFO] 10:35:45 BackendInit: now start backend .
[INFO] 10:35:45 HttpServer: Start http server... .
[INFO] 10:35:45 WsServer: Start websocket server... .
[INFO] 10:35:45 HttpServer: ServerAddr: 0.0.0.0:5000 .
[INFO] 10:35:45 WsServer: ServerAddr: ws://0.0.0.0:5024 .
[INFO] 10:36:30 MongoDB: database_names_list has been updated .
[INFO] 10:36:30 MongoDB: database_names_list has been updated .
[INFO] 10:36:30 ######## NL-BACKEND RUN NOW ######## .
[INFO] 10:36:30 BackendInit: now start backend .
[INFO] 10:36:30 WsServer: Start websocket server... .
[INFO] 10:36:30 HttpServer: Start http server... .
[INFO] 10:36:30 WsServer: ServerAddr: ws://0.0.0.0:5024 .
[INFO] 10:36:30 HttpServer: ServerAddr: 0.0.0.0:5000 .
[INFO] 10:38:04 MongoDB: database_names_list has been updated .
[INFO] 10:38:04 MongoDB: database_names_list has been updated .
[INFO] 10:38:04 ######## NL-BACKEND RUN NOW ######## .
[INFO] 10:38:04 BackendInit: now start backend .
[INFO] 10:38:04 HttpServer: Start http server... .
[INFO] 10:38:04 WsServer: Start websocket server... .
[INFO] 10:38:04 WsServer: ServerAddr: ws://0.0.0.0:5024 .
[INFO] 10:38:04 HttpServer: ServerAddr: 0.0.0.0:5000 .
[INFO] 10:48:14 MongoDB: database_names_list has been updated .
[INFO] 10:48:14 MongoDB: database_names_list has been updated .
[INFO] 10:48:14 ######## NL-BACKEND RUN NOW ######## .
[INFO] 10:48:14 BackendInit: now start backend .
[INFO] 10:48:14 HttpServer: Start http server... .
[INFO] 10:48:14 WsServer: Start websocket server... .
[INFO] 10:48:14 WsServer: ServerAddr: ws://0.0.0.0:5024 .
[INFO] 10:48:14 HttpServer: ServerAddr: 0.0.0.0:5000 .
[INFO] 10:48:23 HttpHandler: received http request, start handle... .
[INFO] 10:48:23 HttpHandler: start auth .
[INFO] 10:48:23 MongoDB: coll_exist?: second time search start .
[INFO] 10:48:23 MongoDB: collection_names_list has been updated .
[INFO] 10:48:23 MongoDB: collection-class1 exist .
[INFO] 10:48:23 HttpHandler: auth completed .
[INFO] 10:48:23 HttpHandler: user_login is allowed, start handle .
[INFO] 10:48:23 LocalCaller: start user_login .
[INFO] 10:48:23 UserManager: Try login class1 .
[INFO] 10:48:23 UserInfoManager: try to get user- class1's password .
[INFO] 10:48:23 MongoDB: try to get document from class/class1 .
[INFO] 10:48:23 MongoDB: parsing the documents, targets: ['password'] .
[INFO] 10:48:23 UserInfoManager: try to get user- class1's user_type .
[INFO] 10:48:23 MongoDB: update document success. Update count: 0 .
[INFO] 10:48:23 MongoDB: update document success. Update count: 1 .
[INFO] 10:48:23 MongoDB: update document success. Update count: 1 .
[INFO] 10:48:23 UserManager: login success .
[INFO] 10:48:23 HttpHandler: command-user_login handle completed .
[INFO] 10:49:36 MongoDB: database_names_list has been updated .
[INFO] 10:49:36 MongoDB: database_names_list has been updated .
[INFO] 10:49:36 ######## NL-BACKEND RUN NOW ######## .
[INFO] 10:49:36 BackendInit: now start backend .
[INFO] 10:49:36 HttpServer: Start http server... .
[INFO] 10:49:36 WsServer: Start websocket server... .
[INFO] 10:49:36 HttpServer: ServerAddr: 0.0.0.0:5000 .
[INFO] 10:49:36 WsServer: ServerAddr: ws://0.0.0.0:5024 .
[INFO] 10:49:43 MongoDB: database_names_list has been updated .
[INFO] 10:49:43 MongoDB: database_names_list has been updated .
[INFO] 10:49:43 ######## NL-BACKEND RUN NOW ######## .
[INFO] 10:49:43 BackendInit: now start backend .
[INFO] 10:49:43 HttpServer: Start http server... .
[INFO] 10:49:43 WsServer: Start websocket server... .
[INFO] 10:49:43 HttpServer: ServerAddr: 0.0.0.0:5000 .
[INFO] 10:49:43 WsServer: ServerAddr: ws://0.0.0.0:5024 .
[INFO] 10:50:33 MongoDB: database_names_list has been updated .
[INFO] 10:50:33 MongoDB: database_names_list has been updated .
[INFO] 10:50:33 ######## NL-BACKEND RUN NOW ######## .
[INFO] 10:50:33 BackendInit: now start backend .
[INFO] 10:50:33 WsServer: Start websocket server... .
[INFO] 10:50:33 HttpServer: Start http server... .
[INFO] 10:50:33 WsServer: ServerAddr: ws://0.0.0.0:5024 .
[INFO] 10:50:33 HttpServer: ServerAddr: 0.0.0.0:5000 .
[INFO] 10:51:02 MongoDB: database_names_list has been updated .
[INFO] 10:51:02 MongoDB: database_names_list has been updated .
[INFO] 10:51:02 ######## NL-BACKEND RUN NOW ######## .
[INFO] 10:51:02 BackendInit: now start backend .
[INFO] 10:51:02 HttpServer: Start http server... .
[INFO] 10:51:02 WsServer: Start websocket server... .
[INFO] 10:51:02 HttpServer: ServerAddr: 0.0.0.0:5000 .
[INFO] 10:51:02 WsServer: ServerAddr: ws://0.0.0.0:5024 .
[INFO] 10:51:33 MongoDB: database_names_list has been updated .
[INFO] 10:51:33 MongoDB: database_names_list has been updated .
[INFO] 10:51:33 ######## NL-BACKEND RUN NOW ######## .
[INFO] 10:51:33 BackendInit: now start backend .
[INFO] 10:51:33 HttpServer: Start http server... .
[INFO] 10:51:33 WsServer: Start websocket server... .
[INFO] 10:51:33 WsServer: ServerAddr: ws://0.0.0.0:5024 .
[INFO] 10:51:33 HttpServer: ServerAddr: 0.0.0.0:5000 .
[INFO] 10:51:48 HttpHandler: received http request, start handle... .
[INFO] 10:51:48 HttpHandler: start auth .
[INFO] 10:51:48 MongoDB: coll_exist?: second time search start .
[INFO] 10:51:48 MongoDB: collection_names_list has been updated .
[INFO] 10:51:48 MongoDB: collection-class1 exist .
[INFO] 10:51:48 HttpHandler: auth completed .
[INFO] 10:51:48 HttpHandler: user_login is allowed, start handle .
[INFO] 10:51:48 LocalCaller: start user_login .
[INFO] 10:51:48 UserManager: Try login class1 .
[INFO] 10:51:48 UserInfoManager: try to get user- class1's password .
[INFO] 10:51:48 MongoDB: try to get document from class/class1 .
[INFO] 10:51:48 MongoDB: parsing the documents, targets: ['password'] .
[INFO] 10:51:48 UserInfoManager: try to get user- class1's user_type .
[INFO] 10:51:48 MongoDB: update document success. Update count: 0 .
[INFO] 10:51:48 MongoDB: update document success. Update count: 1 .
[INFO] 10:51:48 MongoDB: update document success. Update count: 1 .
[INFO] 10:51:48 UserManager: login success .
[INFO] 10:51:48 HttpHandler: command-user_login handle completed .
[INFO] 10:52:47 MongoDB: database_names_list has been updated .
[INFO] 10:52:47 MongoDB: database_names_list has been updated .
[INFO] 10:52:47 ######## NL-BACKEND RUN NOW ######## .
[INFO] 10:52:47 BackendInit: now start backend .
[INFO] 10:52:47 HttpServer: Start http server... .
[INFO] 10:52:47 WsServer: Start websocket server... .
[INFO] 10:52:47 HttpServer: ServerAddr: 0.0.0.0:5000 .
[INFO] 10:52:47 WsServer: ServerAddr: ws://0.0.0.0:5024 .
[INFO] 10:53:01 HttpHandler: received http request, start handle... .
[INFO] 10:53:01 HttpHandler: start auth .
[INFO] 10:53:01 MongoDB: coll_exist?: second time search start .
[INFO] 10:53:01 MongoDB: collection_names_list has been updated .
[INFO] 10:53:01 MongoDB: collection-class1 exist .
[INFO] 10:53:01 HttpHandler: auth completed .
[INFO] 10:53:01 HttpHandler: user_login is allowed, start handle .
[INFO] 10:53:01 LocalCaller: start user_login .
[INFO] 10:53:01 UserManager: Try login class1 .
[INFO] 10:53:01 UserInfoManager: try to get user- class1's password .
[INFO] 10:53:01 MongoDB: try to get document from class/class1 .
[INFO] 10:53:01 MongoDB: parsing the documents, targets: ['password'] .
[INFO] 10:53:01 UserInfoManager: try to get user- class1's user_type .
[INFO] 10:53:01 MongoDB: update document success. Update count: 0 .
[INFO] 10:53:01 MongoDB: update document success. Update count: 1 .
[INFO] 10:53:01 MongoDB: update document success. Update count: 1 .
[INFO] 10:53:01 UserManager: login success .
[INFO] 10:53:01 HttpHandler: command-user_login handle completed .
[INFO] 10:53:01 WsHandler: receive new websocket conn .
[INFO] 10:53:01 WsHandler: receive command, start handle .
[INFO] 10:53:01 MongoDB: collection-class1 exist .
[INFO] 10:53:01 MongoDB: coll_exist?: second time search start .
[INFO] 10:53:01 MongoDB: collection_names_list has been updated .
[INFO] 10:53:01 MongoDB: collection-class1 exist .
[INFO] 10:53:01 MongoDB: try to get document from class/class1 .
[INFO] 10:53:01 MongoDB: parsing the documents, targets: ['isOnline'] .
[INFO] 10:53:01 MongoDB: try to get document from class/class1 .
[INFO] 10:53:01 MongoDB: parsing the documents, targets: ['token'] .
[INFO] 10:53:01 WsHandler: auth success .
[INFO] 10:53:01 WsHandler: start communicate with client-class1 .
[INFO] 10:53:01 WsHandler: start auto_close_conn .
[INFO] 10:53:01 WsHandler: receive message from client-class1, start handle .
[INFO] 10:53:01 WsHandler: empty param .
[INFO] 10:53:01 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 10:53:01 WsHandler: client-class1 heartbeat success .
[INFO] 10:53:31 WsHandler: receive message from client-class1, start handle .
[INFO] 10:53:31 WsHandler: empty param .
[INFO] 10:53:31 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 10:53:31 WsHandler: client-class1 heartbeat success .
[INFO] 10:53:54 HttpHandler: received http request, start handle... .
[INFO] 10:53:54 HttpHandler: start auth .
[INFO] 10:53:54 MongoDB: collection-class1 exist .
[INFO] 10:53:54 MongoDB: coll_exist?: second time search start .
[INFO] 10:53:54 MongoDB: collection_names_list has been updated .
[INFO] 10:53:54 MongoDB: collection-class1 exist .
[INFO] 10:53:54 HttpHandler: auth completed .
[INFO] 10:53:54 HttpHandler: user_login is allowed, start handle .
[INFO] 10:53:54 LocalCaller: start user_login .
[INFO] 10:53:54 UserManager: Try login class1 .
[INFO] 10:53:54 UserInfoManager: try to get user- class1's password .
[INFO] 10:53:54 MongoDB: try to get document from class/class1 .
[INFO] 10:53:54 MongoDB: parsing the documents, targets: ['password'] .
[INFO] 10:53:54 UserInfoManager: try to get user- class1's user_type .
[INFO] 10:53:54 MongoDB: update document success. Update count: 0 .
[INFO] 10:53:54 MongoDB: update document success. Update count: 1 .
[INFO] 10:53:54 MongoDB: update document success. Update count: 1 .
[INFO] 10:53:54 UserManager: login success .
[INFO] 10:53:54 HttpHandler: command-user_login handle completed .
[INFO] 11:01:30 MongoDB: database_names_list has been updated .
[INFO] 11:01:30 MongoDB: database_names_list has been updated .
[INFO] 11:01:30 ######## NL-BACKEND RUN NOW ######## .
[INFO] 11:01:30 BackendInit: now start backend .
[INFO] 11:01:30 HttpServer: Start http server... .
[INFO] 11:01:30 WsServer: Start websocket server... .
[INFO] 11:01:30 HttpServer: ServerAddr: 0.0.0.0:5000 .
[INFO] 11:01:30 WsServer: socket listening on: 0.0.0.0:5024 .
[INFO] 11:01:38 MongoDB: database_names_list has been updated .
[INFO] 11:01:38 MongoDB: database_names_list has been updated .
[INFO] 11:01:38 ######## NL-BACKEND RUN NOW ######## .
[INFO] 11:01:38 BackendInit: now start backend .
[INFO] 11:01:38 WsServer: Start websocket server... .
[INFO] 11:01:38 WsServer: socket listening on: 0.0.0.0:5024 .
[INFO] 11:01:38 HttpServer: Start http server... .
[INFO] 11:01:38 HttpServer: ServerAddr: 0.0.0.0:5000 .
[INFO] 11:01:38 WsServer: server start, wait for client connecting... .
[INFO] 11:01:49 HttpHandler: received http request, start handle... .
[INFO] 11:01:49 HttpHandler: start auth .
[INFO] 11:01:49 MongoDB: coll_exist?: second time search start .
[INFO] 11:01:49 MongoDB: collection_names_list has been updated .
[INFO] 11:01:49 MongoDB: collection-class1 exist .
[INFO] 11:01:49 HttpHandler: auth completed .
[INFO] 11:01:49 HttpHandler: user_login is allowed, start handle .
[INFO] 11:01:49 LocalCaller: start user_login .
[INFO] 11:01:49 UserManager: Try login class1 .
[INFO] 11:01:49 UserInfoManager: try to get user- class1's password .
[INFO] 11:01:49 MongoDB: try to get document from class/class1 .
[INFO] 11:01:49 MongoDB: parsing the documents, targets: ['password'] .
[INFO] 11:01:49 UserInfoManager: try to get user- class1's user_type .
[INFO] 11:01:49 MongoDB: update document success. Update count: 0 .
[INFO] 11:01:49 MongoDB: update document success. Update count: 1 .
[INFO] 11:01:49 MongoDB: update document success. Update count: 1 .
[INFO] 11:01:49 UserManager: login success .
[INFO] 11:01:49 HttpHandler: command-user_login handle completed .
[INFO] 11:01:49 WsHandler: receive new websocket conn .
[INFO] 11:01:49 WsHandler: receive command, start handle .
[INFO] 11:01:49 MongoDB: collection-class1 exist .
[INFO] 11:01:49 MongoDB: coll_exist?: second time search start .
[INFO] 11:01:49 MongoDB: collection_names_list has been updated .
[INFO] 11:01:49 MongoDB: collection-class1 exist .
[INFO] 11:01:49 MongoDB: try to get document from class/class1 .
[INFO] 11:01:49 MongoDB: parsing the documents, targets: ['isOnline'] .
[INFO] 11:01:49 MongoDB: try to get document from class/class1 .
[INFO] 11:01:49 MongoDB: parsing the documents, targets: ['token'] .
[INFO] 11:01:49 WsHandler: auth success .
[INFO] 11:01:49 WsHandler: start auto_close_conn .
[INFO] 11:01:49 WsHandler: start communicate with client-class1 .
[INFO] 11:01:49 WsHandler: receive message from client-class1, start handle .
[INFO] 11:01:49 WsHandler: empty param .
[INFO] 11:01:49 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:01:49 WsHandler: client-class1 heartbeat success .
[INFO] 11:02:19 WsHandler: receive message from client-class1, start handle .
[INFO] 11:02:19 WsHandler: empty param .
[INFO] 11:02:19 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:02:19 WsHandler: client-class1 heartbeat success .
[INFO] 11:02:49 WsHandler: receive message from client-class1, start handle .
[INFO] 11:02:49 WsHandler: empty param .
[INFO] 11:02:49 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:02:49 WsHandler: client-class1 heartbeat success .
[INFO] 11:02:56 MongoDB: database_names_list has been updated .
[INFO] 11:02:56 MongoDB: database_names_list has been updated .
[INFO] 11:02:56 ######## NL-BACKEND RUN NOW ######## .
[INFO] 11:02:56 BackendInit: now start backend .
[INFO] 11:02:56 HttpServer: Start http server... .
[INFO] 11:02:56 WsServer: Start websocket server... .
[INFO] 11:02:56 WsServer: socket listening on: 0.0.0.0:5024 .
[INFO] 11:02:56 HttpServer: ServerAddr: 0.0.0.0:5000 .
[INFO] 11:02:56 WsServer: server start, wait for client connecting... .
[INFO] 11:03:01 HttpHandler: received http request, start handle... .
[INFO] 11:03:01 HttpHandler: start auth .
[INFO] 11:03:01 MongoDB: coll_exist?: second time search start .
[INFO] 11:03:01 MongoDB: collection_names_list has been updated .
[INFO] 11:03:01 MongoDB: collection-class1 exist .
[INFO] 11:03:01 HttpHandler: auth completed .
[INFO] 11:03:01 HttpHandler: user_login is allowed, start handle .
[INFO] 11:03:01 LocalCaller: start user_login .
[INFO] 11:03:01 UserManager: Try login class1 .
[INFO] 11:03:01 UserInfoManager: try to get user- class1's password .
[INFO] 11:03:01 MongoDB: try to get document from class/class1 .
[INFO] 11:03:01 MongoDB: parsing the documents, targets: ['password'] .
[INFO] 11:03:01 UserInfoManager: try to get user- class1's user_type .
[INFO] 11:03:01 MongoDB: update document success. Update count: 0 .
[INFO] 11:03:01 MongoDB: update document success. Update count: 1 .
[INFO] 11:03:01 MongoDB: update document success. Update count: 1 .
[INFO] 11:03:01 UserManager: login success .
[INFO] 11:03:01 HttpHandler: command-user_login handle completed .
[INFO] 11:03:01 WsHandler: receive new websocket conn .
[INFO] 11:03:01 WsHandler: receive command, start handle .
[INFO] 11:03:01 MongoDB: collection-class1 exist .
[INFO] 11:03:01 MongoDB: coll_exist?: second time search start .
[INFO] 11:03:01 MongoDB: collection_names_list has been updated .
[INFO] 11:03:01 MongoDB: collection-class1 exist .
[INFO] 11:03:01 MongoDB: try to get document from class/class1 .
[INFO] 11:03:01 MongoDB: parsing the documents, targets: ['isOnline'] .
[INFO] 11:03:01 MongoDB: try to get document from class/class1 .
[INFO] 11:03:01 MongoDB: parsing the documents, targets: ['token'] .
[INFO] 11:03:01 WsHandler: auth success .
[INFO] 11:03:01 WsHandler: start communicate with client-class1 .
[INFO] 11:03:01 WsHandler: start auto_close_conn .
[INFO] 11:03:01 WsHandler: receive message from client-class1, start handle .
[INFO] 11:03:01 WsHandler: empty param .
[INFO] 11:03:01 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:03:01 WsHandler: client-class1 heartbeat success .
[INFO] 11:03:31 WsHandler: receive message from client-class1, start handle .
[INFO] 11:03:31 WsHandler: empty param .
[INFO] 11:03:31 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:03:31 WsHandler: client-class1 heartbeat success .
[INFO] 11:04:01 WsHandler: receive message from client-class1, start handle .
[INFO] 11:04:01 WsHandler: empty param .
[INFO] 11:04:01 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:04:01 WsHandler: client-class1 heartbeat success .
[INFO] 11:04:32 WsHandler: receive message from client-class1, start handle .
[INFO] 11:04:32 WsHandler: empty param .
[INFO] 11:04:32 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:04:32 WsHandler: client-class1 heartbeat success .
[INFO] 11:05:02 WsHandler: receive message from client-class1, start handle .
[INFO] 11:05:02 WsHandler: empty param .
[INFO] 11:05:02 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:05:02 WsHandler: client-class1 heartbeat success .
[INFO] 11:05:32 WsHandler: receive message from client-class1, start handle .
[INFO] 11:05:32 WsHandler: empty param .
[INFO] 11:05:32 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:05:32 WsHandler: client-class1 heartbeat success .
[INFO] 11:06:02 WsHandler: receive message from client-class1, start handle .
[INFO] 11:06:02 WsHandler: empty param .
[INFO] 11:06:02 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:06:02 WsHandler: client-class1 heartbeat success .
[INFO] 11:06:32 WsHandler: receive message from client-class1, start handle .
[INFO] 11:06:32 WsHandler: empty param .
[INFO] 11:06:32 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:06:32 WsHandler: client-class1 heartbeat success .
[INFO] 11:07:02 WsHandler: receive message from client-class1, start handle .
[INFO] 11:07:02 WsHandler: empty param .
[INFO] 11:07:02 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:07:02 WsHandler: client-class1 heartbeat success .
[INFO] 11:07:32 WsHandler: receive message from client-class1, start handle .
[INFO] 11:07:32 WsHandler: empty param .
[INFO] 11:07:32 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:07:32 WsHandler: client-class1 heartbeat success .
[INFO] 11:08:02 WsHandler: receive message from client-class1, start handle .
[INFO] 11:08:02 WsHandler: empty param .
[INFO] 11:08:02 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:08:02 WsHandler: client-class1 heartbeat success .
[INFO] 11:08:32 WsHandler: receive message from client-class1, start handle .
[INFO] 11:08:32 WsHandler: empty param .
[INFO] 11:08:32 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:08:32 WsHandler: client-class1 heartbeat success .
[INFO] 11:09:02 WsHandler: receive message from client-class1, start handle .
[INFO] 11:09:02 WsHandler: empty param .
[INFO] 11:09:02 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:09:02 WsHandler: client-class1 heartbeat success .
[INFO] 11:09:32 WsHandler: receive message from client-class1, start handle .
[INFO] 11:09:32 WsHandler: empty param .
[INFO] 11:09:32 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:09:32 WsHandler: client-class1 heartbeat success .
[INFO] 11:10:02 WsHandler: receive message from client-class1, start handle .
[INFO] 11:10:02 WsHandler: empty param .
[INFO] 11:10:02 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:10:02 WsHandler: client-class1 heartbeat success .
[INFO] 11:10:32 WsHandler: receive message from client-class1, start handle .
[INFO] 11:10:32 WsHandler: empty param .
[INFO] 11:10:32 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:10:32 WsHandler: client-class1 heartbeat success .
[INFO] 11:11:02 WsHandler: receive message from client-class1, start handle .
[INFO] 11:11:02 WsHandler: empty param .
[INFO] 11:11:02 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:11:02 WsHandler: client-class1 heartbeat success .
[INFO] 11:11:32 WsHandler: receive message from client-class1, start handle .
[INFO] 11:11:32 WsHandler: empty param .
[INFO] 11:11:32 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:11:32 WsHandler: client-class1 heartbeat success .
[INFO] 11:12:02 WsHandler: receive message from client-class1, start handle .
[INFO] 11:12:02 WsHandler: empty param .
[INFO] 11:12:02 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:12:02 WsHandler: client-class1 heartbeat success .
[INFO] 11:12:32 WsHandler: receive message from client-class1, start handle .
[INFO] 11:12:32 WsHandler: empty param .
[INFO] 11:12:32 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:12:32 WsHandler: client-class1 heartbeat success .
[INFO] 11:13:02 WsHandler: receive message from client-class1, start handle .
[INFO] 11:13:02 WsHandler: empty param .
[INFO] 11:13:02 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:13:02 WsHandler: client-class1 heartbeat success .
[INFO] 11:13:32 WsHandler: receive message from client-class1, start handle .
[INFO] 11:13:32 WsHandler: empty param .
[INFO] 11:13:32 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:13:32 WsHandler: client-class1 heartbeat success .
[INFO] 11:14:02 WsHandler: receive message from client-class1, start handle .
[INFO] 11:14:02 WsHandler: empty param .
[INFO] 11:14:02 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:14:02 WsHandler: client-class1 heartbeat success .
[INFO] 11:14:32 WsHandler: receive message from client-class1, start handle .
[INFO] 11:14:32 WsHandler: empty param .
[INFO] 11:14:32 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:14:32 WsHandler: client-class1 heartbeat success .
[INFO] 11:15:02 WsHandler: receive message from client-class1, start handle .
[INFO] 11:15:02 WsHandler: empty param .
[INFO] 11:15:02 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:15:02 WsHandler: client-class1 heartbeat success .
[INFO] 11:15:32 WsHandler: receive message from client-class1, start handle .
[INFO] 11:15:32 WsHandler: empty param .
[INFO] 11:15:32 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:15:32 WsHandler: client-class1 heartbeat success .
[INFO] 11:16:02 WsHandler: receive message from client-class1, start handle .
[INFO] 11:16:02 WsHandler: empty param .
[INFO] 11:16:02 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:16:02 WsHandler: client-class1 heartbeat success .
[INFO] 11:16:32 WsHandler: receive message from client-class1, start handle .
[INFO] 11:16:32 WsHandler: empty param .
[INFO] 11:16:32 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:16:32 WsHandler: client-class1 heartbeat success .
[INFO] 11:17:02 WsHandler: receive message from client-class1, start handle .
[INFO] 11:17:02 WsHandler: empty param .
[INFO] 11:17:02 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:17:02 WsHandler: client-class1 heartbeat success .
[INFO] 11:17:32 WsHandler: receive message from client-class1, start handle .
[INFO] 11:17:32 WsHandler: empty param .
[INFO] 11:17:32 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:17:32 WsHandler: client-class1 heartbeat success .
[INFO] 11:18:02 WsHandler: receive message from client-class1, start handle .
[INFO] 11:18:02 WsHandler: empty param .
[INFO] 11:18:02 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:18:02 WsHandler: client-class1 heartbeat success .
[INFO] 11:18:32 WsHandler: receive message from client-class1, start handle .
[INFO] 11:18:32 WsHandler: empty param .
[INFO] 11:18:32 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:18:32 WsHandler: client-class1 heartbeat success .
[INFO] 11:19:02 WsHandler: receive message from client-class1, start handle .
[INFO] 11:19:02 WsHandler: empty param .
[INFO] 11:19:02 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:19:02 WsHandler: client-class1 heartbeat success .
[INFO] 11:19:32 WsHandler: receive message from client-class1, start handle .
[INFO] 11:19:32 WsHandler: empty param .
[INFO] 11:19:32 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:19:32 WsHandler: client-class1 heartbeat success .
[INFO] 11:20:02 WsHandler: receive message from client-class1, start handle .
[INFO] 11:20:02 WsHandler: empty param .
[INFO] 11:20:02 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:20:02 WsHandler: client-class1 heartbeat success .
[INFO] 11:20:32 WsHandler: receive message from client-class1, start handle .
[INFO] 11:20:32 WsHandler: empty param .
[INFO] 11:20:32 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:20:32 WsHandler: client-class1 heartbeat success .
[INFO] 11:21:02 WsHandler: receive message from client-class1, start handle .
[INFO] 11:21:02 WsHandler: empty param .
[INFO] 11:21:02 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:21:02 WsHandler: client-class1 heartbeat success .
[INFO] 11:21:32 WsHandler: receive message from client-class1, start handle .
[INFO] 11:21:32 WsHandler: empty param .
[INFO] 11:21:32 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:21:32 WsHandler: client-class1 heartbeat success .
[INFO] 11:22:02 WsHandler: receive message from client-class1, start handle .
[INFO] 11:22:02 WsHandler: empty param .
[INFO] 11:22:02 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:22:02 WsHandler: client-class1 heartbeat success .
[INFO] 11:22:32 WsHandler: receive message from client-class1, start handle .
[INFO] 11:22:32 WsHandler: empty param .
[INFO] 11:22:32 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:22:32 WsHandler: client-class1 heartbeat success .
[INFO] 11:23:02 WsHandler: receive message from client-class1, start handle .
[INFO] 11:23:02 WsHandler: empty param .
[INFO] 11:23:02 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:23:02 WsHandler: client-class1 heartbeat success .
[INFO] 11:23:32 WsHandler: receive message from client-class1, start handle .
[INFO] 11:23:32 WsHandler: empty param .
[INFO] 11:23:32 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:23:32 WsHandler: client-class1 heartbeat success .
[INFO] 11:24:02 WsHandler: receive message from client-class1, start handle .
[INFO] 11:24:02 WsHandler: empty param .
[INFO] 11:24:02 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:24:02 WsHandler: client-class1 heartbeat success .
[INFO] 11:24:32 WsHandler: receive message from client-class1, start handle .
[INFO] 11:24:32 WsHandler: empty param .
[INFO] 11:24:32 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:24:32 WsHandler: client-class1 heartbeat success .
[INFO] 11:25:02 WsHandler: receive message from client-class1, start handle .
[INFO] 11:25:02 WsHandler: empty param .
[INFO] 11:25:02 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:25:02 WsHandler: client-class1 heartbeat success .
[INFO] 11:25:32 WsHandler: receive message from client-class1, start handle .
[INFO] 11:25:32 WsHandler: empty param .
[INFO] 11:25:32 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:25:32 WsHandler: client-class1 heartbeat success .
[INFO] 11:26:02 WsHandler: receive message from client-class1, start handle .
[INFO] 11:26:02 WsHandler: empty param .
[INFO] 11:26:02 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:26:02 WsHandler: client-class1 heartbeat success .
[INFO] 11:26:32 WsHandler: receive message from client-class1, start handle .
[INFO] 11:26:32 WsHandler: empty param .
[INFO] 11:26:32 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:26:32 WsHandler: client-class1 heartbeat success .
[INFO] 11:27:02 WsHandler: receive message from client-class1, start handle .
[INFO] 11:27:02 WsHandler: empty param .
[INFO] 11:27:02 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:27:02 WsHandler: client-class1 heartbeat success .
[INFO] 11:27:32 WsHandler: receive message from client-class1, start handle .
[INFO] 11:27:32 WsHandler: empty param .
[INFO] 11:27:32 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:27:32 WsHandler: client-class1 heartbeat success .
[INFO] 11:28:02 WsHandler: receive message from client-class1, start handle .
[INFO] 11:28:02 WsHandler: empty param .
[INFO] 11:28:02 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:28:02 WsHandler: client-class1 heartbeat success .
[INFO] 11:28:32 WsHandler: receive message from client-class1, start handle .
[INFO] 11:28:32 WsHandler: empty param .
[INFO] 11:28:32 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:28:32 WsHandler: client-class1 heartbeat success .
[INFO] 11:29:02 WsHandler: receive message from client-class1, start handle .
[INFO] 11:29:02 WsHandler: empty param .
[INFO] 11:29:02 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:29:02 WsHandler: client-class1 heartbeat success .
[INFO] 11:29:32 WsHandler: receive message from client-class1, start handle .
[INFO] 11:29:32 WsHandler: empty param .
[INFO] 11:29:32 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:29:32 WsHandler: client-class1 heartbeat success .
[INFO] 11:30:02 WsHandler: receive message from client-class1, start handle .
[INFO] 11:30:02 WsHandler: empty param .
[INFO] 11:30:02 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:30:02 WsHandler: client-class1 heartbeat success .
[INFO] 11:30:32 WsHandler: receive message from client-class1, start handle .
[INFO] 11:30:32 WsHandler: empty param .
[INFO] 11:30:32 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:30:32 WsHandler: client-class1 heartbeat success .
[INFO] 11:31:02 WsHandler: receive message from client-class1, start handle .
[INFO] 11:31:02 WsHandler: empty param .
[INFO] 11:31:02 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:31:02 WsHandler: client-class1 heartbeat success .
[INFO] 11:31:32 WsHandler: receive message from client-class1, start handle .
[INFO] 11:31:32 WsHandler: empty param .
[INFO] 11:31:32 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:31:32 WsHandler: client-class1 heartbeat success .
[INFO] 11:32:02 WsHandler: receive message from client-class1, start handle .
[INFO] 11:32:02 WsHandler: empty param .
[INFO] 11:32:02 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:32:02 WsHandler: client-class1 heartbeat success .
[INFO] 11:32:32 WsHandler: receive message from client-class1, start handle .
[INFO] 11:32:32 WsHandler: empty param .
[INFO] 11:32:32 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:32:32 WsHandler: client-class1 heartbeat success .
[INFO] 11:33:02 WsHandler: receive message from client-class1, start handle .
[INFO] 11:33:02 WsHandler: empty param .
[INFO] 11:33:02 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:33:02 WsHandler: client-class1 heartbeat success .
[INFO] 11:33:32 WsHandler: receive message from client-class1, start handle .
[INFO] 11:33:32 WsHandler: empty param .
[INFO] 11:33:32 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:33:32 WsHandler: client-class1 heartbeat success .
[INFO] 11:34:02 WsHandler: receive message from client-class1, start handle .
[INFO] 11:34:02 WsHandler: empty param .
[INFO] 11:34:02 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:34:02 WsHandler: client-class1 heartbeat success .
[INFO] 11:34:32 WsHandler: receive message from client-class1, start handle .
[INFO] 11:34:32 WsHandler: empty param .
[INFO] 11:34:32 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:34:32 WsHandler: client-class1 heartbeat success .
[INFO] 11:35:02 WsHandler: receive message from client-class1, start handle .
[INFO] 11:35:02 WsHandler: empty param .
[INFO] 11:35:02 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:35:02 WsHandler: client-class1 heartbeat success .
[INFO] 11:35:32 WsHandler: receive message from client-class1, start handle .
[INFO] 11:35:32 WsHandler: empty param .
[INFO] 11:35:32 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:35:32 WsHandler: client-class1 heartbeat success .
[INFO] 11:36:02 WsHandler: receive message from client-class1, start handle .
[INFO] 11:36:02 WsHandler: empty param .
[INFO] 11:36:02 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:36:02 WsHandler: client-class1 heartbeat success .
[INFO] 11:36:32 WsHandler: receive message from client-class1, start handle .
[INFO] 11:36:32 WsHandler: empty param .
[INFO] 11:36:32 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:36:32 WsHandler: client-class1 heartbeat success .
[INFO] 11:37:02 WsHandler: receive message from client-class1, start handle .
[INFO] 11:37:02 WsHandler: empty param .
[INFO] 11:37:02 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:37:02 WsHandler: client-class1 heartbeat success .
[INFO] 11:37:32 WsHandler: receive message from client-class1, start handle .
[INFO] 11:37:32 WsHandler: empty param .
[INFO] 11:37:32 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:37:32 WsHandler: client-class1 heartbeat success .
[INFO] 11:38:02 WsHandler: receive message from client-class1, start handle .
[INFO] 11:38:02 WsHandler: empty param .
[INFO] 11:38:02 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:38:02 WsHandler: client-class1 heartbeat success .
[INFO] 11:38:32 WsHandler: receive message from client-class1, start handle .
[INFO] 11:38:32 WsHandler: empty param .
[INFO] 11:38:32 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:38:32 WsHandler: client-class1 heartbeat success .
[INFO] 11:39:02 WsHandler: receive message from client-class1, start handle .
[INFO] 11:39:02 WsHandler: empty param .
[INFO] 11:39:02 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:39:02 WsHandler: client-class1 heartbeat success .
[INFO] 11:39:32 WsHandler: receive message from client-class1, start handle .
[INFO] 11:39:32 WsHandler: empty param .
[INFO] 11:39:32 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:39:32 WsHandler: client-class1 heartbeat success .
[INFO] 11:40:02 WsHandler: receive message from client-class1, start handle .
[INFO] 11:40:02 WsHandler: empty param .
[INFO] 11:40:02 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:40:02 WsHandler: client-class1 heartbeat success .
[INFO] 11:40:32 WsHandler: receive message from client-class1, start handle .
[INFO] 11:40:32 WsHandler: empty param .
[INFO] 11:40:32 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:40:32 WsHandler: client-class1 heartbeat success .
[INFO] 11:41:02 WsHandler: receive message from client-class1, start handle .
[INFO] 11:41:02 WsHandler: empty param .
[INFO] 11:41:02 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:41:02 WsHandler: client-class1 heartbeat success .
[INFO] 11:41:32 WsHandler: receive message from client-class1, start handle .
[INFO] 11:41:32 WsHandler: empty param .
[INFO] 11:41:32 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:41:32 WsHandler: client-class1 heartbeat success .
[INFO] 11:42:02 WsHandler: receive message from client-class1, start handle .
[INFO] 11:42:02 WsHandler: empty param .
[INFO] 11:42:02 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:42:02 WsHandler: client-class1 heartbeat success .
[INFO] 11:42:32 WsHandler: receive message from client-class1, start handle .
[INFO] 11:42:32 WsHandler: empty param .
[INFO] 11:42:32 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:42:32 WsHandler: client-class1 heartbeat success .
[INFO] 11:43:02 WsHandler: receive message from client-class1, start handle .
[INFO] 11:43:02 WsHandler: empty param .
[INFO] 11:43:02 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:43:02 WsHandler: client-class1 heartbeat success .
[INFO] 11:43:32 WsHandler: receive message from client-class1, start handle .
[INFO] 11:43:32 WsHandler: empty param .
[INFO] 11:43:32 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:43:32 WsHandler: client-class1 heartbeat success .
[INFO] 11:44:02 WsHandler: receive message from client-class1, start handle .
[INFO] 11:44:02 WsHandler: empty param .
[INFO] 11:44:02 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:44:02 WsHandler: client-class1 heartbeat success .
[INFO] 11:44:32 WsHandler: receive message from client-class1, start handle .
[INFO] 11:44:32 WsHandler: empty param .
[INFO] 11:44:32 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:44:32 WsHandler: client-class1 heartbeat success .
[INFO] 11:45:02 WsHandler: receive message from client-class1, start handle .
[INFO] 11:45:02 WsHandler: empty param .
[INFO] 11:45:02 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:45:02 WsHandler: client-class1 heartbeat success .
[INFO] 11:45:32 WsHandler: receive message from client-class1, start handle .
[INFO] 11:45:32 WsHandler: empty param .
[INFO] 11:45:32 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:45:32 WsHandler: client-class1 heartbeat success .
[INFO] 11:46:02 WsHandler: receive message from client-class1, start handle .
[INFO] 11:46:02 WsHandler: empty param .
[INFO] 11:46:02 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:46:02 WsHandler: client-class1 heartbeat success .
[INFO] 11:46:32 WsHandler: receive message from client-class1, start handle .
[INFO] 11:46:32 WsHandler: empty param .
[INFO] 11:46:32 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:46:32 WsHandler: client-class1 heartbeat success .
[INFO] 11:47:02 WsHandler: receive message from client-class1, start handle .
[INFO] 11:47:02 WsHandler: empty param .
[INFO] 11:47:02 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:47:02 WsHandler: client-class1 heartbeat success .
[INFO] 11:47:32 WsHandler: receive message from client-class1, start handle .
[INFO] 11:47:32 WsHandler: empty param .
[INFO] 11:47:32 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:47:32 WsHandler: client-class1 heartbeat success .
[INFO] 11:48:02 WsHandler: receive message from client-class1, start handle .
[INFO] 11:48:02 WsHandler: empty param .
[INFO] 11:48:02 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:48:02 WsHandler: client-class1 heartbeat success .
[INFO] 11:48:32 WsHandler: receive message from client-class1, start handle .
[INFO] 11:48:32 WsHandler: empty param .
[INFO] 11:48:32 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:48:32 WsHandler: client-class1 heartbeat success .
[INFO] 11:49:02 WsHandler: receive message from client-class1, start handle .
[INFO] 11:49:02 WsHandler: empty param .
[INFO] 11:49:02 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:49:02 WsHandler: client-class1 heartbeat success .
[INFO] 11:49:32 WsHandler: receive message from client-class1, start handle .
[INFO] 11:49:32 WsHandler: empty param .
[INFO] 11:49:32 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:49:32 WsHandler: client-class1 heartbeat success .
[INFO] 11:50:02 WsHandler: receive message from client-class1, start handle .
[INFO] 11:50:02 WsHandler: empty param .
[INFO] 11:50:02 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:50:02 WsHandler: client-class1 heartbeat success .
[INFO] 11:50:32 WsHandler: receive message from client-class1, start handle .
[INFO] 11:50:32 WsHandler: empty param .
[INFO] 11:50:32 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:50:32 WsHandler: client-class1 heartbeat success .
[INFO] 11:51:02 WsHandler: receive message from client-class1, start handle .
[INFO] 11:51:02 WsHandler: empty param .
[INFO] 11:51:02 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:51:02 WsHandler: client-class1 heartbeat success .
[INFO] 11:51:32 WsHandler: receive message from client-class1, start handle .
[INFO] 11:51:32 WsHandler: empty param .
[INFO] 11:51:32 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:51:32 WsHandler: client-class1 heartbeat success .
[INFO] 11:52:02 WsHandler: receive message from client-class1, start handle .
[INFO] 11:52:02 WsHandler: empty param .
[INFO] 11:52:02 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:52:02 WsHandler: client-class1 heartbeat success .
[INFO] 11:52:32 WsHandler: receive message from client-class1, start handle .
[INFO] 11:52:32 WsHandler: empty param .
[INFO] 11:52:32 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:52:32 WsHandler: client-class1 heartbeat success .
[INFO] 11:53:02 WsHandler: receive message from client-class1, start handle .
[INFO] 11:53:02 WsHandler: empty param .
[INFO] 11:53:02 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:53:02 WsHandler: client-class1 heartbeat success .
[INFO] 11:53:32 WsHandler: receive message from client-class1, start handle .
[INFO] 11:53:32 WsHandler: empty param .
[INFO] 11:53:32 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:53:32 WsHandler: client-class1 heartbeat success .
[INFO] 11:54:02 WsHandler: receive message from client-class1, start handle .
[INFO] 11:54:02 WsHandler: empty param .
[INFO] 11:54:02 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:54:02 WsHandler: client-class1 heartbeat success .
[INFO] 11:54:32 WsHandler: receive message from client-class1, start handle .
[INFO] 11:54:32 WsHandler: empty param .
[INFO] 11:54:32 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:54:32 WsHandler: client-class1 heartbeat success .
[INFO] 11:55:02 WsHandler: receive message from client-class1, start handle .
[INFO] 11:55:02 WsHandler: empty param .
[INFO] 11:55:02 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:55:02 WsHandler: client-class1 heartbeat success .
[INFO] 11:55:32 WsHandler: receive message from client-class1, start handle .
[INFO] 11:55:32 WsHandler: empty param .
[INFO] 11:55:32 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:55:32 WsHandler: client-class1 heartbeat success .
[INFO] 11:56:02 WsHandler: receive message from client-class1, start handle .
[INFO] 11:56:02 WsHandler: empty param .
[INFO] 11:56:02 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:56:02 WsHandler: client-class1 heartbeat success .
[INFO] 11:56:32 WsHandler: receive message from client-class1, start handle .
[INFO] 11:56:32 WsHandler: empty param .
[INFO] 11:56:32 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:56:32 WsHandler: client-class1 heartbeat success .
[INFO] 11:57:02 WsHandler: receive message from client-class1, start handle .
[INFO] 11:57:02 WsHandler: empty param .
[INFO] 11:57:02 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:57:02 WsHandler: client-class1 heartbeat success .
[INFO] 11:57:32 WsHandler: receive message from client-class1, start handle .
[INFO] 11:57:32 WsHandler: empty param .
[INFO] 11:57:32 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:57:32 WsHandler: client-class1 heartbeat success .
[INFO] 11:58:02 WsHandler: receive message from client-class1, start handle .
[INFO] 11:58:02 WsHandler: empty param .
[INFO] 11:58:02 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:58:02 WsHandler: client-class1 heartbeat success .
[INFO] 11:58:32 WsHandler: receive message from client-class1, start handle .
[INFO] 11:58:32 WsHandler: empty param .
[INFO] 11:58:32 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:58:32 WsHandler: client-class1 heartbeat success .
[INFO] 11:59:02 WsHandler: receive message from client-class1, start handle .
[INFO] 11:59:02 WsHandler: empty param .
[INFO] 11:59:02 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:59:02 WsHandler: client-class1 heartbeat success .
[INFO] 11:59:32 WsHandler: receive message from client-class1, start handle .
[INFO] 11:59:32 WsHandler: empty param .
[INFO] 11:59:32 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 11:59:32 WsHandler: client-class1 heartbeat success .
[INFO] 12:00:02 WsHandler: receive message from client-class1, start handle .
[INFO] 12:00:02 WsHandler: empty param .
[INFO] 12:00:02 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 12:00:02 WsHandler: client-class1 heartbeat success .
[INFO] 12:00:32 WsHandler: receive message from client-class1, start handle .
[INFO] 12:00:32 WsHandler: empty param .
[INFO] 12:00:32 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 12:00:32 WsHandler: client-class1 heartbeat success .
[INFO] 12:01:02 WsHandler: receive message from client-class1, start handle .
[INFO] 12:01:02 WsHandler: empty param .
[INFO] 12:01:02 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 12:01:02 WsHandler: client-class1 heartbeat success .
[INFO] 12:01:32 WsHandler: receive message from client-class1, start handle .
[INFO] 12:01:32 WsHandler: empty param .
[INFO] 12:01:32 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 12:01:32 WsHandler: client-class1 heartbeat success .
[INFO] 12:02:02 WsHandler: receive message from client-class1, start handle .
[INFO] 12:02:02 WsHandler: empty param .
[INFO] 12:02:02 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 12:02:02 WsHandler: client-class1 heartbeat success .
[INFO] 12:02:32 WsHandler: receive message from client-class1, start handle .
[INFO] 12:02:32 WsHandler: empty param .
[INFO] 12:02:32 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 12:02:32 WsHandler: client-class1 heartbeat success .
[INFO] 12:03:02 WsHandler: receive message from client-class1, start handle .
[INFO] 12:03:02 WsHandler: empty param .
[INFO] 12:03:02 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 12:03:02 WsHandler: client-class1 heartbeat success .
[INFO] 12:03:32 WsHandler: receive message from client-class1, start handle .
[INFO] 12:03:32 WsHandler: empty param .
[INFO] 12:03:32 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 12:03:32 WsHandler: client-class1 heartbeat success .
[INFO] 12:04:02 WsHandler: receive message from client-class1, start handle .
[INFO] 12:04:02 WsHandler: empty param .
[INFO] 12:04:02 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 12:04:02 WsHandler: client-class1 heartbeat success .
[INFO] 12:04:33 WsHandler: receive message from client-class1, start handle .
[INFO] 12:04:33 WsHandler: empty param .
[INFO] 12:04:33 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 12:04:33 WsHandler: client-class1 heartbeat success .
[INFO] 12:05:03 WsHandler: receive message from client-class1, start handle .
[INFO] 12:05:03 WsHandler: empty param .
[INFO] 12:05:03 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 12:05:03 WsHandler: client-class1 heartbeat success .
[INFO] 12:05:33 WsHandler: receive message from client-class1, start handle .
[INFO] 12:05:33 WsHandler: empty param .
[INFO] 12:05:33 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 12:05:33 WsHandler: client-class1 heartbeat success .
[INFO] 12:06:03 WsHandler: receive message from client-class1, start handle .
[INFO] 12:06:03 WsHandler: empty param .
[INFO] 12:06:03 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 12:06:03 WsHandler: client-class1 heartbeat success .
[INFO] 12:06:33 WsHandler: receive message from client-class1, start handle .
[INFO] 12:06:33 WsHandler: empty param .
[INFO] 12:06:33 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 12:06:33 WsHandler: client-class1 heartbeat success .
[INFO] 12:07:03 WsHandler: receive message from client-class1, start handle .
[INFO] 12:07:03 WsHandler: empty param .
[INFO] 12:07:03 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 12:07:03 WsHandler: client-class1 heartbeat success .
[INFO] 12:07:33 WsHandler: receive message from client-class1, start handle .
[INFO] 12:07:33 WsHandler: empty param .
[INFO] 12:07:33 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 12:07:33 WsHandler: client-class1 heartbeat success .
[INFO] 12:08:03 WsHandler: receive message from client-class1, start handle .
[INFO] 12:08:03 WsHandler: empty param .
[INFO] 12:08:03 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 12:08:03 WsHandler: client-class1 heartbeat success .
[INFO] 12:08:33 WsHandler: receive message from client-class1, start handle .
[INFO] 12:08:33 WsHandler: empty param .
[INFO] 12:08:33 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 12:08:33 WsHandler: client-class1 heartbeat success .
[INFO] 12:09:03 WsHandler: receive message from client-class1, start handle .
[INFO] 12:09:03 WsHandler: empty param .
[INFO] 12:09:03 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 12:09:03 WsHandler: client-class1 heartbeat success .
[INFO] 12:21:23 WsHandler: receive message from client-class1, start handle .
[INFO] 12:21:23 WsHandler: empty param .
[INFO] 12:21:23 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 12:21:23 WsHandler: client-class1 heartbeat success .
[INFO] 12:21:53 WsHandler: receive message from client-class1, start handle .
[INFO] 12:21:53 WsHandler: empty param .
[INFO] 12:21:53 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 12:21:53 WsHandler: client-class1 heartbeat success .
[INFO] 12:22:23 WsHandler: receive message from client-class1, start handle .
[INFO] 12:22:23 WsHandler: empty param .
[INFO] 12:22:23 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 12:22:23 WsHandler: client-class1 heartbeat success .
[INFO] 12:22:53 WsHandler: receive message from client-class1, start handle .
[INFO] 12:22:53 WsHandler: empty param .
[INFO] 12:22:53 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 12:22:53 WsHandler: client-class1 heartbeat success .
[INFO] 12:23:23 WsHandler: receive message from client-class1, start handle .
[INFO] 12:23:23 WsHandler: empty param .
[INFO] 12:23:23 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 12:23:23 WsHandler: client-class1 heartbeat success .
[INFO] 12:23:53 WsHandler: receive message from client-class1, start handle .
[INFO] 12:23:53 WsHandler: empty param .
[INFO] 12:23:53 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 12:23:53 WsHandler: client-class1 heartbeat success .
[INFO] 12:24:23 WsHandler: receive message from client-class1, start handle .
[INFO] 12:24:23 WsHandler: empty param .
[INFO] 12:24:23 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 12:24:23 WsHandler: client-class1 heartbeat success .
[INFO] 12:24:54 WsHandler: receive message from client-class1, start handle .
[INFO] 12:24:54 WsHandler: empty param .
[INFO] 12:24:54 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 12:24:54 WsHandler: client-class1 heartbeat success .
[INFO] 12:25:24 WsHandler: receive message from client-class1, start handle .
[INFO] 12:25:24 WsHandler: empty param .
[INFO] 12:25:24 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 12:25:24 WsHandler: client-class1 heartbeat success .
[INFO] 12:25:54 WsHandler: receive message from client-class1, start handle .
[INFO] 12:25:54 WsHandler: empty param .
[INFO] 12:25:54 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 12:25:54 WsHandler: client-class1 heartbeat success .
[INFO] 12:26:24 WsHandler: receive message from client-class1, start handle .
[INFO] 12:26:24 WsHandler: empty param .
[INFO] 12:26:24 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 12:26:24 WsHandler: client-class1 heartbeat success .
[INFO] 12:26:54 WsHandler: receive message from client-class1, start handle .
[INFO] 12:26:54 WsHandler: empty param .
[INFO] 12:26:54 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 12:26:54 WsHandler: client-class1 heartbeat success .
[INFO] 12:27:24 WsHandler: receive message from client-class1, start handle .
[INFO] 12:27:24 WsHandler: empty param .
[INFO] 12:27:24 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 12:27:24 WsHandler: client-class1 heartbeat success .
[INFO] 12:27:54 WsHandler: receive message from client-class1, start handle .
[INFO] 12:27:54 WsHandler: empty param .
[INFO] 12:27:54 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 12:27:54 WsHandler: client-class1 heartbeat success .
[INFO] 12:28:24 WsHandler: receive message from client-class1, start handle .
[INFO] 12:28:24 WsHandler: empty param .
[INFO] 12:28:24 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 12:28:24 WsHandler: client-class1 heartbeat success .
[INFO] 12:28:54 WsHandler: receive message from client-class1, start handle .
[INFO] 12:28:54 WsHandler: empty param .
[INFO] 12:28:54 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 12:28:54 WsHandler: client-class1 heartbeat success .
[INFO] 12:29:24 WsHandler: receive message from client-class1, start handle .
[INFO] 12:29:24 WsHandler: empty param .
[INFO] 12:29:24 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 12:29:24 WsHandler: client-class1 heartbeat success .
[INFO] 12:29:54 WsHandler: receive message from client-class1, start handle .
[INFO] 12:29:54 WsHandler: empty param .
[INFO] 12:29:54 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 12:29:54 WsHandler: client-class1 heartbeat success .
[INFO] 12:30:24 WsHandler: receive message from client-class1, start handle .
[INFO] 12:30:24 WsHandler: empty param .
[INFO] 12:30:24 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 12:30:24 WsHandler: client-class1 heartbeat success .
[INFO] 12:30:54 WsHandler: receive message from client-class1, start handle .
[INFO] 12:30:54 WsHandler: empty param .
[INFO] 12:30:54 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 12:30:54 WsHandler: client-class1 heartbeat success .
[INFO] 12:31:24 WsHandler: receive message from client-class1, start handle .
[INFO] 12:31:24 WsHandler: empty param .
[INFO] 12:31:24 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 12:31:24 WsHandler: client-class1 heartbeat success .
[INFO] 12:31:54 WsHandler: receive message from client-class1, start handle .
[INFO] 12:31:54 WsHandler: empty param .
[INFO] 12:31:54 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 12:31:54 WsHandler: client-class1 heartbeat success .
[INFO] 12:32:24 WsHandler: receive message from client-class1, start handle .
[INFO] 12:32:24 WsHandler: empty param .
[INFO] 12:32:24 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 12:32:24 WsHandler: client-class1 heartbeat success .
[INFO] 12:32:54 WsHandler: receive message from client-class1, start handle .
[INFO] 12:32:54 WsHandler: empty param .
[INFO] 12:32:54 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 12:32:54 WsHandler: client-class1 heartbeat success .
[INFO] 12:33:24 WsHandler: receive message from client-class1, start handle .
[INFO] 12:33:24 WsHandler: empty param .
[INFO] 12:33:24 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 12:33:24 WsHandler: client-class1 heartbeat success .
[INFO] 12:33:54 WsHandler: receive message from client-class1, start handle .
[INFO] 12:33:54 WsHandler: empty param .
[INFO] 12:33:54 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 12:33:54 WsHandler: client-class1 heartbeat success .
[INFO] 12:34:24 WsHandler: receive message from client-class1, start handle .
[INFO] 12:34:24 WsHandler: empty param .
[INFO] 12:34:24 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 12:34:24 WsHandler: client-class1 heartbeat success .
[INFO] 12:34:54 WsHandler: receive message from client-class1, start handle .
[INFO] 12:34:54 WsHandler: empty param .
[INFO] 12:34:54 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 12:34:54 WsHandler: client-class1 heartbeat success .
[INFO] 12:35:24 WsHandler: receive message from client-class1, start handle .
[INFO] 12:35:24 WsHandler: empty param .
[INFO] 12:35:24 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 12:35:24 WsHandler: client-class1 heartbeat success .
[INFO] 12:35:54 WsHandler: receive message from client-class1, start handle .
[INFO] 12:35:54 WsHandler: empty param .
[INFO] 12:35:54 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 12:35:54 WsHandler: client-class1 heartbeat success .
[INFO] 12:36:24 WsHandler: receive message from client-class1, start handle .
[INFO] 12:36:24 WsHandler: empty param .
[INFO] 12:36:24 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 12:36:24 WsHandler: client-class1 heartbeat success .
[INFO] 12:36:54 WsHandler: receive message from client-class1, start handle .
[INFO] 12:36:54 WsHandler: empty param .
[INFO] 12:36:54 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 12:36:54 WsHandler: client-class1 heartbeat success .
[INFO] 12:37:24 WsHandler: receive message from client-class1, start handle .
[INFO] 12:37:24 WsHandler: empty param .
[INFO] 12:37:24 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 12:37:24 WsHandler: client-class1 heartbeat success .
[INFO] 12:37:54 WsHandler: receive message from client-class1, start handle .
[INFO] 12:37:54 WsHandler: empty param .
[INFO] 12:37:54 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 12:37:54 WsHandler: client-class1 heartbeat success .
[INFO] 12:38:24 WsHandler: receive message from client-class1, start handle .
[INFO] 12:38:24 WsHandler: empty param .
[INFO] 12:38:24 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 12:38:24 WsHandler: client-class1 heartbeat success .
[INFO] 12:38:54 WsHandler: receive message from client-class1, start handle .
[INFO] 12:38:54 WsHandler: empty param .
[INFO] 12:38:54 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 12:38:54 WsHandler: client-class1 heartbeat success .
[INFO] 12:39:24 WsHandler: receive message from client-class1, start handle .
[INFO] 12:39:24 WsHandler: empty param .
[INFO] 12:39:24 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 12:39:24 WsHandler: client-class1 heartbeat success .
[INFO] 12:39:54 WsHandler: receive message from client-class1, start handle .
[INFO] 12:39:54 WsHandler: empty param .
[INFO] 12:39:54 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 12:39:54 WsHandler: client-class1 heartbeat success .
[INFO] 12:40:24 WsHandler: receive message from client-class1, start handle .
[INFO] 12:40:24 WsHandler: empty param .
[INFO] 12:40:24 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 12:40:24 WsHandler: client-class1 heartbeat success .
[INFO] 12:40:54 WsHandler: receive message from client-class1, start handle .
[INFO] 12:40:54 WsHandler: empty param .
[INFO] 12:40:54 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 12:40:54 WsHandler: client-class1 heartbeat success .
[INFO] 12:41:24 WsHandler: receive message from client-class1, start handle .
[INFO] 12:41:24 WsHandler: empty param .
[INFO] 12:41:24 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 12:41:24 WsHandler: client-class1 heartbeat success .
[INFO] 12:41:54 WsHandler: receive message from client-class1, start handle .
[INFO] 12:41:54 WsHandler: empty param .
[INFO] 12:41:54 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 12:41:54 WsHandler: client-class1 heartbeat success .
[INFO] 12:42:24 WsHandler: receive message from client-class1, start handle .
[INFO] 12:42:24 WsHandler: empty param .
[INFO] 12:42:24 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 12:42:24 WsHandler: client-class1 heartbeat success .
[INFO] 12:42:54 WsHandler: receive message from client-class1, start handle .
[INFO] 12:42:54 WsHandler: empty param .
[INFO] 12:42:54 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 12:42:54 WsHandler: client-class1 heartbeat success .
[INFO] 12:43:24 WsHandler: receive message from client-class1, start handle .
[INFO] 12:43:24 WsHandler: empty param .
[INFO] 12:43:24 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 12:43:24 WsHandler: client-class1 heartbeat success .
[INFO] 12:43:54 WsHandler: receive message from client-class1, start handle .
[INFO] 12:43:54 WsHandler: empty param .
[INFO] 12:43:54 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 12:43:54 WsHandler: client-class1 heartbeat success .
[INFO] 12:44:24 WsHandler: receive message from client-class1, start handle .
[INFO] 12:44:24 WsHandler: empty param .
[INFO] 12:44:24 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 12:44:24 WsHandler: client-class1 heartbeat success .
[INFO] 12:44:54 WsHandler: receive message from client-class1, start handle .
[INFO] 12:44:54 WsHandler: empty param .
[INFO] 12:44:54 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 12:44:54 WsHandler: client-class1 heartbeat success .
[INFO] 12:45:24 WsHandler: receive message from client-class1, start handle .
[INFO] 12:45:24 WsHandler: empty param .
[INFO] 12:45:24 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 12:45:24 WsHandler: client-class1 heartbeat success .
[INFO] 12:45:54 WsHandler: receive message from client-class1, start handle .
[INFO] 12:45:54 WsHandler: empty param .
[INFO] 12:45:54 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 12:45:54 WsHandler: client-class1 heartbeat success .
[INFO] 12:46:24 WsHandler: receive message from client-class1, start handle .
[INFO] 12:46:24 WsHandler: empty param .
[INFO] 12:46:24 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 12:46:24 WsHandler: client-class1 heartbeat success .
[INFO] 12:46:54 WsHandler: receive message from client-class1, start handle .
[INFO] 12:46:54 WsHandler: empty param .
[INFO] 12:46:54 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 12:46:54 WsHandler: client-class1 heartbeat success .
[INFO] 12:47:24 WsHandler: receive message from client-class1, start handle .
[INFO] 12:47:24 WsHandler: empty param .
[INFO] 12:47:24 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 12:47:24 WsHandler: client-class1 heartbeat success .
[INFO] 12:47:54 WsHandler: receive message from client-class1, start handle .
[INFO] 12:47:54 WsHandler: empty param .
[INFO] 12:47:54 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 12:47:54 WsHandler: client-class1 heartbeat success .
[INFO] 12:48:24 WsHandler: receive message from client-class1, start handle .
[INFO] 12:48:24 WsHandler: empty param .
[INFO] 12:48:24 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 12:48:24 WsHandler: client-class1 heartbeat success .
[INFO] 12:48:54 WsHandler: receive message from client-class1, start handle .
[INFO] 12:48:54 WsHandler: empty param .
[INFO] 12:48:54 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 12:48:54 WsHandler: client-class1 heartbeat success .
[INFO] 12:49:24 WsHandler: receive message from client-class1, start handle .
[INFO] 12:49:24 WsHandler: empty param .
[INFO] 12:49:24 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 12:49:24 WsHandler: client-class1 heartbeat success .
[INFO] 12:49:54 WsHandler: receive message from client-class1, start handle .
[INFO] 12:49:54 WsHandler: empty param .
[INFO] 12:49:54 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 12:49:54 WsHandler: client-class1 heartbeat success .
[INFO] 12:50:24 WsHandler: receive message from client-class1, start handle .
[INFO] 12:50:24 WsHandler: empty param .
[INFO] 12:50:24 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 12:50:24 WsHandler: client-class1 heartbeat success .
[INFO] 12:50:54 WsHandler: receive message from client-class1, start handle .
[INFO] 12:50:54 WsHandler: empty param .
[INFO] 12:50:54 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 12:50:54 WsHandler: client-class1 heartbeat success .
[INFO] 12:51:24 WsHandler: receive message from client-class1, start handle .
[INFO] 12:51:24 WsHandler: empty param .
[INFO] 12:51:24 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 12:51:24 WsHandler: client-class1 heartbeat success .
[INFO] 12:51:54 WsHandler: receive message from client-class1, start handle .
[INFO] 12:51:54 WsHandler: empty param .
[INFO] 12:51:54 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 12:51:54 WsHandler: client-class1 heartbeat success .
[INFO] 12:52:24 WsHandler: receive message from client-class1, start handle .
[INFO] 12:52:24 WsHandler: empty param .
[INFO] 12:52:24 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 12:52:24 WsHandler: client-class1 heartbeat success .
[INFO] 12:52:54 WsHandler: receive message from client-class1, start handle .
[INFO] 12:52:54 WsHandler: empty param .
[INFO] 12:52:54 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 12:52:54 WsHandler: client-class1 heartbeat success .
[INFO] 12:53:24 WsHandler: receive message from client-class1, start handle .
[INFO] 12:53:24 WsHandler: empty param .
[INFO] 12:53:24 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 12:53:24 WsHandler: client-class1 heartbeat success .
[INFO] 12:53:54 WsHandler: receive message from client-class1, start handle .
[INFO] 12:53:54 WsHandler: empty param .
[INFO] 12:53:54 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 12:53:54 WsHandler: client-class1 heartbeat success .
[INFO] 12:54:24 WsHandler: receive message from client-class1, start handle .
[INFO] 12:54:24 WsHandler: empty param .
[INFO] 12:54:24 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 12:54:24 WsHandler: client-class1 heartbeat success .
[INFO] 12:54:54 WsHandler: receive message from client-class1, start handle .
[INFO] 12:54:54 WsHandler: empty param .
[INFO] 12:54:54 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 12:54:54 WsHandler: client-class1 heartbeat success .
[INFO] 12:55:24 WsHandler: receive message from client-class1, start handle .
[INFO] 12:55:24 WsHandler: empty param .
[INFO] 12:55:24 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 12:55:24 WsHandler: client-class1 heartbeat success .
[INFO] 12:55:54 WsHandler: receive message from client-class1, start handle .
[INFO] 12:55:54 WsHandler: empty param .
[INFO] 12:55:54 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 12:55:54 WsHandler: client-class1 heartbeat success .
[INFO] 12:56:24 WsHandler: receive message from client-class1, start handle .
[INFO] 12:56:24 WsHandler: empty param .
[INFO] 12:56:24 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 12:56:24 WsHandler: client-class1 heartbeat success .
[INFO] 12:56:54 WsHandler: receive message from client-class1, start handle .
[INFO] 12:56:54 WsHandler: empty param .
[INFO] 12:56:54 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 12:56:54 WsHandler: client-class1 heartbeat success .
[INFO] 12:57:24 WsHandler: receive message from client-class1, start handle .
[INFO] 12:57:24 WsHandler: empty param .
[INFO] 12:57:24 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 12:57:24 WsHandler: client-class1 heartbeat success .
[INFO] 12:57:54 WsHandler: receive message from client-class1, start handle .
[INFO] 12:57:54 WsHandler: empty param .
[INFO] 12:57:54 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 12:57:54 WsHandler: client-class1 heartbeat success .
[INFO] 12:58:24 WsHandler: receive message from client-class1, start handle .
[INFO] 12:58:24 WsHandler: empty param .
[INFO] 12:58:24 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 12:58:24 WsHandler: client-class1 heartbeat success .
[INFO] 12:58:54 WsHandler: receive message from client-class1, start handle .
[INFO] 12:58:54 WsHandler: empty param .
[INFO] 12:58:54 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 12:58:54 WsHandler: client-class1 heartbeat success .
[INFO] 12:59:24 WsHandler: receive message from client-class1, start handle .
[INFO] 12:59:24 WsHandler: empty param .
[INFO] 12:59:24 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 12:59:24 WsHandler: client-class1 heartbeat success .
[INFO] 12:59:54 WsHandler: receive message from client-class1, start handle .
[INFO] 12:59:54 WsHandler: empty param .
[INFO] 12:59:54 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 12:59:54 WsHandler: client-class1 heartbeat success .
[INFO] 13:00:24 WsHandler: receive message from client-class1, start handle .
[INFO] 13:00:24 WsHandler: empty param .
[INFO] 13:00:24 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:00:24 WsHandler: client-class1 heartbeat success .
[INFO] 13:00:54 WsHandler: receive message from client-class1, start handle .
[INFO] 13:00:54 WsHandler: empty param .
[INFO] 13:00:54 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:00:54 WsHandler: client-class1 heartbeat success .
[INFO] 13:01:24 WsHandler: receive message from client-class1, start handle .
[INFO] 13:01:24 WsHandler: empty param .
[INFO] 13:01:24 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:01:24 WsHandler: client-class1 heartbeat success .
[INFO] 13:01:54 WsHandler: receive message from client-class1, start handle .
[INFO] 13:01:54 WsHandler: empty param .
[INFO] 13:01:54 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:01:54 WsHandler: client-class1 heartbeat success .
[INFO] 13:02:24 WsHandler: receive message from client-class1, start handle .
[INFO] 13:02:24 WsHandler: empty param .
[INFO] 13:02:24 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:02:24 WsHandler: client-class1 heartbeat success .
[INFO] 13:02:54 WsHandler: receive message from client-class1, start handle .
[INFO] 13:02:54 WsHandler: empty param .
[INFO] 13:02:54 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:02:54 WsHandler: client-class1 heartbeat success .
[INFO] 13:03:24 WsHandler: receive message from client-class1, start handle .
[INFO] 13:03:24 WsHandler: empty param .
[INFO] 13:03:24 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:03:24 WsHandler: client-class1 heartbeat success .
[INFO] 13:03:54 WsHandler: receive message from client-class1, start handle .
[INFO] 13:03:54 WsHandler: empty param .
[INFO] 13:03:54 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:03:54 WsHandler: client-class1 heartbeat success .
[INFO] 13:04:24 WsHandler: receive message from client-class1, start handle .
[INFO] 13:04:24 WsHandler: empty param .
[INFO] 13:04:24 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:04:24 WsHandler: client-class1 heartbeat success .
[INFO] 13:04:54 WsHandler: receive message from client-class1, start handle .
[INFO] 13:04:54 WsHandler: empty param .
[INFO] 13:04:54 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:04:54 WsHandler: client-class1 heartbeat success .
[INFO] 13:05:24 WsHandler: receive message from client-class1, start handle .
[INFO] 13:05:24 WsHandler: empty param .
[INFO] 13:05:24 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:05:24 WsHandler: client-class1 heartbeat success .
[INFO] 13:05:54 WsHandler: receive message from client-class1, start handle .
[INFO] 13:05:54 WsHandler: empty param .
[INFO] 13:05:54 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:05:54 WsHandler: client-class1 heartbeat success .
[INFO] 13:06:24 WsHandler: receive message from client-class1, start handle .
[INFO] 13:06:24 WsHandler: empty param .
[INFO] 13:06:24 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:06:24 WsHandler: client-class1 heartbeat success .
[INFO] 13:06:54 WsHandler: receive message from client-class1, start handle .
[INFO] 13:06:54 WsHandler: empty param .
[INFO] 13:06:54 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:06:54 WsHandler: client-class1 heartbeat success .
[INFO] 13:07:24 WsHandler: receive message from client-class1, start handle .
[INFO] 13:07:24 WsHandler: empty param .
[INFO] 13:07:24 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:07:24 WsHandler: client-class1 heartbeat success .
[INFO] 13:07:54 WsHandler: receive message from client-class1, start handle .
[INFO] 13:07:54 WsHandler: empty param .
[INFO] 13:07:54 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:07:54 WsHandler: client-class1 heartbeat success .
[INFO] 13:08:24 WsHandler: receive message from client-class1, start handle .
[INFO] 13:08:24 WsHandler: empty param .
[INFO] 13:08:24 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:08:24 WsHandler: client-class1 heartbeat success .
[INFO] 13:08:54 WsHandler: receive message from client-class1, start handle .
[INFO] 13:08:54 WsHandler: empty param .
[INFO] 13:08:54 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:08:54 WsHandler: client-class1 heartbeat success .
[INFO] 13:09:24 WsHandler: receive message from client-class1, start handle .
[INFO] 13:09:24 WsHandler: empty param .
[INFO] 13:09:24 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:09:24 WsHandler: client-class1 heartbeat success .
[INFO] 13:09:54 WsHandler: receive message from client-class1, start handle .
[INFO] 13:09:54 WsHandler: empty param .
[INFO] 13:09:54 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:09:54 WsHandler: client-class1 heartbeat success .
[INFO] 13:10:24 WsHandler: receive message from client-class1, start handle .
[INFO] 13:10:24 WsHandler: empty param .
[INFO] 13:10:24 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:10:24 WsHandler: client-class1 heartbeat success .
[INFO] 13:10:54 WsHandler: receive message from client-class1, start handle .
[INFO] 13:10:54 WsHandler: empty param .
[INFO] 13:10:54 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:10:54 WsHandler: client-class1 heartbeat success .
[INFO] 13:11:24 WsHandler: receive message from client-class1, start handle .
[INFO] 13:11:24 WsHandler: empty param .
[INFO] 13:11:24 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:11:24 WsHandler: client-class1 heartbeat success .
[INFO] 13:11:54 WsHandler: receive message from client-class1, start handle .
[INFO] 13:11:54 WsHandler: empty param .
[INFO] 13:11:54 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:11:54 WsHandler: client-class1 heartbeat success .
[INFO] 13:12:24 WsHandler: receive message from client-class1, start handle .
[INFO] 13:12:24 WsHandler: empty param .
[INFO] 13:12:24 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:12:24 WsHandler: client-class1 heartbeat success .
[INFO] 13:12:54 WsHandler: receive message from client-class1, start handle .
[INFO] 13:12:54 WsHandler: empty param .
[INFO] 13:12:54 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:12:54 WsHandler: client-class1 heartbeat success .
[INFO] 13:13:24 WsHandler: receive message from client-class1, start handle .
[INFO] 13:13:24 WsHandler: empty param .
[INFO] 13:13:24 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:13:24 WsHandler: client-class1 heartbeat success .
[INFO] 13:13:54 WsHandler: receive message from client-class1, start handle .
[INFO] 13:13:54 WsHandler: empty param .
[INFO] 13:13:54 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:13:54 WsHandler: client-class1 heartbeat success .
[INFO] 13:14:24 WsHandler: receive message from client-class1, start handle .
[INFO] 13:14:24 WsHandler: empty param .
[INFO] 13:14:24 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:14:24 WsHandler: client-class1 heartbeat success .
[INFO] 13:14:54 WsHandler: receive message from client-class1, start handle .
[INFO] 13:14:54 WsHandler: empty param .
[INFO] 13:14:54 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:14:54 WsHandler: client-class1 heartbeat success .
[INFO] 13:15:24 WsHandler: receive message from client-class1, start handle .
[INFO] 13:15:24 WsHandler: empty param .
[INFO] 13:15:24 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:15:24 WsHandler: client-class1 heartbeat success .
[INFO] 13:15:54 WsHandler: receive message from client-class1, start handle .
[INFO] 13:15:54 WsHandler: empty param .
[INFO] 13:15:54 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:15:54 WsHandler: client-class1 heartbeat success .
[INFO] 13:16:24 WsHandler: receive message from client-class1, start handle .
[INFO] 13:16:24 WsHandler: empty param .
[INFO] 13:16:24 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:16:24 WsHandler: client-class1 heartbeat success .
[INFO] 13:16:54 WsHandler: receive message from client-class1, start handle .
[INFO] 13:16:54 WsHandler: empty param .
[INFO] 13:16:54 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:16:54 WsHandler: client-class1 heartbeat success .
[INFO] 13:17:24 WsHandler: receive message from client-class1, start handle .
[INFO] 13:17:24 WsHandler: empty param .
[INFO] 13:17:24 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:17:24 WsHandler: client-class1 heartbeat success .
[INFO] 13:17:54 WsHandler: receive message from client-class1, start handle .
[INFO] 13:17:54 WsHandler: empty param .
[INFO] 13:17:54 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:17:54 WsHandler: client-class1 heartbeat success .
[INFO] 13:18:24 WsHandler: receive message from client-class1, start handle .
[INFO] 13:18:24 WsHandler: empty param .
[INFO] 13:18:24 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:18:24 WsHandler: client-class1 heartbeat success .
[INFO] 13:18:54 WsHandler: receive message from client-class1, start handle .
[INFO] 13:18:54 WsHandler: empty param .
[INFO] 13:18:54 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:18:54 WsHandler: client-class1 heartbeat success .
[INFO] 13:19:24 WsHandler: receive message from client-class1, start handle .
[INFO] 13:19:24 WsHandler: empty param .
[INFO] 13:19:24 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:19:24 WsHandler: client-class1 heartbeat success .
[INFO] 13:19:54 WsHandler: receive message from client-class1, start handle .
[INFO] 13:19:54 WsHandler: empty param .
[INFO] 13:19:54 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:19:54 WsHandler: client-class1 heartbeat success .
[INFO] 13:20:24 WsHandler: receive message from client-class1, start handle .
[INFO] 13:20:24 WsHandler: empty param .
[INFO] 13:20:24 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:20:24 WsHandler: client-class1 heartbeat success .
[INFO] 13:20:54 WsHandler: receive message from client-class1, start handle .
[INFO] 13:20:54 WsHandler: empty param .
[INFO] 13:20:54 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:20:54 WsHandler: client-class1 heartbeat success .
[INFO] 13:21:24 WsHandler: receive message from client-class1, start handle .
[INFO] 13:21:24 WsHandler: empty param .
[INFO] 13:21:24 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:21:24 WsHandler: client-class1 heartbeat success .
[INFO] 13:21:54 WsHandler: receive message from client-class1, start handle .
[INFO] 13:21:54 WsHandler: empty param .
[INFO] 13:21:54 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:21:54 WsHandler: client-class1 heartbeat success .
[INFO] 13:22:24 WsHandler: receive message from client-class1, start handle .
[INFO] 13:22:24 WsHandler: empty param .
[INFO] 13:22:24 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:22:24 WsHandler: client-class1 heartbeat success .
[INFO] 13:22:54 WsHandler: receive message from client-class1, start handle .
[INFO] 13:22:54 WsHandler: empty param .
[INFO] 13:22:54 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:22:54 WsHandler: client-class1 heartbeat success .
[INFO] 13:23:24 WsHandler: receive message from client-class1, start handle .
[INFO] 13:23:24 WsHandler: empty param .
[INFO] 13:23:24 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:23:24 WsHandler: client-class1 heartbeat success .
[INFO] 13:23:54 WsHandler: receive message from client-class1, start handle .
[INFO] 13:23:54 WsHandler: empty param .
[INFO] 13:23:54 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:23:54 WsHandler: client-class1 heartbeat success .
[INFO] 13:24:24 WsHandler: receive message from client-class1, start handle .
[INFO] 13:24:24 WsHandler: empty param .
[INFO] 13:24:24 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:24:24 WsHandler: client-class1 heartbeat success .
[INFO] 13:24:55 WsHandler: receive message from client-class1, start handle .
[INFO] 13:24:55 WsHandler: empty param .
[INFO] 13:24:55 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:24:55 WsHandler: client-class1 heartbeat success .
[INFO] 13:25:25 WsHandler: receive message from client-class1, start handle .
[INFO] 13:25:25 WsHandler: empty param .
[INFO] 13:25:25 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:25:25 WsHandler: client-class1 heartbeat success .
[INFO] 13:25:55 WsHandler: receive message from client-class1, start handle .
[INFO] 13:25:55 WsHandler: empty param .
[INFO] 13:25:55 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:25:55 WsHandler: client-class1 heartbeat success .
[INFO] 13:26:25 WsHandler: receive message from client-class1, start handle .
[INFO] 13:26:25 WsHandler: empty param .
[INFO] 13:26:25 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:26:25 WsHandler: client-class1 heartbeat success .
[INFO] 13:26:55 WsHandler: receive message from client-class1, start handle .
[INFO] 13:26:55 WsHandler: empty param .
[INFO] 13:26:55 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:26:55 WsHandler: client-class1 heartbeat success .
[INFO] 13:27:25 WsHandler: receive message from client-class1, start handle .
[INFO] 13:27:25 WsHandler: empty param .
[INFO] 13:27:25 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:27:25 WsHandler: client-class1 heartbeat success .
[INFO] 13:27:55 WsHandler: receive message from client-class1, start handle .
[INFO] 13:27:55 WsHandler: empty param .
[INFO] 13:27:55 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:27:55 WsHandler: client-class1 heartbeat success .
[INFO] 13:28:25 WsHandler: receive message from client-class1, start handle .
[INFO] 13:28:25 WsHandler: empty param .
[INFO] 13:28:25 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:28:25 WsHandler: client-class1 heartbeat success .
[INFO] 13:28:55 WsHandler: receive message from client-class1, start handle .
[INFO] 13:28:55 WsHandler: empty param .
[INFO] 13:28:55 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:28:55 WsHandler: client-class1 heartbeat success .
[INFO] 13:29:25 WsHandler: receive message from client-class1, start handle .
[INFO] 13:29:25 WsHandler: empty param .
[INFO] 13:29:25 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:29:25 WsHandler: client-class1 heartbeat success .
[INFO] 13:29:55 WsHandler: receive message from client-class1, start handle .
[INFO] 13:29:55 WsHandler: empty param .
[INFO] 13:29:55 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:29:55 WsHandler: client-class1 heartbeat success .
[INFO] 13:30:25 WsHandler: receive message from client-class1, start handle .
[INFO] 13:30:25 WsHandler: empty param .
[INFO] 13:30:25 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:30:25 WsHandler: client-class1 heartbeat success .
[INFO] 13:30:55 WsHandler: receive message from client-class1, start handle .
[INFO] 13:30:55 WsHandler: empty param .
[INFO] 13:30:55 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:30:55 WsHandler: client-class1 heartbeat success .
[INFO] 13:31:25 WsHandler: receive message from client-class1, start handle .
[INFO] 13:31:25 WsHandler: empty param .
[INFO] 13:31:25 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:31:25 WsHandler: client-class1 heartbeat success .
[INFO] 13:31:55 WsHandler: receive message from client-class1, start handle .
[INFO] 13:31:55 WsHandler: empty param .
[INFO] 13:31:55 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:31:55 WsHandler: client-class1 heartbeat success .
[INFO] 13:32:25 WsHandler: receive message from client-class1, start handle .
[INFO] 13:32:25 WsHandler: empty param .
[INFO] 13:32:25 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:32:25 WsHandler: client-class1 heartbeat success .
[INFO] 13:32:55 WsHandler: receive message from client-class1, start handle .
[INFO] 13:32:55 WsHandler: empty param .
[INFO] 13:32:55 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:32:55 WsHandler: client-class1 heartbeat success .
[INFO] 13:33:25 WsHandler: receive message from client-class1, start handle .
[INFO] 13:33:25 WsHandler: empty param .
[INFO] 13:33:25 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:33:25 WsHandler: client-class1 heartbeat success .
[INFO] 13:33:55 WsHandler: receive message from client-class1, start handle .
[INFO] 13:33:55 WsHandler: empty param .
[INFO] 13:33:55 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:33:55 WsHandler: client-class1 heartbeat success .
[INFO] 13:34:25 WsHandler: receive message from client-class1, start handle .
[INFO] 13:34:25 WsHandler: empty param .
[INFO] 13:34:25 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:34:25 WsHandler: client-class1 heartbeat success .
[INFO] 13:34:55 WsHandler: receive message from client-class1, start handle .
[INFO] 13:34:55 WsHandler: empty param .
[INFO] 13:34:55 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:34:55 WsHandler: client-class1 heartbeat success .
[INFO] 13:35:25 WsHandler: receive message from client-class1, start handle .
[INFO] 13:35:25 WsHandler: empty param .
[INFO] 13:35:25 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:35:25 WsHandler: client-class1 heartbeat success .
[INFO] 13:35:55 WsHandler: receive message from client-class1, start handle .
[INFO] 13:35:55 WsHandler: empty param .
[INFO] 13:35:55 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:35:55 WsHandler: client-class1 heartbeat success .
[INFO] 13:36:25 WsHandler: receive message from client-class1, start handle .
[INFO] 13:36:25 WsHandler: empty param .
[INFO] 13:36:25 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:36:25 WsHandler: client-class1 heartbeat success .
[INFO] 13:36:55 WsHandler: receive message from client-class1, start handle .
[INFO] 13:36:55 WsHandler: empty param .
[INFO] 13:36:55 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:36:55 WsHandler: client-class1 heartbeat success .
[INFO] 13:37:25 WsHandler: receive message from client-class1, start handle .
[INFO] 13:37:25 WsHandler: empty param .
[INFO] 13:37:25 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:37:25 WsHandler: client-class1 heartbeat success .
[INFO] 13:37:55 WsHandler: receive message from client-class1, start handle .
[INFO] 13:37:55 WsHandler: empty param .
[INFO] 13:37:55 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:37:55 WsHandler: client-class1 heartbeat success .
[INFO] 13:38:25 WsHandler: receive message from client-class1, start handle .
[INFO] 13:38:25 WsHandler: empty param .
[INFO] 13:38:25 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:38:25 WsHandler: client-class1 heartbeat success .
[INFO] 13:38:55 WsHandler: receive message from client-class1, start handle .
[INFO] 13:38:55 WsHandler: empty param .
[INFO] 13:38:55 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:38:55 WsHandler: client-class1 heartbeat success .
[INFO] 13:39:25 WsHandler: receive message from client-class1, start handle .
[INFO] 13:39:25 WsHandler: empty param .
[INFO] 13:39:25 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:39:25 WsHandler: client-class1 heartbeat success .
[INFO] 13:39:55 WsHandler: receive message from client-class1, start handle .
[INFO] 13:39:55 WsHandler: empty param .
[INFO] 13:39:55 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:39:55 WsHandler: client-class1 heartbeat success .
[INFO] 13:40:25 WsHandler: receive message from client-class1, start handle .
[INFO] 13:40:25 WsHandler: empty param .
[INFO] 13:40:25 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:40:25 WsHandler: client-class1 heartbeat success .
[INFO] 13:40:55 WsHandler: receive message from client-class1, start handle .
[INFO] 13:40:55 WsHandler: empty param .
[INFO] 13:40:55 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:40:55 WsHandler: client-class1 heartbeat success .
[INFO] 13:41:25 WsHandler: receive message from client-class1, start handle .
[INFO] 13:41:25 WsHandler: empty param .
[INFO] 13:41:25 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:41:25 WsHandler: client-class1 heartbeat success .
[INFO] 13:41:55 WsHandler: receive message from client-class1, start handle .
[INFO] 13:41:55 WsHandler: empty param .
[INFO] 13:41:55 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:41:55 WsHandler: client-class1 heartbeat success .
[INFO] 13:42:25 WsHandler: receive message from client-class1, start handle .
[INFO] 13:42:25 WsHandler: empty param .
[INFO] 13:42:25 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:42:25 WsHandler: client-class1 heartbeat success .
[INFO] 13:42:55 WsHandler: receive message from client-class1, start handle .
[INFO] 13:42:55 WsHandler: empty param .
[INFO] 13:42:55 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:42:55 WsHandler: client-class1 heartbeat success .
[INFO] 13:43:25 WsHandler: receive message from client-class1, start handle .
[INFO] 13:43:25 WsHandler: empty param .
[INFO] 13:43:25 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:43:25 WsHandler: client-class1 heartbeat success .
[INFO] 13:43:55 WsHandler: receive message from client-class1, start handle .
[INFO] 13:43:55 WsHandler: empty param .
[INFO] 13:43:55 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:43:55 WsHandler: client-class1 heartbeat success .
[INFO] 13:44:25 WsHandler: receive message from client-class1, start handle .
[INFO] 13:44:25 WsHandler: empty param .
[INFO] 13:44:25 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:44:25 WsHandler: client-class1 heartbeat success .
[INFO] 13:44:55 WsHandler: receive message from client-class1, start handle .
[INFO] 13:44:55 WsHandler: empty param .
[INFO] 13:44:55 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:44:55 WsHandler: client-class1 heartbeat success .
[INFO] 13:45:25 WsHandler: receive message from client-class1, start handle .
[INFO] 13:45:25 WsHandler: empty param .
[INFO] 13:45:25 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:45:25 WsHandler: client-class1 heartbeat success .
[INFO] 13:45:55 WsHandler: receive message from client-class1, start handle .
[INFO] 13:45:55 WsHandler: empty param .
[INFO] 13:45:55 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:45:55 WsHandler: client-class1 heartbeat success .
[INFO] 13:46:25 WsHandler: receive message from client-class1, start handle .
[INFO] 13:46:25 WsHandler: empty param .
[INFO] 13:46:25 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:46:25 WsHandler: client-class1 heartbeat success .
[INFO] 13:46:55 WsHandler: receive message from client-class1, start handle .
[INFO] 13:46:55 WsHandler: empty param .
[INFO] 13:46:55 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:46:55 WsHandler: client-class1 heartbeat success .
[INFO] 13:47:25 WsHandler: receive message from client-class1, start handle .
[INFO] 13:47:25 WsHandler: empty param .
[INFO] 13:47:25 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:47:25 WsHandler: client-class1 heartbeat success .
[INFO] 13:47:55 WsHandler: receive message from client-class1, start handle .
[INFO] 13:47:55 WsHandler: empty param .
[INFO] 13:47:55 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:47:55 WsHandler: client-class1 heartbeat success .
[INFO] 13:48:25 WsHandler: receive message from client-class1, start handle .
[INFO] 13:48:25 WsHandler: empty param .
[INFO] 13:48:25 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:48:25 WsHandler: client-class1 heartbeat success .
[INFO] 13:48:55 WsHandler: receive message from client-class1, start handle .
[INFO] 13:48:55 WsHandler: empty param .
[INFO] 13:48:55 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:48:55 WsHandler: client-class1 heartbeat success .
[INFO] 13:49:25 WsHandler: receive message from client-class1, start handle .
[INFO] 13:49:25 WsHandler: empty param .
[INFO] 13:49:25 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:49:25 WsHandler: client-class1 heartbeat success .
[INFO] 13:49:55 WsHandler: receive message from client-class1, start handle .
[INFO] 13:49:55 WsHandler: empty param .
[INFO] 13:49:55 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:49:55 WsHandler: client-class1 heartbeat success .
[INFO] 13:50:25 WsHandler: receive message from client-class1, start handle .
[INFO] 13:50:25 WsHandler: empty param .
[INFO] 13:50:25 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:50:25 WsHandler: client-class1 heartbeat success .
[INFO] 13:50:55 WsHandler: receive message from client-class1, start handle .
[INFO] 13:50:55 WsHandler: empty param .
[INFO] 13:50:55 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:50:55 WsHandler: client-class1 heartbeat success .
[INFO] 13:51:25 WsHandler: receive message from client-class1, start handle .
[INFO] 13:51:25 WsHandler: empty param .
[INFO] 13:51:25 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:51:25 WsHandler: client-class1 heartbeat success .
[INFO] 13:51:55 WsHandler: receive message from client-class1, start handle .
[INFO] 13:51:55 WsHandler: empty param .
[INFO] 13:51:55 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:51:55 WsHandler: client-class1 heartbeat success .
[INFO] 13:52:25 WsHandler: receive message from client-class1, start handle .
[INFO] 13:52:25 WsHandler: empty param .
[INFO] 13:52:25 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:52:25 WsHandler: client-class1 heartbeat success .
[INFO] 13:52:55 WsHandler: receive message from client-class1, start handle .
[INFO] 13:52:55 WsHandler: empty param .
[INFO] 13:52:55 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:52:55 WsHandler: client-class1 heartbeat success .
[INFO] 13:53:25 WsHandler: receive message from client-class1, start handle .
[INFO] 13:53:25 WsHandler: empty param .
[INFO] 13:53:25 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:53:25 WsHandler: client-class1 heartbeat success .
[INFO] 13:53:55 WsHandler: receive message from client-class1, start handle .
[INFO] 13:53:55 WsHandler: empty param .
[INFO] 13:53:55 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:53:55 WsHandler: client-class1 heartbeat success .
[INFO] 13:54:25 WsHandler: receive message from client-class1, start handle .
[INFO] 13:54:25 WsHandler: empty param .
[INFO] 13:54:25 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:54:25 WsHandler: client-class1 heartbeat success .
[INFO] 13:54:55 WsHandler: receive message from client-class1, start handle .
[INFO] 13:54:55 WsHandler: empty param .
[INFO] 13:54:55 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:54:55 WsHandler: client-class1 heartbeat success .
[INFO] 13:55:25 WsHandler: receive message from client-class1, start handle .
[INFO] 13:55:25 WsHandler: empty param .
[INFO] 13:55:25 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:55:25 WsHandler: client-class1 heartbeat success .
[INFO] 13:55:55 WsHandler: receive message from client-class1, start handle .
[INFO] 13:55:55 WsHandler: empty param .
[INFO] 13:55:55 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:55:55 WsHandler: client-class1 heartbeat success .
[INFO] 13:56:25 WsHandler: receive message from client-class1, start handle .
[INFO] 13:56:25 WsHandler: empty param .
[INFO] 13:56:25 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:56:25 WsHandler: client-class1 heartbeat success .
[INFO] 13:56:55 WsHandler: receive message from client-class1, start handle .
[INFO] 13:56:55 WsHandler: empty param .
[INFO] 13:56:55 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:56:55 WsHandler: client-class1 heartbeat success .
[INFO] 13:57:25 WsHandler: receive message from client-class1, start handle .
[INFO] 13:57:25 WsHandler: empty param .
[INFO] 13:57:25 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:57:25 WsHandler: client-class1 heartbeat success .
[INFO] 13:57:55 WsHandler: receive message from client-class1, start handle .
[INFO] 13:57:55 WsHandler: empty param .
[INFO] 13:57:55 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:57:55 WsHandler: client-class1 heartbeat success .
[INFO] 13:58:25 WsHandler: receive message from client-class1, start handle .
[INFO] 13:58:25 WsHandler: empty param .
[INFO] 13:58:25 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:58:25 WsHandler: client-class1 heartbeat success .
[INFO] 13:58:55 WsHandler: receive message from client-class1, start handle .
[INFO] 13:58:55 WsHandler: empty param .
[INFO] 13:58:55 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:58:55 WsHandler: client-class1 heartbeat success .
[INFO] 13:59:25 WsHandler: receive message from client-class1, start handle .
[INFO] 13:59:25 WsHandler: empty param .
[INFO] 13:59:25 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:59:25 WsHandler: client-class1 heartbeat success .
[INFO] 13:59:55 WsHandler: receive message from client-class1, start handle .
[INFO] 13:59:55 WsHandler: empty param .
[INFO] 13:59:55 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 13:59:55 WsHandler: client-class1 heartbeat success .
[INFO] 14:00:25 WsHandler: receive message from client-class1, start handle .
[INFO] 14:00:25 WsHandler: empty param .
[INFO] 14:00:25 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:00:25 WsHandler: client-class1 heartbeat success .
[INFO] 14:00:55 WsHandler: receive message from client-class1, start handle .
[INFO] 14:00:55 WsHandler: empty param .
[INFO] 14:00:55 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:00:55 WsHandler: client-class1 heartbeat success .
[INFO] 14:01:25 WsHandler: receive message from client-class1, start handle .
[INFO] 14:01:25 WsHandler: empty param .
[INFO] 14:01:25 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:01:25 WsHandler: client-class1 heartbeat success .
[INFO] 14:01:55 WsHandler: receive message from client-class1, start handle .
[INFO] 14:01:55 WsHandler: empty param .
[INFO] 14:01:55 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:01:55 WsHandler: client-class1 heartbeat success .
[INFO] 14:02:25 WsHandler: receive message from client-class1, start handle .
[INFO] 14:02:25 WsHandler: empty param .
[INFO] 14:02:25 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:02:25 WsHandler: client-class1 heartbeat success .
[INFO] 14:02:55 WsHandler: receive message from client-class1, start handle .
[INFO] 14:02:55 WsHandler: empty param .
[INFO] 14:02:55 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:02:55 WsHandler: client-class1 heartbeat success .
[INFO] 14:03:25 WsHandler: receive message from client-class1, start handle .
[INFO] 14:03:25 WsHandler: empty param .
[INFO] 14:03:25 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:03:25 WsHandler: client-class1 heartbeat success .
[INFO] 14:03:55 WsHandler: receive message from client-class1, start handle .
[INFO] 14:03:55 WsHandler: empty param .
[INFO] 14:03:55 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:03:55 WsHandler: client-class1 heartbeat success .
[INFO] 14:04:25 WsHandler: receive message from client-class1, start handle .
[INFO] 14:04:25 WsHandler: empty param .
[INFO] 14:04:25 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:04:25 WsHandler: client-class1 heartbeat success .
[INFO] 14:04:55 WsHandler: receive message from client-class1, start handle .
[INFO] 14:04:55 WsHandler: empty param .
[INFO] 14:04:55 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:04:55 WsHandler: client-class1 heartbeat success .
[INFO] 14:05:25 WsHandler: receive message from client-class1, start handle .
[INFO] 14:05:25 WsHandler: empty param .
[INFO] 14:05:25 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:05:25 WsHandler: client-class1 heartbeat success .
[INFO] 14:05:55 WsHandler: receive message from client-class1, start handle .
[INFO] 14:05:55 WsHandler: empty param .
[INFO] 14:05:55 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:05:55 WsHandler: client-class1 heartbeat success .
[INFO] 14:06:25 WsHandler: receive message from client-class1, start handle .
[INFO] 14:06:25 WsHandler: empty param .
[INFO] 14:06:25 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:06:25 WsHandler: client-class1 heartbeat success .
[INFO] 14:06:55 WsHandler: receive message from client-class1, start handle .
[INFO] 14:06:55 WsHandler: empty param .
[INFO] 14:06:55 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:06:55 WsHandler: client-class1 heartbeat success .
[INFO] 14:07:25 WsHandler: receive message from client-class1, start handle .
[INFO] 14:07:25 WsHandler: empty param .
[INFO] 14:07:25 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:07:25 WsHandler: client-class1 heartbeat success .
[INFO] 14:07:55 WsHandler: receive message from client-class1, start handle .
[INFO] 14:07:55 WsHandler: empty param .
[INFO] 14:07:55 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:07:55 WsHandler: client-class1 heartbeat success .
[INFO] 14:08:25 WsHandler: receive message from client-class1, start handle .
[INFO] 14:08:25 WsHandler: empty param .
[INFO] 14:08:25 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:08:25 WsHandler: client-class1 heartbeat success .
[INFO] 14:08:55 WsHandler: receive message from client-class1, start handle .
[INFO] 14:08:55 WsHandler: empty param .
[INFO] 14:08:55 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:08:55 WsHandler: client-class1 heartbeat success .
[INFO] 14:09:25 WsHandler: receive message from client-class1, start handle .
[INFO] 14:09:25 WsHandler: empty param .
[INFO] 14:09:25 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:09:25 WsHandler: client-class1 heartbeat success .
[INFO] 14:09:55 WsHandler: receive message from client-class1, start handle .
[INFO] 14:09:55 WsHandler: empty param .
[INFO] 14:09:55 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:09:55 WsHandler: client-class1 heartbeat success .
[INFO] 14:10:25 WsHandler: receive message from client-class1, start handle .
[INFO] 14:10:25 WsHandler: empty param .
[INFO] 14:10:25 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:10:25 WsHandler: client-class1 heartbeat success .
[INFO] 14:10:55 WsHandler: receive message from client-class1, start handle .
[INFO] 14:10:55 WsHandler: empty param .
[INFO] 14:10:55 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:10:55 WsHandler: client-class1 heartbeat success .
[INFO] 14:11:25 WsHandler: receive message from client-class1, start handle .
[INFO] 14:11:25 WsHandler: empty param .
[INFO] 14:11:25 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:11:25 WsHandler: client-class1 heartbeat success .
[INFO] 14:11:55 WsHandler: receive message from client-class1, start handle .
[INFO] 14:11:55 WsHandler: empty param .
[INFO] 14:11:55 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:11:55 WsHandler: client-class1 heartbeat success .
[INFO] 14:12:25 WsHandler: receive message from client-class1, start handle .
[INFO] 14:12:25 WsHandler: empty param .
[INFO] 14:12:25 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:12:25 WsHandler: client-class1 heartbeat success .
[INFO] 14:12:55 WsHandler: receive message from client-class1, start handle .
[INFO] 14:12:55 WsHandler: empty param .
[INFO] 14:12:55 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:12:55 WsHandler: client-class1 heartbeat success .
[INFO] 14:13:25 WsHandler: receive message from client-class1, start handle .
[INFO] 14:13:25 WsHandler: empty param .
[INFO] 14:13:25 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:13:25 WsHandler: client-class1 heartbeat success .
[INFO] 14:13:55 WsHandler: receive message from client-class1, start handle .
[INFO] 14:13:55 WsHandler: empty param .
[INFO] 14:13:55 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:13:55 WsHandler: client-class1 heartbeat success .
[INFO] 14:14:25 WsHandler: receive message from client-class1, start handle .
[INFO] 14:14:25 WsHandler: empty param .
[INFO] 14:14:25 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:14:25 WsHandler: client-class1 heartbeat success .
[INFO] 14:14:55 WsHandler: receive message from client-class1, start handle .
[INFO] 14:14:55 WsHandler: empty param .
[INFO] 14:14:55 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:14:55 WsHandler: client-class1 heartbeat success .
[INFO] 14:15:25 WsHandler: receive message from client-class1, start handle .
[INFO] 14:15:25 WsHandler: empty param .
[INFO] 14:15:25 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:15:25 WsHandler: client-class1 heartbeat success .
[INFO] 14:15:55 WsHandler: receive message from client-class1, start handle .
[INFO] 14:15:55 WsHandler: empty param .
[INFO] 14:15:55 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:15:55 WsHandler: client-class1 heartbeat success .
[INFO] 14:16:25 WsHandler: receive message from client-class1, start handle .
[INFO] 14:16:25 WsHandler: empty param .
[INFO] 14:16:25 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:16:25 WsHandler: client-class1 heartbeat success .
[INFO] 14:16:55 WsHandler: receive message from client-class1, start handle .
[INFO] 14:16:55 WsHandler: empty param .
[INFO] 14:16:55 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:16:55 WsHandler: client-class1 heartbeat success .
[INFO] 14:17:25 WsHandler: receive message from client-class1, start handle .
[INFO] 14:17:25 WsHandler: empty param .
[INFO] 14:17:25 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:17:25 WsHandler: client-class1 heartbeat success .
[INFO] 14:17:55 WsHandler: receive message from client-class1, start handle .
[INFO] 14:17:55 WsHandler: empty param .
[INFO] 14:17:55 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:17:55 WsHandler: client-class1 heartbeat success .
[INFO] 14:18:25 WsHandler: receive message from client-class1, start handle .
[INFO] 14:18:25 WsHandler: empty param .
[INFO] 14:18:25 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:18:25 WsHandler: client-class1 heartbeat success .
[INFO] 14:18:55 WsHandler: receive message from client-class1, start handle .
[INFO] 14:18:55 WsHandler: empty param .
[INFO] 14:18:55 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:18:55 WsHandler: client-class1 heartbeat success .
[INFO] 14:19:25 WsHandler: receive message from client-class1, start handle .
[INFO] 14:19:25 WsHandler: empty param .
[INFO] 14:19:25 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:19:25 WsHandler: client-class1 heartbeat success .
[INFO] 14:19:55 WsHandler: receive message from client-class1, start handle .
[INFO] 14:19:55 WsHandler: empty param .
[INFO] 14:19:55 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:19:55 WsHandler: client-class1 heartbeat success .
[INFO] 14:20:25 WsHandler: receive message from client-class1, start handle .
[INFO] 14:20:25 WsHandler: empty param .
[INFO] 14:20:25 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:20:25 WsHandler: client-class1 heartbeat success .
[INFO] 14:20:55 WsHandler: receive message from client-class1, start handle .
[INFO] 14:20:55 WsHandler: empty param .
[INFO] 14:20:55 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:20:55 WsHandler: client-class1 heartbeat success .
[INFO] 14:21:25 WsHandler: receive message from client-class1, start handle .
[INFO] 14:21:25 WsHandler: empty param .
[INFO] 14:21:25 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:21:25 WsHandler: client-class1 heartbeat success .
[INFO] 14:21:56 WsHandler: receive message from client-class1, start handle .
[INFO] 14:21:56 WsHandler: empty param .
[INFO] 14:21:56 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:21:56 WsHandler: client-class1 heartbeat success .
[INFO] 14:22:26 WsHandler: receive message from client-class1, start handle .
[INFO] 14:22:26 WsHandler: empty param .
[INFO] 14:22:26 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:22:26 WsHandler: client-class1 heartbeat success .
[INFO] 14:22:56 WsHandler: receive message from client-class1, start handle .
[INFO] 14:22:56 WsHandler: empty param .
[INFO] 14:22:56 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:22:56 WsHandler: client-class1 heartbeat success .
[INFO] 14:23:26 WsHandler: receive message from client-class1, start handle .
[INFO] 14:23:26 WsHandler: empty param .
[INFO] 14:23:26 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:23:26 WsHandler: client-class1 heartbeat success .
[INFO] 14:23:56 WsHandler: receive message from client-class1, start handle .
[INFO] 14:23:56 WsHandler: empty param .
[INFO] 14:23:56 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:23:56 WsHandler: client-class1 heartbeat success .
[INFO] 14:24:26 WsHandler: receive message from client-class1, start handle .
[INFO] 14:24:26 WsHandler: empty param .
[INFO] 14:24:26 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:24:26 WsHandler: client-class1 heartbeat success .
[INFO] 14:24:56 WsHandler: receive message from client-class1, start handle .
[INFO] 14:24:56 WsHandler: empty param .
[INFO] 14:24:56 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:24:56 WsHandler: client-class1 heartbeat success .
[INFO] 14:25:26 WsHandler: receive message from client-class1, start handle .
[INFO] 14:25:26 WsHandler: empty param .
[INFO] 14:25:26 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:25:26 WsHandler: client-class1 heartbeat success .
[INFO] 14:25:56 WsHandler: receive message from client-class1, start handle .
[INFO] 14:25:56 WsHandler: empty param .
[INFO] 14:25:56 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:25:56 WsHandler: client-class1 heartbeat success .
[INFO] 14:26:26 WsHandler: receive message from client-class1, start handle .
[INFO] 14:26:26 WsHandler: empty param .
[INFO] 14:26:26 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:26:26 WsHandler: client-class1 heartbeat success .
[INFO] 14:26:56 WsHandler: receive message from client-class1, start handle .
[INFO] 14:26:56 WsHandler: empty param .
[INFO] 14:26:56 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:26:56 WsHandler: client-class1 heartbeat success .
[INFO] 14:27:26 WsHandler: receive message from client-class1, start handle .
[INFO] 14:27:26 WsHandler: empty param .
[INFO] 14:27:26 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:27:26 WsHandler: client-class1 heartbeat success .
[INFO] 14:27:56 WsHandler: receive message from client-class1, start handle .
[INFO] 14:27:56 WsHandler: empty param .
[INFO] 14:27:56 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:27:56 WsHandler: client-class1 heartbeat success .
[INFO] 14:28:26 WsHandler: receive message from client-class1, start handle .
[INFO] 14:28:26 WsHandler: empty param .
[INFO] 14:28:26 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:28:26 WsHandler: client-class1 heartbeat success .
[INFO] 14:28:56 WsHandler: receive message from client-class1, start handle .
[INFO] 14:28:56 WsHandler: empty param .
[INFO] 14:28:56 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:28:56 WsHandler: client-class1 heartbeat success .
[INFO] 14:29:26 WsHandler: receive message from client-class1, start handle .
[INFO] 14:29:26 WsHandler: empty param .
[INFO] 14:29:26 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:29:26 WsHandler: client-class1 heartbeat success .
[INFO] 14:29:56 WsHandler: receive message from client-class1, start handle .
[INFO] 14:29:56 WsHandler: empty param .
[INFO] 14:29:56 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:29:56 WsHandler: client-class1 heartbeat success .
[INFO] 14:30:26 WsHandler: receive message from client-class1, start handle .
[INFO] 14:30:26 WsHandler: empty param .
[INFO] 14:30:26 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:30:26 WsHandler: client-class1 heartbeat success .
[INFO] 14:30:56 WsHandler: receive message from client-class1, start handle .
[INFO] 14:30:56 WsHandler: empty param .
[INFO] 14:30:56 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:30:56 WsHandler: client-class1 heartbeat success .
[INFO] 14:31:26 WsHandler: receive message from client-class1, start handle .
[INFO] 14:31:26 WsHandler: empty param .
[INFO] 14:31:26 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:31:26 WsHandler: client-class1 heartbeat success .
[INFO] 14:31:56 WsHandler: receive message from client-class1, start handle .
[INFO] 14:31:56 WsHandler: empty param .
[INFO] 14:31:56 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:31:56 WsHandler: client-class1 heartbeat success .
[INFO] 14:32:26 WsHandler: receive message from client-class1, start handle .
[INFO] 14:32:26 WsHandler: empty param .
[INFO] 14:32:26 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:32:26 WsHandler: client-class1 heartbeat success .
[INFO] 14:32:56 WsHandler: receive message from client-class1, start handle .
[INFO] 14:32:56 WsHandler: empty param .
[INFO] 14:32:56 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:32:56 WsHandler: client-class1 heartbeat success .
[INFO] 14:33:26 WsHandler: receive message from client-class1, start handle .
[INFO] 14:33:26 WsHandler: empty param .
[INFO] 14:33:26 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:33:26 WsHandler: client-class1 heartbeat success .
[INFO] 14:33:56 WsHandler: receive message from client-class1, start handle .
[INFO] 14:33:56 WsHandler: empty param .
[INFO] 14:33:56 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:33:56 WsHandler: client-class1 heartbeat success .
[INFO] 14:34:26 WsHandler: receive message from client-class1, start handle .
[INFO] 14:34:26 WsHandler: empty param .
[INFO] 14:34:26 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:34:26 WsHandler: client-class1 heartbeat success .
[INFO] 14:34:56 WsHandler: receive message from client-class1, start handle .
[INFO] 14:34:56 WsHandler: empty param .
[INFO] 14:34:56 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:34:56 WsHandler: client-class1 heartbeat success .
[INFO] 14:35:26 WsHandler: receive message from client-class1, start handle .
[INFO] 14:35:26 WsHandler: empty param .
[INFO] 14:35:26 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:35:26 WsHandler: client-class1 heartbeat success .
[INFO] 14:35:56 WsHandler: receive message from client-class1, start handle .
[INFO] 14:35:56 WsHandler: empty param .
[INFO] 14:35:56 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:35:56 WsHandler: client-class1 heartbeat success .
[INFO] 14:36:26 WsHandler: receive message from client-class1, start handle .
[INFO] 14:36:26 WsHandler: empty param .
[INFO] 14:36:26 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:36:26 WsHandler: client-class1 heartbeat success .
[INFO] 14:36:56 WsHandler: receive message from client-class1, start handle .
[INFO] 14:36:56 WsHandler: empty param .
[INFO] 14:36:56 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:36:56 WsHandler: client-class1 heartbeat success .
[INFO] 14:37:26 WsHandler: receive message from client-class1, start handle .
[INFO] 14:37:26 WsHandler: empty param .
[INFO] 14:37:26 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:37:26 WsHandler: client-class1 heartbeat success .
[INFO] 14:37:56 WsHandler: receive message from client-class1, start handle .
[INFO] 14:37:56 WsHandler: empty param .
[INFO] 14:37:56 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:37:56 WsHandler: client-class1 heartbeat success .
[INFO] 14:38:26 WsHandler: receive message from client-class1, start handle .
[INFO] 14:38:26 WsHandler: empty param .
[INFO] 14:38:26 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:38:26 WsHandler: client-class1 heartbeat success .
[INFO] 14:38:56 WsHandler: receive message from client-class1, start handle .
[INFO] 14:38:56 WsHandler: empty param .
[INFO] 14:38:56 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:38:56 WsHandler: client-class1 heartbeat success .
[INFO] 14:39:26 WsHandler: receive message from client-class1, start handle .
[INFO] 14:39:26 WsHandler: empty param .
[INFO] 14:39:26 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:39:26 WsHandler: client-class1 heartbeat success .
[INFO] 14:39:56 WsHandler: receive message from client-class1, start handle .
[INFO] 14:39:56 WsHandler: empty param .
[INFO] 14:39:56 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:39:56 WsHandler: client-class1 heartbeat success .
[INFO] 14:40:26 WsHandler: receive message from client-class1, start handle .
[INFO] 14:40:26 WsHandler: empty param .
[INFO] 14:40:26 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:40:26 WsHandler: client-class1 heartbeat success .
[INFO] 14:40:56 WsHandler: receive message from client-class1, start handle .
[INFO] 14:40:56 WsHandler: empty param .
[INFO] 14:40:56 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:40:56 WsHandler: client-class1 heartbeat success .
[INFO] 14:41:26 WsHandler: receive message from client-class1, start handle .
[INFO] 14:41:26 WsHandler: empty param .
[INFO] 14:41:26 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:41:26 WsHandler: client-class1 heartbeat success .
[INFO] 14:41:56 WsHandler: receive message from client-class1, start handle .
[INFO] 14:41:56 WsHandler: empty param .
[INFO] 14:41:56 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:41:56 WsHandler: client-class1 heartbeat success .
[INFO] 14:42:26 WsHandler: receive message from client-class1, start handle .
[INFO] 14:42:26 WsHandler: empty param .
[INFO] 14:42:26 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:42:26 WsHandler: client-class1 heartbeat success .
[INFO] 14:42:56 WsHandler: receive message from client-class1, start handle .
[INFO] 14:42:56 WsHandler: empty param .
[INFO] 14:42:56 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:42:56 WsHandler: client-class1 heartbeat success .
[INFO] 14:43:26 WsHandler: receive message from client-class1, start handle .
[INFO] 14:43:26 WsHandler: empty param .
[INFO] 14:43:26 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:43:26 WsHandler: client-class1 heartbeat success .
[INFO] 14:43:56 WsHandler: receive message from client-class1, start handle .
[INFO] 14:43:56 WsHandler: empty param .
[INFO] 14:43:56 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:43:56 WsHandler: client-class1 heartbeat success .
[INFO] 14:44:26 WsHandler: receive message from client-class1, start handle .
[INFO] 14:44:26 WsHandler: empty param .
[INFO] 14:44:26 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:44:26 WsHandler: client-class1 heartbeat success .
[INFO] 14:44:56 WsHandler: receive message from client-class1, start handle .
[INFO] 14:44:56 WsHandler: empty param .
[INFO] 14:44:56 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:44:56 WsHandler: client-class1 heartbeat success .
[INFO] 14:45:26 WsHandler: receive message from client-class1, start handle .
[INFO] 14:45:26 WsHandler: empty param .
[INFO] 14:45:26 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:45:26 WsHandler: client-class1 heartbeat success .
[INFO] 14:45:56 WsHandler: receive message from client-class1, start handle .
[INFO] 14:45:56 WsHandler: empty param .
[INFO] 14:45:56 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:45:56 WsHandler: client-class1 heartbeat success .
[INFO] 14:46:26 WsHandler: receive message from client-class1, start handle .
[INFO] 14:46:26 WsHandler: empty param .
[INFO] 14:46:26 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:46:26 WsHandler: client-class1 heartbeat success .
[INFO] 14:46:56 WsHandler: receive message from client-class1, start handle .
[INFO] 14:46:56 WsHandler: empty param .
[INFO] 14:46:56 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:46:56 WsHandler: client-class1 heartbeat success .
[INFO] 14:47:26 WsHandler: receive message from client-class1, start handle .
[INFO] 14:47:26 WsHandler: empty param .
[INFO] 14:47:26 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:47:26 WsHandler: client-class1 heartbeat success .
[INFO] 14:47:56 WsHandler: receive message from client-class1, start handle .
[INFO] 14:47:56 WsHandler: empty param .
[INFO] 14:47:56 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:47:56 WsHandler: client-class1 heartbeat success .
[INFO] 14:48:26 WsHandler: receive message from client-class1, start handle .
[INFO] 14:48:26 WsHandler: empty param .
[INFO] 14:48:26 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:48:26 WsHandler: client-class1 heartbeat success .
[INFO] 14:48:56 WsHandler: receive message from client-class1, start handle .
[INFO] 14:48:56 WsHandler: empty param .
[INFO] 14:48:56 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:48:56 WsHandler: client-class1 heartbeat success .
[INFO] 14:49:26 WsHandler: receive message from client-class1, start handle .
[INFO] 14:49:26 WsHandler: empty param .
[INFO] 14:49:26 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:49:26 WsHandler: client-class1 heartbeat success .
[INFO] 14:49:56 WsHandler: receive message from client-class1, start handle .
[INFO] 14:49:56 WsHandler: empty param .
[INFO] 14:49:56 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:49:56 WsHandler: client-class1 heartbeat success .
[INFO] 14:50:26 WsHandler: receive message from client-class1, start handle .
[INFO] 14:50:26 WsHandler: empty param .
[INFO] 14:50:26 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:50:26 WsHandler: client-class1 heartbeat success .
[INFO] 14:50:56 WsHandler: receive message from client-class1, start handle .
[INFO] 14:50:56 WsHandler: empty param .
[INFO] 14:50:56 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:50:56 WsHandler: client-class1 heartbeat success .
[INFO] 14:51:26 WsHandler: receive message from client-class1, start handle .
[INFO] 14:51:26 WsHandler: empty param .
[INFO] 14:51:26 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:51:26 WsHandler: client-class1 heartbeat success .
[INFO] 14:51:56 WsHandler: receive message from client-class1, start handle .
[INFO] 14:51:56 WsHandler: empty param .
[INFO] 14:51:56 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:51:56 WsHandler: client-class1 heartbeat success .
[INFO] 14:52:26 WsHandler: receive message from client-class1, start handle .
[INFO] 14:52:26 WsHandler: empty param .
[INFO] 14:52:26 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:52:26 WsHandler: client-class1 heartbeat success .
[INFO] 14:52:56 WsHandler: receive message from client-class1, start handle .
[INFO] 14:52:56 WsHandler: empty param .
[INFO] 14:52:56 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:52:56 WsHandler: client-class1 heartbeat success .
[INFO] 14:53:26 WsHandler: receive message from client-class1, start handle .
[INFO] 14:53:26 WsHandler: empty param .
[INFO] 14:53:26 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:53:26 WsHandler: client-class1 heartbeat success .
[INFO] 14:53:56 WsHandler: receive message from client-class1, start handle .
[INFO] 14:53:56 WsHandler: empty param .
[INFO] 14:53:56 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:53:56 WsHandler: client-class1 heartbeat success .
[INFO] 14:54:26 WsHandler: receive message from client-class1, start handle .
[INFO] 14:54:26 WsHandler: empty param .
[INFO] 14:54:26 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:54:26 WsHandler: client-class1 heartbeat success .
[INFO] 14:54:56 WsHandler: receive message from client-class1, start handle .
[INFO] 14:54:56 WsHandler: empty param .
[INFO] 14:54:56 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:54:56 WsHandler: client-class1 heartbeat success .
[INFO] 14:55:26 WsHandler: receive message from client-class1, start handle .
[INFO] 14:55:26 WsHandler: empty param .
[INFO] 14:55:26 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:55:26 WsHandler: client-class1 heartbeat success .
[INFO] 14:55:56 WsHandler: receive message from client-class1, start handle .
[INFO] 14:55:56 WsHandler: empty param .
[INFO] 14:55:56 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:55:56 WsHandler: client-class1 heartbeat success .
[INFO] 14:56:26 WsHandler: receive message from client-class1, start handle .
[INFO] 14:56:26 WsHandler: empty param .
[INFO] 14:56:26 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:56:26 WsHandler: client-class1 heartbeat success .
[INFO] 14:56:56 WsHandler: receive message from client-class1, start handle .
[INFO] 14:56:56 WsHandler: empty param .
[INFO] 14:56:56 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:56:56 WsHandler: client-class1 heartbeat success .
[INFO] 14:57:26 WsHandler: receive message from client-class1, start handle .
[INFO] 14:57:26 WsHandler: empty param .
[INFO] 14:57:26 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:57:26 WsHandler: client-class1 heartbeat success .
[INFO] 14:57:56 WsHandler: receive message from client-class1, start handle .
[INFO] 14:57:56 WsHandler: empty param .
[INFO] 14:57:56 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:57:56 WsHandler: client-class1 heartbeat success .
[INFO] 14:58:26 WsHandler: receive message from client-class1, start handle .
[INFO] 14:58:26 WsHandler: empty param .
[INFO] 14:58:26 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:58:26 WsHandler: client-class1 heartbeat success .
[INFO] 14:58:56 WsHandler: receive message from client-class1, start handle .
[INFO] 14:58:56 WsHandler: empty param .
[INFO] 14:58:56 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:58:56 WsHandler: client-class1 heartbeat success .
[INFO] 14:59:26 WsHandler: receive message from client-class1, start handle .
[INFO] 14:59:26 WsHandler: empty param .
[INFO] 14:59:26 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:59:26 WsHandler: client-class1 heartbeat success .
[INFO] 14:59:56 WsHandler: receive message from client-class1, start handle .
[INFO] 14:59:56 WsHandler: empty param .
[INFO] 14:59:56 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 14:59:56 WsHandler: client-class1 heartbeat success .
[INFO] 15:00:26 WsHandler: receive message from client-class1, start handle .
[INFO] 15:00:26 WsHandler: empty param .
[INFO] 15:00:26 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 15:00:26 WsHandler: client-class1 heartbeat success .
[INFO] 15:00:56 WsHandler: receive message from client-class1, start handle .
[INFO] 15:00:56 WsHandler: empty param .
[INFO] 15:00:56 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 15:00:56 WsHandler: client-class1 heartbeat success .
[INFO] 15:01:26 WsHandler: receive message from client-class1, start handle .
[INFO] 15:01:26 WsHandler: empty param .
[INFO] 15:01:26 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 15:01:26 WsHandler: client-class1 heartbeat success .
[INFO] 15:01:56 WsHandler: receive message from client-class1, start handle .
[INFO] 15:01:56 WsHandler: empty param .
[INFO] 15:01:56 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 15:01:56 WsHandler: client-class1 heartbeat success .
[INFO] 15:02:26 WsHandler: receive message from client-class1, start handle .
[INFO] 15:02:26 WsHandler: empty param .
[INFO] 15:02:26 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 15:02:26 WsHandler: client-class1 heartbeat success .
[INFO] 15:02:56 WsHandler: receive message from client-class1, start handle .
[INFO] 15:02:56 WsHandler: empty param .
[INFO] 15:02:56 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 15:02:56 WsHandler: client-class1 heartbeat success .
[INFO] 15:03:26 WsHandler: receive message from client-class1, start handle .
[INFO] 15:03:26 WsHandler: empty param .
[INFO] 15:03:26 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 15:03:26 WsHandler: client-class1 heartbeat success .
[INFO] 15:03:56 WsHandler: receive message from client-class1, start handle .
[INFO] 15:03:56 WsHandler: empty param .
[INFO] 15:03:56 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 15:03:56 WsHandler: client-class1 heartbeat success .
[INFO] 15:04:26 WsHandler: receive message from client-class1, start handle .
[INFO] 15:04:26 WsHandler: empty param .
[INFO] 15:04:26 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 15:04:26 WsHandler: client-class1 heartbeat success .
[INFO] 15:04:56 WsHandler: receive message from client-class1, start handle .
[INFO] 15:04:56 WsHandler: empty param .
[INFO] 15:04:56 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 15:04:56 WsHandler: client-class1 heartbeat success .
[INFO] 15:05:26 WsHandler: receive message from client-class1, start handle .
[INFO] 15:05:26 WsHandler: empty param .
[INFO] 15:05:26 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 15:05:26 WsHandler: client-class1 heartbeat success .
[INFO] 15:05:56 WsHandler: receive message from client-class1, start handle .
[INFO] 15:05:56 WsHandler: empty param .
[INFO] 15:05:56 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 15:05:56 WsHandler: client-class1 heartbeat success .
[INFO] 15:06:26 WsHandler: receive message from client-class1, start handle .
[INFO] 15:06:26 WsHandler: empty param .
[INFO] 15:06:26 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 15:06:26 WsHandler: client-class1 heartbeat success .
[INFO] 15:06:56 WsHandler: receive message from client-class1, start handle .
[INFO] 15:06:56 WsHandler: empty param .
[INFO] 15:06:56 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 15:06:56 WsHandler: client-class1 heartbeat success .
[INFO] 15:07:26 WsHandler: receive message from client-class1, start handle .
[INFO] 15:07:26 WsHandler: empty param .
[INFO] 15:07:26 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 15:07:26 WsHandler: client-class1 heartbeat success .
[INFO] 15:07:56 WsHandler: receive message from client-class1, start handle .
[INFO] 15:07:56 WsHandler: empty param .
[INFO] 15:07:56 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 15:07:56 WsHandler: client-class1 heartbeat success .
[INFO] 15:08:26 WsHandler: receive message from client-class1, start handle .
[INFO] 15:08:26 WsHandler: empty param .
[INFO] 15:08:26 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 15:08:26 WsHandler: client-class1 heartbeat success .
[INFO] 15:08:56 WsHandler: receive message from client-class1, start handle .
[INFO] 15:08:56 WsHandler: empty param .
[INFO] 15:08:56 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 15:08:56 WsHandler: client-class1 heartbeat success .
[INFO] 15:09:26 WsHandler: receive message from client-class1, start handle .
[INFO] 15:09:26 WsHandler: empty param .
[INFO] 15:09:26 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 15:09:26 WsHandler: client-class1 heartbeat success .
[INFO] 15:09:56 WsHandler: receive message from client-class1, start handle .
[INFO] 15:09:56 WsHandler: empty param .
[INFO] 15:09:56 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 15:09:56 WsHandler: client-class1 heartbeat success .
[INFO] 15:10:26 WsHandler: receive message from client-class1, start handle .
[INFO] 15:10:26 WsHandler: empty param .
[INFO] 15:10:26 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 15:10:26 WsHandler: client-class1 heartbeat success .
[INFO] 15:10:56 WsHandler: receive message from client-class1, start handle .
[INFO] 15:10:56 WsHandler: empty param .
[INFO] 15:10:56 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 15:10:56 WsHandler: client-class1 heartbeat success .
[INFO] 15:11:26 WsHandler: receive message from client-class1, start handle .
[INFO] 15:11:26 WsHandler: empty param .
[INFO] 15:11:26 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 15:11:26 WsHandler: client-class1 heartbeat success .
[INFO] 15:11:56 WsHandler: receive message from client-class1, start handle .
[INFO] 15:11:56 WsHandler: empty param .
[INFO] 15:11:56 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 15:11:56 WsHandler: client-class1 heartbeat success .
[INFO] 15:12:26 WsHandler: receive message from client-class1, start handle .
[INFO] 15:12:26 WsHandler: empty param .
[INFO] 15:12:26 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 15:12:26 WsHandler: client-class1 heartbeat success .
[INFO] 15:12:56 WsHandler: receive message from client-class1, start handle .
[INFO] 15:12:56 WsHandler: empty param .
[INFO] 15:12:56 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 15:12:56 WsHandler: client-class1 heartbeat success .
[INFO] 15:13:26 WsHandler: receive message from client-class1, start handle .
[INFO] 15:13:26 WsHandler: empty param .
[INFO] 15:13:26 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 15:13:26 WsHandler: client-class1 heartbeat success .
[INFO] 15:13:56 WsHandler: receive message from client-class1, start handle .
[INFO] 15:13:56 WsHandler: empty param .
[INFO] 15:13:56 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 15:13:56 WsHandler: client-class1 heartbeat success .
[INFO] 15:14:26 WsHandler: receive message from client-class1, start handle .
[INFO] 15:14:26 WsHandler: empty param .
[INFO] 15:14:26 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 15:14:26 WsHandler: client-class1 heartbeat success .
[INFO] 15:14:56 WsHandler: receive message from client-class1, start handle .
[INFO] 15:14:56 WsHandler: empty param .
[INFO] 15:14:56 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 15:14:56 WsHandler: client-class1 heartbeat success .
[INFO] 15:15:26 WsHandler: receive message from client-class1, start handle .
[INFO] 15:15:26 WsHandler: empty param .
[INFO] 15:15:26 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 15:15:26 WsHandler: client-class1 heartbeat success .
[INFO] 15:15:56 WsHandler: receive message from client-class1, start handle .
[INFO] 15:15:56 WsHandler: empty param .
[INFO] 15:15:56 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 15:15:56 WsHandler: client-class1 heartbeat success .
[INFO] 15:16:26 WsHandler: receive message from client-class1, start handle .
[INFO] 15:16:26 WsHandler: empty param .
[INFO] 15:16:26 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 15:16:26 WsHandler: client-class1 heartbeat success .
[INFO] 15:16:56 WsHandler: receive message from client-class1, start handle .
[INFO] 15:16:56 WsHandler: empty param .
[INFO] 15:16:56 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 15:16:56 WsHandler: client-class1 heartbeat success .
[INFO] 15:17:26 WsHandler: receive message from client-class1, start handle .
[INFO] 15:17:26 WsHandler: empty param .
[INFO] 15:17:26 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 15:17:26 WsHandler: client-class1 heartbeat success .
[INFO] 15:17:56 WsHandler: receive message from client-class1, start handle .
[INFO] 15:17:56 WsHandler: empty param .
[INFO] 15:17:56 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 15:17:56 WsHandler: client-class1 heartbeat success .
[INFO] 15:18:26 WsHandler: receive message from client-class1, start handle .
[INFO] 15:18:26 WsHandler: empty param .
[INFO] 15:18:26 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 15:18:26 WsHandler: client-class1 heartbeat success .
[INFO] 15:18:56 WsHandler: receive message from client-class1, start handle .
[INFO] 15:18:56 WsHandler: empty param .
[INFO] 15:18:56 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 15:18:56 WsHandler: client-class1 heartbeat success .
[INFO] 15:19:26 WsHandler: receive message from client-class1, start handle .
[INFO] 15:19:26 WsHandler: empty param .
[INFO] 15:19:26 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 15:19:26 WsHandler: client-class1 heartbeat success .
[INFO] 15:19:56 WsHandler: receive message from client-class1, start handle .
[INFO] 15:19:56 WsHandler: empty param .
[INFO] 15:19:56 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 15:19:56 WsHandler: client-class1 heartbeat success .
[INFO] 15:20:26 WsHandler: receive message from client-class1, start handle .
[INFO] 15:20:26 WsHandler: empty param .
[INFO] 15:20:26 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 15:20:26 WsHandler: client-class1 heartbeat success .
[INFO] 15:20:56 WsHandler: receive message from client-class1, start handle .
[INFO] 15:20:56 WsHandler: empty param .
[INFO] 15:20:56 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 15:20:56 WsHandler: client-class1 heartbeat success .
[INFO] 15:21:27 WsHandler: receive message from client-class1, start handle .
[INFO] 15:21:27 WsHandler: empty param .
[INFO] 15:21:27 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 15:21:27 WsHandler: client-class1 heartbeat success .
[INFO] 15:21:57 WsHandler: receive message from client-class1, start handle .
[INFO] 15:21:57 WsHandler: empty param .
[INFO] 15:21:57 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 15:21:57 WsHandler: client-class1 heartbeat success .
[INFO] 15:22:27 WsHandler: receive message from client-class1, start handle .
[INFO] 15:22:27 WsHandler: empty param .
[INFO] 15:22:27 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 15:22:27 WsHandler: client-class1 heartbeat success .
[INFO] 15:22:57 WsHandler: receive message from client-class1, start handle .
[INFO] 15:22:57 WsHandler: empty param .
[INFO] 15:22:57 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 15:22:57 WsHandler: client-class1 heartbeat success .
[INFO] 15:23:27 WsHandler: receive message from client-class1, start handle .
[INFO] 15:23:27 WsHandler: empty param .
[INFO] 15:23:27 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 15:23:27 WsHandler: client-class1 heartbeat success .
[INFO] 15:23:57 WsHandler: receive message from client-class1, start handle .
[INFO] 15:23:57 WsHandler: empty param .
[INFO] 15:23:57 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 15:23:57 WsHandler: client-class1 heartbeat success .
[INFO] 15:24:27 WsHandler: receive message from client-class1, start handle .
[INFO] 15:24:27 WsHandler: empty param .
[INFO] 15:24:27 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 15:24:27 WsHandler: client-class1 heartbeat success .
[INFO] 15:24:57 WsHandler: receive message from client-class1, start handle .
[INFO] 15:24:57 WsHandler: empty param .
[INFO] 15:24:57 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 15:24:57 WsHandler: client-class1 heartbeat success .
[INFO] 15:25:27 WsHandler: receive message from client-class1, start handle .
[INFO] 15:25:27 WsHandler: empty param .
[INFO] 15:25:27 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 15:25:27 WsHandler: client-class1 heartbeat success .
[INFO] 15:25:57 WsHandler: receive message from client-class1, start handle .
[INFO] 15:25:57 WsHandler: empty param .
[INFO] 15:25:57 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 15:25:57 WsHandler: client-class1 heartbeat success .
[INFO] 15:26:27 WsHandler: receive message from client-class1, start handle .
[INFO] 15:26:27 WsHandler: empty param .
[INFO] 15:26:27 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 15:26:27 WsHandler: client-class1 heartbeat success .
[INFO] 15:26:57 WsHandler: receive message from client-class1, start handle .
[INFO] 15:26:57 WsHandler: empty param .
[INFO] 15:26:57 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 15:26:57 WsHandler: client-class1 heartbeat success .
[INFO] 15:27:27 WsHandler: receive message from client-class1, start handle .
[INFO] 15:27:27 WsHandler: empty param .
[INFO] 15:27:27 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 15:27:27 WsHandler: client-class1 heartbeat success .
[INFO] 15:27:57 WsHandler: receive message from client-class1, start handle .
[INFO] 15:27:57 WsHandler: empty param .
[INFO] 15:27:57 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 15:27:57 WsHandler: client-class1 heartbeat success .
[INFO] 15:28:27 WsHandler: receive message from client-class1, start handle .
[INFO] 15:28:27 WsHandler: empty param .
[INFO] 15:28:27 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 15:28:27 WsHandler: client-class1 heartbeat success .
[INFO] 15:28:57 WsHandler: receive message from client-class1, start handle .
[INFO] 15:28:57 WsHandler: empty param .
[INFO] 15:28:57 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 15:28:57 WsHandler: client-class1 heartbeat success .
[INFO] 15:29:27 WsHandler: receive message from client-class1, start handle .
[INFO] 15:29:27 WsHandler: empty param .
[INFO] 15:29:27 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 15:29:27 WsHandler: client-class1 heartbeat success .
[INFO] 15:29:57 WsHandler: receive message from client-class1, start handle .
[INFO] 15:29:57 WsHandler: empty param .
[INFO] 15:29:57 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 15:29:57 WsHandler: client-class1 heartbeat success .
[INFO] 15:30:27 WsHandler: receive message from client-class1, start handle .
[INFO] 15:30:27 WsHandler: empty param .
[INFO] 15:30:27 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 15:30:27 WsHandler: client-class1 heartbeat success .
[INFO] 15:30:57 WsHandler: receive message from client-class1, start handle .
[INFO] 15:30:57 WsHandler: empty param .
[INFO] 15:30:57 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 15:30:57 WsHandler: client-class1 heartbeat success .
[INFO] 15:31:27 WsHandler: receive message from client-class1, start handle .
[INFO] 15:31:27 WsHandler: empty param .
[INFO] 15:31:27 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 15:31:27 WsHandler: client-class1 heartbeat success .
[INFO] 15:31:57 WsHandler: receive message from client-class1, start handle .
[INFO] 15:31:57 WsHandler: empty param .
[INFO] 15:31:57 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 15:31:57 WsHandler: client-class1 heartbeat success .
[INFO] 15:32:27 WsHandler: receive message from client-class1, start handle .
[INFO] 15:32:27 WsHandler: empty param .
[INFO] 15:32:27 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 15:32:27 WsHandler: client-class1 heartbeat success .
[INFO] 15:32:57 WsHandler: receive message from client-class1, start handle .
[INFO] 15:32:57 WsHandler: empty param .
[INFO] 15:32:57 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 15:32:57 WsHandler: client-class1 heartbeat success .
[INFO] 15:33:27 WsHandler: receive message from client-class1, start handle .
[INFO] 15:33:27 WsHandler: empty param .
[INFO] 15:33:27 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 15:33:27 WsHandler: client-class1 heartbeat success .
[INFO] 15:33:57 WsHandler: receive message from client-class1, start handle .
[INFO] 15:33:57 WsHandler: empty param .
[INFO] 15:33:57 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 15:33:57 WsHandler: client-class1 heartbeat success .
[INFO] 15:34:27 WsHandler: receive message from client-class1, start handle .
[INFO] 15:34:27 WsHandler: empty param .
[INFO] 15:34:27 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 15:34:27 WsHandler: client-class1 heartbeat success .
[INFO] 15:34:57 WsHandler: receive message from client-class1, start handle .
[INFO] 15:34:57 WsHandler: empty param .
[INFO] 15:34:57 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 15:34:57 WsHandler: client-class1 heartbeat success .
[INFO] 15:35:26 HttpHandler: received http request, start handle... .
[INFO] 15:35:26 HttpHandler: start auth .
[INFO] 15:35:26 MongoDB: collection-class1 exist .
[INFO] 15:35:26 MongoDB: coll_exist?: second time search start .
[INFO] 15:35:26 MongoDB: collection_names_list has been updated .
[INFO] 15:35:26 MongoDB: collection-class1 exist .
[INFO] 15:35:26 HttpHandler: auth completed .
[INFO] 15:35:26 HttpHandler: user_login is allowed, start handle .
[INFO] 15:35:26 LocalCaller: start user_login .
[INFO] 15:35:26 UserManager: Try login class1 .
[INFO] 15:35:26 UserInfoManager: try to get user- class1's password .
[INFO] 15:35:26 MongoDB: try to get document from class/class1 .
[INFO] 15:35:26 MongoDB: parsing the documents, targets: ['password'] .
[INFO] 15:35:26 UserInfoManager: try to get user- class1's user_type .
[INFO] 15:35:26 MongoDB: update document success. Update count: 0 .
[INFO] 15:35:26 MongoDB: update document success. Update count: 1 .
[INFO] 15:35:26 MongoDB: update document success. Update count: 1 .
[INFO] 15:35:26 UserManager: login success .
[INFO] 15:35:26 HttpHandler: command-user_login handle completed .
[INFO] 15:35:26 WsHandler: receive new websocket conn .
[INFO] 15:35:26 WsHandler: receive command, start handle .
[INFO] 15:35:26 MongoDB: collection-class1 exist .
[INFO] 15:35:26 MongoDB: coll_exist?: second time search start .
[INFO] 15:35:26 MongoDB: collection_names_list has been updated .
[INFO] 15:35:26 MongoDB: collection-class1 exist .
[INFO] 15:35:26 MongoDB: try to get document from class/class1 .
[INFO] 15:35:26 MongoDB: parsing the documents, targets: ['isOnline'] .
[INFO] 15:35:26 MongoDB: try to get document from class/class1 .
[INFO] 15:35:26 MongoDB: parsing the documents, targets: ['token'] .
[INFO] 15:35:26 WsHandler: auth success .
[INFO] 15:35:26 WsHandler: start auto_close_conn .
[INFO] 15:35:26 WsHandler: start communicate with client-class1 .
[INFO] 15:35:26 WsHandler: receive message from client-class1, start handle .
[INFO] 15:35:26 WsHandler: empty param .
[INFO] 15:35:26 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 15:35:26 WsHandler: client-class1 heartbeat success .
[INFO] 15:35:56 WsHandler: receive message from client-class1, start handle .
[INFO] 15:35:56 WsHandler: empty param .
[INFO] 15:35:56 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 15:35:56 WsHandler: client-class1 heartbeat success .
[INFO] 15:36:26 WsHandler: receive message from client-class1, start handle .
[INFO] 15:36:26 WsHandler: empty param .
[INFO] 15:36:26 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 15:36:26 WsHandler: client-class1 heartbeat success .
[INFO] 15:36:39 HttpHandler: received http request, start handle... .
[INFO] 15:36:39 HttpHandler: start auth .
[INFO] 15:36:39 MongoDB: collection-class1 exist .
[INFO] 15:36:39 MongoDB: coll_exist?: second time search start .
[INFO] 15:36:39 MongoDB: collection_names_list has been updated .
[INFO] 15:36:39 MongoDB: collection-class1 exist .
[INFO] 15:36:39 HttpHandler: auth completed .
[INFO] 15:36:39 HttpHandler: user_login is allowed, start handle .
[INFO] 15:36:39 LocalCaller: start user_login .
[INFO] 15:36:39 UserManager: Try login class1 .
[INFO] 15:36:39 UserInfoManager: try to get user- class1's password .
[INFO] 15:36:39 MongoDB: try to get document from class/class1 .
[INFO] 15:36:39 MongoDB: parsing the documents, targets: ['password'] .
[INFO] 15:36:39 UserInfoManager: try to get user- class1's user_type .
[INFO] 15:36:39 MongoDB: update document success. Update count: 0 .
[INFO] 15:36:39 MongoDB: update document success. Update count: 1 .
[INFO] 15:36:39 MongoDB: update document success. Update count: 1 .
[INFO] 15:36:39 UserManager: login success .
[INFO] 15:36:39 HttpHandler: command-user_login handle completed .
[INFO] 15:36:39 WsHandler: receive new websocket conn .
[INFO] 15:36:39 WsHandler: receive command, start handle .
[INFO] 15:36:39 MongoDB: collection-class1 exist .
[INFO] 15:36:39 MongoDB: coll_exist?: second time search start .
[INFO] 15:36:39 MongoDB: collection_names_list has been updated .
[INFO] 15:36:39 MongoDB: collection-class1 exist .
[INFO] 15:36:39 MongoDB: try to get document from class/class1 .
[INFO] 15:36:39 MongoDB: parsing the documents, targets: ['isOnline'] .
[INFO] 15:36:39 MongoDB: try to get document from class/class1 .
[INFO] 15:36:39 MongoDB: parsing the documents, targets: ['token'] .
[INFO] 15:36:39 WsHandler: auth success .
[INFO] 15:36:39 WsHandler: start communicate with client-class1 .
[INFO] 15:36:39 WsHandler: start auto_close_conn .
[INFO] 15:36:39 WsHandler: receive message from client-class1, start handle .
[INFO] 15:36:39 WsHandler: empty param .
[INFO] 15:36:39 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 15:36:39 WsHandler: client-class1 heartbeat success .
[INFO] 15:37:09 WsHandler: receive message from client-class1, start handle .
[INFO] 15:37:09 WsHandler: empty param .
[INFO] 15:37:09 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 15:37:09 WsHandler: client-class1 heartbeat success .
[INFO] 15:42:21 HttpHandler: received http request, start handle... .
[INFO] 15:42:21 HttpHandler: start auth .
[INFO] 15:42:21 MongoDB: collection-class1 exist .
[INFO] 15:42:21 MongoDB: coll_exist?: second time search start .
[INFO] 15:42:21 MongoDB: collection_names_list has been updated .
[INFO] 15:42:21 MongoDB: collection-class1 exist .
[INFO] 15:42:21 HttpHandler: auth completed .
[INFO] 15:42:21 HttpHandler: user_login is allowed, start handle .
[INFO] 15:42:21 LocalCaller: start user_login .
[INFO] 15:42:21 UserManager: Try login class1 .
[INFO] 15:42:21 UserInfoManager: try to get user- class1's password .
[INFO] 15:42:21 MongoDB: try to get document from class/class1 .
[INFO] 15:42:21 MongoDB: parsing the documents, targets: ['password'] .
[INFO] 15:42:21 UserInfoManager: try to get user- class1's user_type .
[INFO] 15:42:21 MongoDB: update document success. Update count: 0 .
[INFO] 15:42:21 MongoDB: update document success. Update count: 1 .
[INFO] 15:42:21 MongoDB: update document success. Update count: 1 .
[INFO] 15:42:21 UserManager: login success .
[INFO] 15:42:21 HttpHandler: command-user_login handle completed .
[INFO] 15:42:21 WsHandler: receive new websocket conn .
[INFO] 15:42:21 WsHandler: receive command, start handle .
[INFO] 15:42:21 MongoDB: collection-class1 exist .
[INFO] 15:42:21 MongoDB: coll_exist?: second time search start .
[INFO] 15:42:21 MongoDB: collection_names_list has been updated .
[INFO] 15:42:21 MongoDB: collection-class1 exist .
[INFO] 15:42:21 MongoDB: try to get document from class/class1 .
[INFO] 15:42:21 MongoDB: parsing the documents, targets: ['isOnline'] .
[INFO] 15:42:21 MongoDB: try to get document from class/class1 .
[INFO] 15:42:21 MongoDB: parsing the documents, targets: ['token'] .
[INFO] 15:42:21 WsHandler: auth success .
[INFO] 15:42:21 WsHandler: start auto_close_conn .
[INFO] 15:42:21 WsHandler: start communicate with client-class1 .
[INFO] 15:42:21 WsHandler: receive message from client-class1, start handle .
[INFO] 15:42:21 WsHandler: empty param .
[INFO] 15:42:21 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 15:42:21 WsHandler: client-class1 heartbeat success .
[INFO] 15:42:51 WsHandler: receive message from client-class1, start handle .
[INFO] 15:42:51 WsHandler: empty param .
[INFO] 15:42:51 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 15:42:51 WsHandler: client-class1 heartbeat success .
[INFO] 15:43:21 WsHandler: receive message from client-class1, start handle .
[INFO] 15:43:21 WsHandler: empty param .
[INFO] 15:43:21 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 15:43:21 WsHandler: client-class1 heartbeat success .
[INFO] 15:43:51 WsHandler: receive message from client-class1, start handle .
[INFO] 15:43:51 WsHandler: empty param .
[INFO] 15:43:51 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 15:43:51 WsHandler: client-class1 heartbeat success .
[INFO] 15:44:21 WsHandler: receive message from client-class1, start handle .
[INFO] 15:44:21 WsHandler: empty param .
[INFO] 15:44:21 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 15:44:21 WsHandler: client-class1 heartbeat success .
[INFO] 15:44:33 HttpHandler: received http request, start handle... .
[INFO] 15:44:33 HttpHandler: start auth .
[INFO] 15:44:33 MongoDB: collection-class1 exist .
[INFO] 15:44:33 MongoDB: coll_exist?: second time search start .
[INFO] 15:44:33 MongoDB: collection_names_list has been updated .
[INFO] 15:44:33 MongoDB: collection-class1 exist .
[INFO] 15:44:33 MongoDB: try to get document from class/class1 .
[INFO] 15:44:33 MongoDB: parsing the documents, targets: ['lastLoginTimeStamp'] .
[INFO] 15:44:33 HttpHandler: user-class1's LLTS: 1650699741 .
[INFO] 15:44:33 MongoDB: try to get document from class/class1 .
[INFO] 15:44:33 MongoDB: parsing the documents, targets: ['isOnline'] .
[INFO] 15:44:33 HttpHandler: time stamp is in law .
[INFO] 15:44:33 MongoDB: try to get document from class/class1 .
[INFO] 15:44:33 MongoDB: parsing the documents, targets: ['token'] .
[INFO] 15:44:33 HttpHandler: auth completed .
[INFO] 15:44:33 HttpHandler: user_logout is allowed, start handle .
[INFO] 15:44:33 LocalCaller: start user_logout .
[INFO] 15:44:33 UserManager: Try logout class1 .
[INFO] 15:44:33 MongoDB: try to get document from class/class1 .
[INFO] 15:44:33 MongoDB: parsing the documents, targets: ['isOnline'] .
[INFO] 15:44:33 MongoDB: update document success. Update count: 1 .
[INFO] 15:44:33 MongoDB: update document success. Update count: 1 .
[INFO] 15:44:33 UserManager: logout success .
[INFO] 15:44:33 HttpHandler: command-user_logout handle completed .
[INFO] 15:44:51 WsHandler: receive message from client-class1, start handle .
[INFO] 15:44:51 WsHandler: empty param .
[INFO] 15:44:51 WsHandler: recv_command-heartbeat from client-class1 .
[DEBUG] 15:44:51 WsHandler: client-class1 heartbeat success .
[INFO] 15:45:08 HttpHandler: received http request, start handle... .
[INFO] 15:45:08 HttpHandler: start auth .
[INFO] 15:45:08 MongoDB: collection-class2 exist .
[INFO] 15:45:08 MongoDB: coll_exist?: second time search start .
[INFO] 15:45:08 MongoDB: collection_names_list has been updated .
[INFO] 15:45:08 MongoDB: collection-class2 exist .
[INFO] 15:45:08 HttpHandler: auth completed .
[INFO] 15:45:08 HttpHandler: user_login is allowed, start handle .
[INFO] 15:45:08 LocalCaller: start user_login .
[INFO] 15:45:08 UserManager: Try login class2 .
[INFO] 15:45:08 UserInfoManager: try to get user- class2's password .
[INFO] 15:45:08 MongoDB: try to get document from class/class2 .
[INFO] 15:45:08 MongoDB: parsing the documents, targets: ['password'] .
[INFO] 15:45:08 UserInfoManager: try to get user- class2's user_type .
[INFO] 15:45:08 MongoDB: update document success. Update count: 1 .
[INFO] 15:45:08 MongoDB: update document success. Update count: 1 .
[INFO] 15:45:08 MongoDB: update document success. Update count: 1 .
[INFO] 15:45:08 UserManager: login success .
[INFO] 15:45:08 HttpHandler: command-user_login handle completed .
[INFO] 15:45:08 WsHandler: receive new websocket conn .
[INFO] 15:45:08 WsHandler: receive command, start handle .
[INFO] 15:45:08 MongoDB: collection-class2 exist .
[INFO] 15:45:08 MongoDB: coll_exist?: second time search start .
[INFO] 15:45:08 MongoDB: collection_names_list has been updated .
[INFO] 15:45:08 MongoDB: collection-class2 exist .
[INFO] 15:45:08 MongoDB: try to get document from class/class2 .
[INFO] 15:45:08 MongoDB: parsing the documents, targets: ['isOnline'] .
[INFO] 15:45:08 MongoDB: try to get document from class/class2 .
[INFO] 15:45:08 MongoDB: parsing the documents, targets: ['token'] .
[INFO] 15:45:08 WsHandler: auth success .
[INFO] 15:45:08 WsHandler: start communicate with client-class2 .
[INFO] 15:45:08 WsHandler: start auto_close_conn .
[INFO] 15:45:08 WsHandler: receive message from client-class2, start handle .
[INFO] 15:45:08 WsHandler: empty param .
[INFO] 15:45:08 WsHandler: recv_command-heartbeat from client-class2 .
[DEBUG] 15:45:08 WsHandler: client-class2 heartbeat success .
[INFO] 15:45:38 WsHandler: receive message from client-class2, start handle .
[INFO] 15:45:38 WsHandler: empty param .
[INFO] 15:45:38 WsHandler: recv_command-heartbeat from client-class2 .
[DEBUG] 15:45:38 WsHandler: client-class2 heartbeat success .
[INFO] 15:46:08 WsHandler: receive message from client-class2, start handle .
[INFO] 15:46:08 WsHandler: empty param .
[INFO] 15:46:08 WsHandler: recv_command-heartbeat from client-class2 .
[DEBUG] 15:46:08 WsHandler: client-class2 heartbeat success .
[INFO] 15:46:38 WsHandler: receive message from client-class2, start handle .
[INFO] 15:46:38 WsHandler: empty param .
[INFO] 15:46:38 WsHandler: recv_command-heartbeat from client-class2 .
[DEBUG] 15:46:38 WsHandler: client-class2 heartbeat success .
[INFO] 15:47:08 WsHandler: receive message from client-class2, start handle .
[INFO] 15:47:08 WsHandler: empty param .
[INFO] 15:47:08 WsHandler: recv_command-heartbeat from client-class2 .
[DEBUG] 15:47:08 WsHandler: client-class2 heartbeat success .
[INFO] 15:47:38 WsHandler: receive message from client-class2, start handle .
[INFO] 15:47:38 WsHandler: empty param .
[INFO] 15:47:38 WsHandler: recv_command-heartbeat from client-class2 .
[DEBUG] 15:47:38 WsHandler: client-class2 heartbeat success .
[INFO] 15:48:06 HttpHandler: received http request, start handle... .
[INFO] 15:48:06 HttpHandler: start auth .
[INFO] 15:48:06 MongoDB: collection-class2 exist .
[INFO] 15:48:06 MongoDB: coll_exist?: second time search start .
[INFO] 15:48:06 MongoDB: collection_names_list has been updated .
[INFO] 15:48:06 MongoDB: collection-class2 exist .
[INFO] 15:48:06 MongoDB: try to get document from class/class2 .
[INFO] 15:48:06 MongoDB: parsing the documents, targets: ['lastLoginTimeStamp'] .
[INFO] 15:48:06 HttpHandler: user-class2's LLTS: 1650699908 .
[INFO] 15:48:06 MongoDB: try to get document from class/class2 .
[INFO] 15:48:06 MongoDB: parsing the documents, targets: ['isOnline'] .
[INFO] 15:48:06 HttpHandler: time stamp is in law .
[INFO] 15:48:06 MongoDB: try to get document from class/class2 .
[INFO] 15:48:06 MongoDB: parsing the documents, targets: ['token'] .
[INFO] 15:48:06 HttpHandler: auth completed .
[INFO] 15:48:06 HttpHandler: user_logout is allowed, start handle .
[INFO] 15:48:06 LocalCaller: start user_logout .
[INFO] 15:48:06 UserManager: Try logout class2 .
[INFO] 15:48:06 MongoDB: try to get document from class/class2 .
[INFO] 15:48:06 MongoDB: parsing the documents, targets: ['isOnline'] .
[INFO] 15:48:06 MongoDB: update document success. Update count: 1 .
[INFO] 15:48:06 MongoDB: update document success. Update count: 1 .
[INFO] 15:48:06 UserManager: logout success .
[INFO] 15:48:06 HttpHandler: command-user_logout handle completed .
[INFO] 15:48:08 WsHandler: receive message from client-class2, start handle .
[INFO] 15:48:08 WsHandler: empty param .
[INFO] 15:48:08 WsHandler: recv_command-heartbeat from client-class2 .
[DEBUG] 15:48:08 WsHandler: client-class2 heartbeat success .
[INFO] 15:48:38 WsHandler: receive message from client-class2, start handle .
[INFO] 15:48:38 WsHandler: empty param .
[INFO] 15:48:38 WsHandler: recv_command-heartbeat from client-class2 .
[DEBUG] 15:48:38 WsHandler: client-class2 heartbeat success .
[INFO] 15:49:08 WsHandler: receive message from client-class2, start handle .
[INFO] 15:49:08 WsHandler: empty param .
[INFO] 15:49:08 WsHandler: recv_command-heartbeat from client-class2 .
[DEBUG] 15:49:08 WsHandler: client-class2 heartbeat success .
[INFO] 15:49:38 WsHandler: receive message from client-class2, start handle .
[INFO] 15:49:38 WsHandler: empty param .
[INFO] 15:49:38 WsHandler: recv_command-heartbeat from client-class2 .
[DEBUG] 15:49:38 WsHandler: client-class2 heartbeat success .
[INFO] 15:50:08 WsHandler: receive message from client-class2, start handle .
[INFO] 15:50:08 WsHandler: empty param .
[INFO] 15:50:08 WsHandler: recv_command-heartbeat from client-class2 .
[DEBUG] 15:50:08 WsHandler: client-class2 heartbeat success .
[INFO] 15:50:38 WsHandler: receive message from client-class2, start handle .
[INFO] 15:50:38 WsHandler: empty param .
[INFO] 15:50:38 WsHandler: recv_command-heartbeat from client-class2 .
[DEBUG] 15:50:38 WsHandler: client-class2 heartbeat success .
[INFO] 15:51:08 WsHandler: receive message from client-class2, start handle .
[INFO] 15:51:08 WsHandler: empty param .
[INFO] 15:51:08 WsHandler: recv_command-heartbeat from client-class2 .
[DEBUG] 15:51:08 WsHandler: client-class2 heartbeat success .
[INFO] 15:51:38 WsHandler: receive message from client-class2, start handle .
[INFO] 15:51:38 WsHandler: empty param .
[INFO] 15:51:38 WsHandler: recv_command-heartbeat from client-class2 .
[DEBUG] 15:51:38 WsHandler: client-class2 heartbeat success .
[INFO] 15:52:08 WsHandler: receive message from client-class2, start handle .
[INFO] 15:52:08 WsHandler: empty param .
[INFO] 15:52:08 WsHandler: recv_command-heartbeat from client-class2 .
[DEBUG] 15:52:08 WsHandler: client-class2 heartbeat success .
[INFO] 15:52:38 WsHandler: receive message from client-class2, start handle .
[INFO] 15:52:38 WsHandler: empty param .
[INFO] 15:52:38 WsHandler: recv_command-heartbeat from client-class2 .
[DEBUG] 15:52:38 WsHandler: client-class2 heartbeat success .
[INFO] 15:53:08 WsHandler: receive message from client-class2, start handle .
[INFO] 15:53:08 WsHandler: empty param .
[INFO] 15:53:08 WsHandler: recv_command-heartbeat from client-class2 .
[DEBUG] 15:53:08 WsHandler: client-class2 heartbeat success .
[INFO] 15:53:38 WsHandler: receive message from client-class2, start handle .
[INFO] 15:53:38 WsHandler: empty param .
[INFO] 15:53:38 WsHandler: recv_command-heartbeat from client-class2 .
[DEBUG] 15:53:38 WsHandler: client-class2 heartbeat success .
[INFO] 15:54:08 WsHandler: receive message from client-class2, start handle .
[INFO] 15:54:08 WsHandler: empty param .
[INFO] 15:54:08 WsHandler: recv_command-heartbeat from client-class2 .
[DEBUG] 15:54:08 WsHandler: client-class2 heartbeat success .
[INFO] 15:54:38 WsHandler: receive message from client-class2, start handle .
[INFO] 15:54:38 WsHandler: empty param .
[INFO] 15:54:38 WsHandler: recv_command-heartbeat from client-class2 .
[DEBUG] 15:54:38 WsHandler: client-class2 heartbeat success .
[INFO] 15:55:08 WsHandler: receive message from client-class2, start handle .
[INFO] 15:55:08 WsHandler: empty param .
[INFO] 15:55:08 WsHandler: recv_command-heartbeat from client-class2 .
[DEBUG] 15:55:08 WsHandler: client-class2 heartbeat success .
[INFO] 15:55:38 WsHandler: receive message from client-class2, start handle .
[INFO] 15:55:38 WsHandler: empty param .
[INFO] 15:55:38 WsHandler: recv_command-heartbeat from client-class2 .
[DEBUG] 15:55:38 WsHandler: client-class2 heartbeat success .
[INFO] 15:56:08 WsHandler: receive message from client-class2, start handle .
[INFO] 15:56:08 WsHandler: empty param .
[INFO] 15:56:08 WsHandler: recv_command-heartbeat from client-class2 .
[DEBUG] 15:56:08 WsHandler: client-class2 heartbeat success .
[INFO] 15:56:38 WsHandler: receive message from client-class2, start handle .
[INFO] 15:56:38 WsHandler: empty param .
[INFO] 15:56:38 WsHandler: recv_command-heartbeat from client-class2 .
[DEBUG] 15:56:38 WsHandler: client-class2 heartbeat success .
[INFO] 15:57:08 WsHandler: receive message from client-class2, start handle .
[INFO] 15:57:08 WsHandler: empty param .
[INFO] 15:57:08 WsHandler: recv_command-heartbeat from client-class2 .
[DEBUG] 15:57:08 WsHandler: client-class2 heartbeat success .
[INFO] 15:57:38 WsHandler: receive message from client-class2, start handle .
[INFO] 15:57:38 WsHandler: empty param .
[INFO] 15:57:38 WsHandler: recv_command-heartbeat from client-class2 .
[DEBUG] 15:57:38 WsHandler: client-class2 heartbeat success .
[INFO] 15:58:08 WsHandler: receive message from client-class2, start handle .
[INFO] 15:58:08 WsHandler: empty param .
[INFO] 15:58:08 WsHandler: recv_command-heartbeat from client-class2 .
[DEBUG] 15:58:08 WsHandler: client-class2 heartbeat success .
[INFO] 15:58:38 WsHandler: receive message from client-class2, start handle .
[INFO] 15:58:38 WsHandler: empty param .
[INFO] 15:58:38 WsHandler: recv_command-heartbeat from client-class2 .
[DEBUG] 15:58:38 WsHandler: client-class2 heartbeat success .
[INFO] 15:59:08 WsHandler: receive message from client-class2, start handle .
[INFO] 15:59:08 WsHandler: empty param .
[INFO] 15:59:08 WsHandler: recv_command-heartbeat from client-class2 .
[DEBUG] 15:59:08 WsHandler: client-class2 heartbeat success .
[INFO] 15:59:38 WsHandler: receive message from client-class2, start handle .
[INFO] 15:59:38 WsHandler: empty param .
[INFO] 15:59:38 WsHandler: recv_command-heartbeat from client-class2 .
[DEBUG] 15:59:38 WsHandler: client-class2 heartbeat success .
[INFO] 16:00:08 WsHandler: receive message from client-class2, start handle .
[INFO] 16:00:08 WsHandler: empty param .
[INFO] 16:00:08 WsHandler: recv_command-heartbeat from client-class2 .
[DEBUG] 16:00:08 WsHandler: client-class2 heartbeat success .
[INFO] 16:00:38 WsHandler: receive message from client-class2, start handle .
[INFO] 16:00:38 WsHandler: empty param .
[INFO] 16:00:38 WsHandler: recv_command-heartbeat from client-class2 .
[DEBUG] 16:00:38 WsHandler: client-class2 heartbeat success .
[INFO] 16:01:08 WsHandler: receive message from client-class2, start handle .
[INFO] 16:01:08 WsHandler: empty param .
[INFO] 16:01:08 WsHandler: recv_command-heartbeat from client-class2 .
[DEBUG] 16:01:08 WsHandler: client-class2 heartbeat success .
[INFO] 16:01:38 WsHandler: receive message from client-class2, start handle .
[INFO] 16:01:38 WsHandler: empty param .
[INFO] 16:01:38 WsHandler: recv_command-heartbeat from client-class2 .
[DEBUG] 16:01:38 WsHandler: client-class2 heartbeat success .
[INFO] 16:02:08 WsHandler: receive message from client-class2, start handle .
[INFO] 16:02:08 WsHandler: empty param .
[INFO] 16:02:08 WsHandler: recv_command-heartbeat from client-class2 .
[DEBUG] 16:02:08 WsHandler: client-class2 heartbeat success .
[INFO] 16:02:38 WsHandler: receive message from client-class2, start handle .
[INFO] 16:02:38 WsHandler: empty param .
[INFO] 16:02:38 WsHandler: recv_command-heartbeat from client-class2 .
[DEBUG] 16:02:38 WsHandler: client-class2 heartbeat success .
[INFO] 16:03:08 WsHandler: receive message from client-class2, start handle .
[INFO] 16:03:08 WsHandler: empty param .
[INFO] 16:03:08 WsHandler: recv_command-heartbeat from client-class2 .
[DEBUG] 16:03:08 WsHandler: client-class2 heartbeat success .
[INFO] 16:03:38 WsHandler: receive message from client-class2, start handle .
[INFO] 16:03:38 WsHandler: empty param .
[INFO] 16:03:38 WsHandler: recv_command-heartbeat from client-class2 .
[DEBUG] 16:03:38 WsHandler: client-class2 heartbeat success .
[INFO] 16:04:08 WsHandler: receive message from client-class2, start handle .
[INFO] 16:04:08 WsHandler: empty param .
[INFO] 16:04:08 WsHandler: recv_command-heartbeat from client-class2 .
[DEBUG] 16:04:08 WsHandler: client-class2 heartbeat success .
[INFO] 16:04:38 WsHandler: receive message from client-class2, start handle .
[INFO] 16:04:38 WsHandler: empty param .
[INFO] 16:04:38 WsHandler: recv_command-heartbeat from client-class2 .
[DEBUG] 16:04:38 WsHandler: client-class2 heartbeat success .
[INFO] 16:05:08 WsHandler: receive message from client-class2, start handle .
[INFO] 16:05:08 WsHandler: empty param .
[INFO] 16:05:08 WsHandler: recv_command-heartbeat from client-class2 .
[DEBUG] 16:05:08 WsHandler: client-class2 heartbeat success .
[INFO] 16:05:38 WsHandler: receive message from client-class2, start handle .
[INFO] 16:05:38 WsHandler: empty param .
[INFO] 16:05:38 WsHandler: recv_command-heartbeat from client-class2 .
[DEBUG] 16:05:38 WsHandler: client-class2 heartbeat success .
[INFO] 16:06:08 WsHandler: receive message from client-class2, start handle .
[INFO] 16:06:08 WsHandler: empty param .
[INFO] 16:06:08 WsHandler: recv_command-heartbeat from client-class2 .
[DEBUG] 16:06:08 WsHandler: client-class2 heartbeat success .
[INFO] 16:06:38 WsHandler: receive message from client-class2, start handle .
[INFO] 16:06:38 WsHandler: empty param .
[INFO] 16:06:38 WsHandler: recv_command-heartbeat from client-class2 .
[DEBUG] 16:06:38 WsHandler: client-class2 heartbeat success .
[INFO] 16:07:08 WsHandler: receive message from client-class2, start handle .
[INFO] 16:07:08 WsHandler: empty param .
[INFO] 16:07:08 WsHandler: recv_command-heartbeat from client-class2 .
[DEBUG] 16:07:08 WsHandler: client-class2 heartbeat success .
[INFO] 16:07:38 WsHandler: receive message from client-class2, start handle .
[INFO] 16:07:38 WsHandler: empty param .
[INFO] 16:07:38 WsHandler: recv_command-heartbeat from client-class2 .
[DEBUG] 16:07:38 WsHandler: client-class2 heartbeat success .
[INFO] 16:08:08 WsHandler: receive message from client-class2, start handle .
[INFO] 16:08:08 WsHandler: empty param .
[INFO] 16:08:08 WsHandler: recv_command-heartbeat from client-class2 .
[DEBUG] 16:08:08 WsHandler: client-class2 heartbeat success .
[INFO] 16:08:38 WsHandler: receive message from client-class2, start handle .
[INFO] 16:08:38 WsHandler: empty param .
[INFO] 16:08:38 WsHandler: recv_command-heartbeat from client-class2 .
[DEBUG] 16:08:38 WsHandler: client-class2 heartbeat success .
[INFO] 16:09:08 WsHandler: receive message from client-class2, start handle .
[INFO] 16:09:08 WsHandler: empty param .
[INFO] 16:09:08 WsHandler: recv_command-heartbeat from client-class2 .
[DEBUG] 16:09:08 WsHandler: client-class2 heartbeat success .
[INFO] 16:09:38 WsHandler: receive message from client-class2, start handle .
[INFO] 16:09:38 WsHandler: empty param .
[INFO] 16:09:38 WsHandler: recv_command-heartbeat from client-class2 .
[DEBUG] 16:09:38 WsHandler: client-class2 heartbeat success .
[INFO] 16:10:08 WsHandler: receive message from client-class2, start handle .
[INFO] 16:10:08 WsHandler: empty param .
[INFO] 16:10:08 WsHandler: recv_command-heartbeat from client-class2 .
[DEBUG] 16:10:08 WsHandler: client-class2 heartbeat success .
[INFO] 16:10:38 WsHandler: receive message from client-class2, start handle .
[INFO] 16:10:38 WsHandler: empty param .
[INFO] 16:10:38 WsHandler: recv_command-heartbeat from client-class2 .
[DEBUG] 16:10:38 WsHandler: client-class2 heartbeat success .
[INFO] 16:11:08 WsHandler: receive message from client-class2, start handle .
[INFO] 16:11:08 WsHandler: empty param .
[INFO] 16:11:08 WsHandler: recv_command-heartbeat from client-class2 .
[DEBUG] 16:11:08 WsHandler: client-class2 heartbeat success .
[INFO] 16:11:38 WsHandler: receive message from client-class2, start handle .
[INFO] 16:11:38 WsHandler: empty param .
[INFO] 16:11:38 WsHandler: recv_command-heartbeat from client-class2 .
[DEBUG] 16:11:38 WsHandler: client-class2 heartbeat success .
[INFO] 16:12:08 WsHandler: receive message from client-class2, start handle .
[INFO] 16:12:08 WsHandler: empty param .
[INFO] 16:12:08 WsHandler: recv_command-heartbeat from client-class2 .
[DEBUG] 16:12:08 WsHandler: client-class2 heartbeat success .
[INFO] 16:12:38 WsHandler: receive message from client-class2, start handle .
[INFO] 16:12:38 WsHandler: empty param .
[INFO] 16:12:38 WsHandler: recv_command-heartbeat from client-class2 .
[DEBUG] 16:12:38 WsHandler: client-class2 heartbeat success .
[INFO] 16:13:08 WsHandler: receive message from client-class2, start handle .
[INFO] 16:13:08 WsHandler: empty param .
[INFO] 16:13:08 WsHandler: recv_command-heartbeat from client-class2 .
[DEBUG] 16:13:08 WsHandler: client-class2 heartbeat success .
[INFO] 16:13:38 WsHandler: receive message from client-class2, start handle .
[INFO] 16:13:38 WsHandler: empty param .
[INFO] 16:13:38 WsHandler: recv_command-heartbeat from client-class2 .
[DEBUG] 16:13:38 WsHandler: client-class2 heartbeat success .
[INFO] 16:14:08 WsHandler: receive message from client-class2, start handle .
[INFO] 16:14:08 WsHandler: empty param .
[INFO] 16:14:08 WsHandler: recv_command-heartbeat from client-class2 .
[DEBUG] 16:14:08 WsHandler: client-class2 heartbeat success .
[INFO] 16:14:38 WsHandler: receive message from client-class2, start handle .
[INFO] 16:14:38 WsHandler: empty param .
[INFO] 16:14:38 WsHandler: recv_command-heartbeat from client-class2 .
[DEBUG] 16:14:38 WsHandler: client-class2 heartbeat success .
[INFO] 16:15:08 WsHandler: receive message from client-class2, start handle .
[INFO] 16:15:08 WsHandler: empty param .
[INFO] 16:15:08 WsHandler: recv_command-heartbeat from client-class2 .
[DEBUG] 16:15:08 WsHandler: client-class2 heartbeat success .
[INFO] 16:15:38 WsHandler: receive message from client-class2, start handle .
[INFO] 16:15:38 WsHandler: empty param .
[INFO] 16:15:38 WsHandler: recv_command-heartbeat from client-class2 .
[DEBUG] 16:15:38 WsHandler: client-class2 heartbeat success .
[INFO] 16:16:08 WsHandler: receive message from client-class2, start handle .
[INFO] 16:16:08 WsHandler: empty param .
[INFO] 16:16:08 WsHandler: recv_command-heartbeat from client-class2 .
[DEBUG] 16:16:08 WsHandler: client-class2 heartbeat success .
[INFO] 16:16:38 WsHandler: receive message from client-class2, start handle .
[INFO] 16:16:38 WsHandler: empty param .
[INFO] 16:16:38 WsHandler: recv_command-heartbeat from client-class2 .
[DEBUG] 16:16:38 WsHandler: client-class2 heartbeat success .
[INFO] 16:17:08 WsHandler: receive message from client-class2, start handle .
[INFO] 16:17:08 WsHandler: empty param .
[INFO] 16:17:08 WsHandler: recv_command-heartbeat from client-class2 .
[DEBUG] 16:17:08 WsHandler: client-class2 heartbeat success .
[INFO] 16:17:38 WsHandler: receive message from client-class2, start handle .
[INFO] 16:17:38 WsHandler: empty param .
[INFO] 16:17:38 WsHandler: recv_command-heartbeat from client-class2 .
[DEBUG] 16:17:38 WsHandler: client-class2 heartbeat success .
[INFO] 16:18:08 WsHandler: receive message from client-class2, start handle .
[INFO] 16:18:08 WsHandler: empty param .
[INFO] 16:18:08 WsHandler: recv_command-heartbeat from client-class2 .
[DEBUG] 16:18:08 WsHandler: client-class2 heartbeat success .
[INFO] 16:18:38 WsHandler: receive message from client-class2, start handle .
[INFO] 16:18:38 WsHandler: empty param .
[INFO] 16:18:38 WsHandler: recv_command-heartbeat from client-class2 .
[DEBUG] 16:18:38 WsHandler: client-class2 heartbeat success .
[INFO] 16:19:08 WsHandler: receive message from client-class2, start handle .
[INFO] 16:19:08 WsHandler: empty param .
[INFO] 16:19:08 WsHandler: recv_command-heartbeat from client-class2 .
[DEBUG] 16:19:08 WsHandler: client-class2 heartbeat success .
[INFO] 16:19:38 WsHandler: receive message from client-class2, start handle .
[INFO] 16:19:38 WsHandler: empty param .
[INFO] 16:19:38 WsHandler: recv_command-heartbeat from client-class2 .
[DEBUG] 16:19:38 WsHandler: client-class2 heartbeat success .
[INFO] 16:20:08 WsHandler: receive message from client-class2, start handle .
[INFO] 16:20:08 WsHandler: empty param .
[INFO] 16:20:08 WsHandler: recv_command-heartbeat from client-class2 .
[DEBUG] 16:20:08 WsHandler: client-class2 heartbeat success .
[INFO] 16:20:38 WsHandler: receive message from client-class2, start handle .
[INFO] 16:20:38 WsHandler: empty param .
[INFO] 16:20:38 WsHandler: recv_command-heartbeat from client-class2 .
[DEBUG] 16:20:38 WsHandler: client-class2 heartbeat success .
[INFO] 16:21:08 WsHandler: receive message from client-class2, start handle .
[INFO] 16:21:08 WsHandler: empty param .
[INFO] 16:21:08 WsHandler: recv_command-heartbeat from client-class2 .
[DEBUG] 16:21:08 WsHandler: client-class2 heartbeat success .
[INFO] 16:21:38 WsHandler: receive message from client-class2, start handle .
[INFO] 16:21:38 WsHandler: empty param .
[INFO] 16:21:38 WsHandler: recv_command-heartbeat from client-class2 .
[DEBUG] 16:21:38 WsHandler: client-class2 heartbeat success .
[INFO] 16:22:08 WsHandler: receive message from client-class2, start handle .
[INFO] 16:22:08 WsHandler: empty param .
[INFO] 16:22:08 WsHandler: recv_command-heartbeat from client-class2 .
[DEBUG] 16:22:08 WsHandler: client-class2 heartbeat success .
[INFO] 16:22:38 WsHandler: receive message from client-class2, start handle .
[INFO] 16:22:38 WsHandler: empty param .
[INFO] 16:22:38 WsHandler: recv_command-heartbeat from client-class2 .
[DEBUG] 16:22:38 WsHandler: client-class2 heartbeat success .
[INFO] 16:23:08 WsHandler: receive message from client-class2, start handle .
[INFO] 16:23:08 WsHandler: empty param .
[INFO] 16:23:08 WsHandler: recv_command-heartbeat from client-class2 .
[DEBUG] 16:23:08 WsHandler: client-class2 heartbeat success .
[INFO] 16:23:38 WsHandler: receive message from client-class2, start handle .
[INFO] 16:23:38 WsHandler: empty param .
[INFO] 16:23:38 WsHandler: recv_command-heartbeat from client-class2 .
[DEBUG] 16:23:38 WsHandler: client-class2 heartbeat success .
[INFO] 16:24:08 WsHandler: receive message from client-class2, start handle .
[INFO] 16:24:08 WsHandler: empty param .
[INFO] 16:24:08 WsHandler: recv_command-heartbeat from client-class2 .
[DEBUG] 16:24:08 WsHandler: client-class2 heartbeat success .
[INFO] 16:24:38 WsHandler: receive message from client-class2, start handle .
[INFO] 16:24:38 WsHandler: empty param .
[INFO] 16:24:38 WsHandler: recv_command-heartbeat from client-class2 .
[DEBUG] 16:24:38 WsHandler: client-class2 heartbeat success .
[INFO] 16:25:08 WsHandler: receive message from client-class2, start handle .
[INFO] 16:25:08 WsHandler: empty param .
[INFO] 16:25:08 WsHandler: recv_command-heartbeat from client-class2 .
[DEBUG] 16:25:08 WsHandler: client-class2 heartbeat success .
[INFO] 16:25:38 WsHandler: receive message from client-class2, start handle .
[INFO] 16:25:38 WsHandler: empty param .
[INFO] 16:25:38 WsHandler: recv_command-heartbeat from client-class2 .
[DEBUG] 16:25:38 WsHandler: client-class2 heartbeat success .
[INFO] 16:26:08 WsHandler: receive message from client-class2, start handle .
[INFO] 16:26:08 WsHandler: empty param .
[INFO] 16:26:08 WsHandler: recv_command-heartbeat from client-class2 .
[DEBUG] 16:26:08 WsHandler: client-class2 heartbeat success .
[INFO] 16:26:38 WsHandler: receive message from client-class2, start handle .
[INFO] 16:26:38 WsHandler: empty param .
[INFO] 16:26:38 WsHandler: recv_command-heartbeat from client-class2 .
[DEBUG] 16:26:38 WsHandler: client-class2 heartbeat success .
[INFO] 16:27:08 WsHandler: receive message from client-class2, start handle .
[INFO] 16:27:08 WsHandler: empty param .
[INFO] 16:27:08 WsHandler: recv_command-heartbeat from client-class2 .
[DEBUG] 16:27:08 WsHandler: client-class2 heartbeat success .
[INFO] 16:27:38 WsHandler: receive message from client-class2, start handle .
[INFO] 16:27:38 WsHandler: empty param .
[INFO] 16:27:38 WsHandler: recv_command-heartbeat from client-class2 .
[DEBUG] 16:27:38 WsHandler: client-class2 heartbeat success .
[INFO] 16:28:08 WsHandler: receive message from client-class2, start handle .
[INFO] 16:28:08 WsHandler: empty param .
[INFO] 16:28:08 WsHandler: recv_command-heartbeat from client-class2 .
[DEBUG] 16:28:08 WsHandler: client-class2 heartbeat success .
[INFO] 16:28:38 WsHandler: receive message from client-class2, start handle .
[INFO] 16:28:38 WsHandler: empty param .
[INFO] 16:28:38 WsHandler: recv_command-heartbeat from client-class2 .
[DEBUG] 16:28:38 WsHandler: client-class2 heartbeat success .
[INFO] 16:29:08 WsHandler: receive message from client-class2, start handle .
[INFO] 16:29:08 WsHandler: empty param .
[INFO] 16:29:08 WsHandler: recv_command-heartbeat from client-class2 .
[DEBUG] 16:29:08 WsHandler: client-class2 heartbeat success .
[INFO] 16:29:39 WsHandler: receive message from client-class2, start handle .
[INFO] 16:29:39 WsHandler: empty param .
[INFO] 16:29:39 WsHandler: recv_command-heartbeat from client-class2 .
[DEBUG] 16:29:39 WsHandler: client-class2 heartbeat success .
[INFO] 16:30:09 WsHandler: receive message from client-class2, start handle .
[INFO] 16:30:09 WsHandler: empty param .
[INFO] 16:30:09 WsHandler: recv_command-heartbeat from client-class2 .
[DEBUG] 16:30:09 WsHandler: client-class2 heartbeat success .
[INFO] 16:30:39 WsHandler: receive message from client-class2, start handle .
[INFO] 16:30:39 WsHandler: empty param .
[INFO] 16:30:39 WsHandler: recv_command-heartbeat from client-class2 .
[DEBUG] 16:30:39 WsHandler: client-class2 heartbeat success .
[INFO] 16:31:09 WsHandler: receive message from client-class2, start handle .
[INFO] 16:31:09 WsHandler: empty param .
[INFO] 16:31:09 WsHandler: recv_command-heartbeat from client-class2 .
[DEBUG] 16:31:09 WsHandler: client-class2 heartbeat success .
[INFO] 16:31:39 WsHandler: receive message from client-class2, start handle .
[INFO] 16:31:39 WsHandler: empty param .
[INFO] 16:31:39 WsHandler: recv_command-heartbeat from client-class2 .
[DEBUG] 16:31:39 WsHandler: client-class2 heartbeat success .
[INFO] 16:32:09 WsHandler: receive message from client-class2, start handle .
[INFO] 16:32:09 WsHandler: empty param .
[INFO] 16:32:09 WsHandler: recv_command-heartbeat from client-class2 .
[DEBUG] 16:32:09 WsHandler: client-class2 heartbeat success .
[INFO] 16:32:39 WsHandler: receive message from client-class2, start handle .
[INFO] 16:32:39 WsHandler: empty param .
[INFO] 16:32:39 WsHandler: recv_command-heartbeat from client-class2 .
[DEBUG] 16:32:39 WsHandler: client-class2 heartbeat success .
[INFO] 16:33:09 WsHandler: receive message from client-class2, start handle .
[INFO] 16:33:09 WsHandler: empty param .
[INFO] 16:33:09 WsHandler: recv_command-heartbeat from client-class2 .
[DEBUG] 16:33:09 WsHandler: client-class2 heartbeat success .
[INFO] 21:56:06 MongoDB: database_names_list has been updated .
[INFO] 21:56:06 MongoDB: database_names_list has been updated .
[INFO] 21:56:06 ######## NL-BACKEND RUN NOW ######## .
[INFO] 21:56:06 BackendInit: now start backend .
[INFO] 21:56:06 WsServer: Start websocket server... .
[INFO] 21:56:06 HttpServer: Start http server... .
[INFO] 21:56:06 WsServer: socket listening on: 0.0.0.0:5024 .
[INFO] 21:56:06 HttpServer: ServerAddr: 0.0.0.0:5000 .
[INFO] 21:56:06 WsServer: server start, wait for client connecting... .
[INFO] 21:56:09 HttpHandler: received http request, start handle... .
[INFO] 21:56:09 HttpHandler: start auth .
[INFO] 21:56:09 MongoDB: coll_exist?: second time search start .
[INFO] 21:56:09 MongoDB: collection_names_list has been updated .
[INFO] 21:56:09 MongoDB: collection-0101 exist .
[INFO] 21:56:09 HttpHandler: auth completed .
[INFO] 21:56:09 HttpHandler: user_login is allowed, start handle .
[INFO] 21:56:09 LocalCaller: start user_login .
[ERROR] 21:56:09 LocalCaller: user_login: Your param is incomplete! .
[INFO] 21:56:09 HttpHandler: command-user_login handle completed .
[INFO] 21:58:04 HttpHandler: received http request, start handle... .
[INFO] 21:58:04 HttpHandler: start auth .
[INFO] 21:58:04 MongoDB: collection-0101 exist .
[INFO] 21:58:04 MongoDB: coll_exist?: second time search start .
[INFO] 21:58:04 MongoDB: collection_names_list has been updated .
[INFO] 21:58:04 MongoDB: collection-0101 exist .
[INFO] 21:58:04 HttpHandler: auth completed .
[INFO] 21:58:04 HttpHandler: user_login is allowed, start handle .
[INFO] 21:58:04 LocalCaller: start user_login .
[INFO] 21:58:04 UserManager: Try login 0101 .
[INFO] 21:58:04 UserInfoManager: try to get user- 0101's password .
[INFO] 21:58:04 MongoDB: try to get document from interviewer/0101 .
[INFO] 21:58:04 MongoDB: parsing the documents, targets: ['password'] .
[INFO] 21:58:04 UserInfoManager: try to get user- 0101's user_type .
[INFO] 21:58:04 MongoDB: update document success. Update count: 1 .
[INFO] 21:58:04 MongoDB: update document success. Update count: 1 .
[INFO] 21:58:04 MongoDB: update document success. Update count: 1 .
[INFO] 21:58:04 UserManager: login success .
[INFO] 21:58:04 MongoDB: try to get document from interviewer/0101 .
[INFO] 21:58:04 MongoDB: parsing the documents, targets: ['mappingComCode'] .
[INFO] 21:58:04 MongoDB: try to get document from interview/now .
[INFO] 21:58:04 MongoDB: parsing the documents, targets: ['status'] .
[INFO] 21:58:04 MongoDB: update document success. Update count: 1 .
[INFO] 21:58:04 HttpHandler: command-user_login handle completed .
[INFO] 21:58:05 HttpHandler: received http request, start handle... .
[INFO] 21:58:05 HttpHandler: start auth .
[INFO] 21:58:05 MongoDB: collection-0101 exist .
[INFO] 21:58:05 MongoDB: coll_exist?: second time search start .
[INFO] 21:58:05 MongoDB: collection_names_list has been updated .
[INFO] 21:58:05 MongoDB: collection-0101 exist .
[INFO] 21:58:05 MongoDB: try to get document from interviewer/0101 .
[INFO] 21:58:05 MongoDB: parsing the documents, targets: ['lastLoginTimeStamp'] .
[INFO] 21:58:05 HttpHandler: user-0101's LLTS: 1650722284 .
[INFO] 21:58:05 MongoDB: try to get document from interviewer/0101 .
[INFO] 21:58:05 MongoDB: parsing the documents, targets: ['isOnline'] .
[INFO] 21:58:05 HttpHandler: time stamp is in law .
[INFO] 21:58:05 MongoDB: try to get document from interviewer/0101 .
[INFO] 21:58:05 MongoDB: parsing the documents, targets: ['token'] .
[INFO] 21:58:05 HttpHandler: auth completed .
[INFO] 21:58:05 HttpHandler: user_info_get_one_multi is allowed, start handle .
[INFO] 21:58:05 LocalCaller: start user_info_get_one_multi .
[INFO] 21:58:05 UserInfoManager: try to get user- 0101's mappingComCode .
[INFO] 21:58:05 HttpHandler: command-user_info_get_one_multi handle completed .
[INFO] 21:58:48 HttpHandler: received http request, start handle... .
[INFO] 21:58:48 HttpHandler: start auth .
[INFO] 21:58:48 MongoDB: collection-0101 exist .
[INFO] 21:58:48 MongoDB: coll_exist?: second time search start .
[INFO] 21:58:48 MongoDB: collection_names_list has been updated .
[INFO] 21:58:48 MongoDB: collection-0101 exist .
[INFO] 21:58:48 HttpHandler: auth completed .
[INFO] 21:58:48 HttpHandler: user_login is allowed, start handle .
[INFO] 21:58:48 LocalCaller: start user_login .
[INFO] 21:58:48 UserManager: Try login 0101 .
[INFO] 21:58:48 UserInfoManager: try to get user- 0101's password .
[INFO] 21:58:48 MongoDB: try to get document from interviewer/0101 .
[INFO] 21:58:48 MongoDB: parsing the documents, targets: ['password'] .
[INFO] 21:58:48 UserInfoManager: try to get user- 0101's user_type .
[INFO] 21:58:48 MongoDB: update document success. Update count: 0 .
[INFO] 21:58:48 MongoDB: update document success. Update count: 1 .
[INFO] 21:58:48 MongoDB: update document success. Update count: 1 .
[INFO] 21:58:48 UserManager: login success .
[INFO] 21:58:48 MongoDB: try to get document from interviewer/0101 .
[INFO] 21:58:48 MongoDB: parsing the documents, targets: ['mappingComCode'] .
[INFO] 21:58:48 MongoDB: try to get document from interview/now .
[INFO] 21:58:48 MongoDB: parsing the documents, targets: ['status'] .
[INFO] 21:58:48 HttpHandler: command-user_login handle completed .
[INFO] 21:58:48 HttpHandler: received http request, start handle... .
[INFO] 21:58:48 HttpHandler: start auth .
[INFO] 21:58:48 MongoDB: collection-0101 exist .
[INFO] 21:58:48 MongoDB: coll_exist?: second time search start .
[INFO] 21:58:48 MongoDB: collection_names_list has been updated .
[INFO] 21:58:48 MongoDB: collection-0101 exist .
[INFO] 21:58:48 MongoDB: try to get document from interviewer/0101 .
[INFO] 21:58:48 MongoDB: parsing the documents, targets: ['lastLoginTimeStamp'] .
[INFO] 21:58:48 HttpHandler: user-0101's LLTS: 1650722328 .
[INFO] 21:58:48 MongoDB: try to get document from interviewer/0101 .
[INFO] 21:58:48 MongoDB: parsing the documents, targets: ['isOnline'] .
[INFO] 21:58:48 HttpHandler: time stamp is in law .
[INFO] 21:58:48 MongoDB: try to get document from interviewer/0101 .
[INFO] 21:58:48 MongoDB: parsing the documents, targets: ['token'] .
[INFO] 21:58:48 HttpHandler: auth completed .
[INFO] 21:58:48 HttpHandler: user_info_get_one_multi is allowed, start handle .
[INFO] 21:58:48 LocalCaller: start user_info_get_one_multi .
[INFO] 21:58:48 UserInfoManager: try to get user- 0101's mappingComCode .
[INFO] 21:58:48 HttpHandler: command-user_info_get_one_multi handle completed .
[INFO] 21:58:48 HttpHandler: received http request, start handle... .
[INFO] 21:58:48 HttpHandler: start auth .
[INFO] 21:58:48 MongoDB: collection-0101 exist .
[INFO] 21:58:48 MongoDB: coll_exist?: second time search start .
[INFO] 21:58:48 MongoDB: collection_names_list has been updated .
[INFO] 21:58:48 MongoDB: collection-0101 exist .
[INFO] 21:58:48 HttpHandler: auth completed .
[INFO] 21:58:48 HttpHandler: get_enterprise_info is allowed, start handle .
[INFO] 21:58:48 LocalCaller: start get_enterprise_info .
[INFO] 21:58:48 OIISBackendMain: try to get enterprise-None's info .
[INFO] 21:58:48 MongoDB: try to get document from enterprise/None .
[INFO] 21:58:48 HttpHandler: command-get_enterprise_info handle completed .
[INFO] 21:59:14 HttpHandler: received http request, start handle... .
[INFO] 21:59:14 HttpHandler: start auth .
[INFO] 21:59:14 MongoDB: collection-0101 exist .
[INFO] 21:59:14 MongoDB: coll_exist?: second time search start .
[INFO] 21:59:14 MongoDB: collection_names_list has been updated .
[INFO] 21:59:14 MongoDB: collection-0101 exist .
[INFO] 21:59:14 HttpHandler: auth completed .
[INFO] 21:59:14 HttpHandler: user_login is allowed, start handle .
[INFO] 21:59:14 LocalCaller: start user_login .
[INFO] 21:59:14 UserManager: Try login 0101 .
[INFO] 21:59:14 UserInfoManager: try to get user- 0101's password .
[INFO] 21:59:14 MongoDB: try to get document from interviewer/0101 .
[INFO] 21:59:14 MongoDB: parsing the documents, targets: ['password'] .
[INFO] 21:59:14 UserInfoManager: try to get user- 0101's user_type .
[INFO] 21:59:14 MongoDB: update document success. Update count: 0 .
[INFO] 21:59:14 MongoDB: update document success. Update count: 1 .
[INFO] 21:59:14 MongoDB: update document success. Update count: 1 .
[INFO] 21:59:14 UserManager: login success .
[INFO] 21:59:14 MongoDB: try to get document from interviewer/0101 .
[INFO] 21:59:14 MongoDB: parsing the documents, targets: ['mappingComCode'] .
[INFO] 21:59:14 MongoDB: try to get document from interview/now .
[INFO] 21:59:14 MongoDB: parsing the documents, targets: ['status'] .
[INFO] 21:59:14 HttpHandler: command-user_login handle completed .
[INFO] 21:59:14 HttpHandler: received http request, start handle... .
[INFO] 21:59:14 HttpHandler: start auth .
[INFO] 21:59:14 MongoDB: collection-0101 exist .
[INFO] 21:59:14 MongoDB: coll_exist?: second time search start .
[INFO] 21:59:14 MongoDB: collection_names_list has been updated .
[INFO] 21:59:14 MongoDB: collection-0101 exist .
[INFO] 21:59:14 MongoDB: try to get document from interviewer/0101 .
[INFO] 21:59:14 MongoDB: parsing the documents, targets: ['lastLoginTimeStamp'] .
[INFO] 21:59:14 HttpHandler: user-0101's LLTS: 1650722354 .
[INFO] 21:59:14 MongoDB: try to get document from interviewer/0101 .
[INFO] 21:59:14 MongoDB: parsing the documents, targets: ['isOnline'] .
[INFO] 21:59:14 HttpHandler: time stamp is in law .
[INFO] 21:59:14 MongoDB: try to get document from interviewer/0101 .
[INFO] 21:59:14 MongoDB: parsing the documents, targets: ['token'] .
[INFO] 21:59:14 HttpHandler: auth completed .
[INFO] 21:59:14 HttpHandler: user_info_get_one_multi is allowed, start handle .
[INFO] 21:59:14 LocalCaller: start user_info_get_one_multi .
[INFO] 21:59:14 UserInfoManager: try to get user- 0101's mappingComCode .
[INFO] 21:59:14 HttpHandler: command-user_info_get_one_multi handle completed .
[INFO] 21:59:14 HttpHandler: received http request, start handle... .
[INFO] 21:59:14 HttpHandler: start auth .
[INFO] 21:59:14 MongoDB: collection-0101 exist .
[INFO] 21:59:14 MongoDB: coll_exist?: second time search start .
[INFO] 21:59:14 MongoDB: collection_names_list has been updated .
[INFO] 21:59:14 MongoDB: collection-0101 exist .
[INFO] 21:59:14 HttpHandler: auth completed .
[INFO] 21:59:14 HttpHandler: get_enterprise_info is allowed, start handle .
[INFO] 21:59:14 LocalCaller: start get_enterprise_info .
[INFO] 21:59:14 OIISBackendMain: try to get enterprise-None's info .
[INFO] 21:59:14 MongoDB: try to get document from enterprise/None .
[INFO] 21:59:14 HttpHandler: command-get_enterprise_info handle completed .
[INFO] 22:03:35 HttpHandler: received http request, start handle... .
[INFO] 22:03:35 HttpHandler: start auth .
[INFO] 22:03:35 MongoDB: collection-0101 exist .
[INFO] 22:03:35 MongoDB: coll_exist?: second time search start .
[INFO] 22:03:35 MongoDB: collection_names_list has been updated .
[INFO] 22:03:35 MongoDB: collection-0101 exist .
[INFO] 22:03:35 HttpHandler: auth completed .
[INFO] 22:03:35 HttpHandler: user_login is allowed, start handle .
[INFO] 22:03:35 LocalCaller: start user_login .
[INFO] 22:03:35 UserManager: Try login 0101 .
[INFO] 22:03:35 UserInfoManager: try to get user- 0101's password .
[INFO] 22:03:35 MongoDB: try to get document from interviewer/0101 .
[INFO] 22:03:35 MongoDB: parsing the documents, targets: ['password'] .
[INFO] 22:03:35 UserInfoManager: try to get user- 0101's user_type .
[INFO] 22:03:35 MongoDB: update document success. Update count: 0 .
[INFO] 22:03:35 MongoDB: update document success. Update count: 1 .
[INFO] 22:03:35 MongoDB: update document success. Update count: 1 .
[INFO] 22:03:35 UserManager: login success .
[INFO] 22:03:35 MongoDB: try to get document from interviewer/0101 .
[INFO] 22:03:35 MongoDB: parsing the documents, targets: ['mappingComCode'] .
[INFO] 22:03:35 MongoDB: try to get document from interview/now .
[INFO] 22:03:35 MongoDB: parsing the documents, targets: ['status'] .
[INFO] 22:03:35 HttpHandler: command-user_login handle completed .
[INFO] 22:03:35 HttpHandler: received http request, start handle... .
[INFO] 22:03:35 HttpHandler: start auth .
[INFO] 22:03:35 MongoDB: collection-0101 exist .
[INFO] 22:03:35 MongoDB: coll_exist?: second time search start .
[INFO] 22:03:35 MongoDB: collection_names_list has been updated .
[INFO] 22:03:35 MongoDB: collection-0101 exist .
[INFO] 22:03:35 MongoDB: try to get document from interviewer/0101 .
[INFO] 22:03:35 MongoDB: parsing the documents, targets: ['lastLoginTimeStamp'] .
[INFO] 22:03:35 HttpHandler: user-0101's LLTS: 1650722615 .
[INFO] 22:03:35 MongoDB: try to get document from interviewer/0101 .
[INFO] 22:03:35 MongoDB: parsing the documents, targets: ['isOnline'] .
[INFO] 22:03:35 HttpHandler: time stamp is in law .
[INFO] 22:03:35 MongoDB: try to get document from interviewer/0101 .
[INFO] 22:03:35 MongoDB: parsing the documents, targets: ['token'] .
[INFO] 22:03:35 HttpHandler: auth completed .
[INFO] 22:03:35 HttpHandler: user_info_get_one_multi is allowed, start handle .
[INFO] 22:03:35 LocalCaller: start user_info_get_one_multi .
[INFO] 22:03:35 UserInfoManager: try to get user- 0101's mappingComCode .
[INFO] 22:03:35 HttpHandler: command-user_info_get_one_multi handle completed .
[INFO] 22:03:35 HttpHandler: received http request, start handle... .
[INFO] 22:03:35 HttpHandler: start auth .
[INFO] 22:03:35 MongoDB: collection-0101 exist .
[INFO] 22:03:35 MongoDB: coll_exist?: second time search start .
[INFO] 22:03:35 MongoDB: collection_names_list has been updated .
[INFO] 22:03:35 MongoDB: collection-0101 exist .
[INFO] 22:03:35 HttpHandler: auth completed .
[INFO] 22:03:35 HttpHandler: get_enterprise_info is allowed, start handle .
[INFO] 22:03:35 LocalCaller: start get_enterprise_info .
[INFO] 22:03:35 OIISBackendMain: try to get enterprise-None's info .
[INFO] 22:03:35 MongoDB: try to get document from enterprise/None .
[INFO] 22:03:35 HttpHandler: command-get_enterprise_info handle completed .
[INFO] 22:05:36 HttpHandler: received http request, start handle... .
[INFO] 22:05:36 HttpHandler: start auth .
[INFO] 22:05:36 MongoDB: collection-0101 exist .
[INFO] 22:05:36 MongoDB: coll_exist?: second time search start .
[INFO] 22:05:36 MongoDB: collection_names_list has been updated .
[INFO] 22:05:36 MongoDB: collection-0101 exist .
[INFO] 22:05:36 HttpHandler: auth completed .
[INFO] 22:05:36 HttpHandler: user_login is allowed, start handle .
[INFO] 22:05:36 LocalCaller: start user_login .
[INFO] 22:05:36 UserManager: Try login 0101 .
[INFO] 22:05:36 UserInfoManager: try to get user- 0101's password .
[INFO] 22:05:36 MongoDB: try to get document from interviewer/0101 .
[INFO] 22:05:36 MongoDB: parsing the documents, targets: ['password'] .
[INFO] 22:05:36 UserInfoManager: try to get user- 0101's user_type .
[INFO] 22:05:36 MongoDB: update document success. Update count: 0 .
[INFO] 22:05:36 MongoDB: update document success. Update count: 1 .
[INFO] 22:05:36 MongoDB: update document success. Update count: 1 .
[INFO] 22:05:36 UserManager: login success .
[INFO] 22:05:36 MongoDB: try to get document from interviewer/0101 .
[INFO] 22:05:36 MongoDB: parsing the documents, targets: ['mappingComCode'] .
[INFO] 22:05:36 MongoDB: try to get document from interview/now .
[INFO] 22:05:36 MongoDB: parsing the documents, targets: ['status'] .
[INFO] 22:05:36 HttpHandler: command-user_login handle completed .
[INFO] 22:05:36 HttpHandler: received http request, start handle... .
[INFO] 22:05:36 HttpHandler: start auth .
[INFO] 22:05:36 MongoDB: collection-0101 exist .
[INFO] 22:05:36 MongoDB: coll_exist?: second time search start .
[INFO] 22:05:36 MongoDB: collection_names_list has been updated .
[INFO] 22:05:36 MongoDB: collection-0101 exist .
[INFO] 22:05:36 MongoDB: try to get document from interviewer/0101 .
[INFO] 22:05:36 MongoDB: parsing the documents, targets: ['lastLoginTimeStamp'] .
[INFO] 22:05:36 HttpHandler: user-0101's LLTS: 1650722736 .
[INFO] 22:05:36 MongoDB: try to get document from interviewer/0101 .
[INFO] 22:05:36 MongoDB: parsing the documents, targets: ['isOnline'] .
[INFO] 22:05:36 HttpHandler: time stamp is in law .
[INFO] 22:05:36 MongoDB: try to get document from interviewer/0101 .
[INFO] 22:05:36 MongoDB: parsing the documents, targets: ['token'] .
[INFO] 22:05:36 HttpHandler: auth completed .
[INFO] 22:05:36 HttpHandler: user_info_get_one_multi is allowed, start handle .
[INFO] 22:05:36 LocalCaller: start user_info_get_one_multi .
[INFO] 22:05:36 UserInfoManager: try to get user- 0101's mappingComCode .
[INFO] 22:05:36 HttpHandler: command-user_info_get_one_multi handle completed .
[INFO] 22:05:36 HttpHandler: received http request, start handle... .
[INFO] 22:05:36 HttpHandler: start auth .
[INFO] 22:05:36 MongoDB: collection-0101 exist .
[INFO] 22:05:36 MongoDB: coll_exist?: second time search start .
[INFO] 22:05:36 MongoDB: collection_names_list has been updated .
[INFO] 22:05:36 MongoDB: collection-0101 exist .
[INFO] 22:05:36 HttpHandler: auth completed .
[INFO] 22:05:36 HttpHandler: get_enterprise_info is allowed, start handle .
[INFO] 22:05:36 LocalCaller: start get_enterprise_info .
[INFO] 22:05:36 OIISBackendMain: try to get enterprise-None's info .
[INFO] 22:05:36 MongoDB: try to get document from enterprise/None .
[INFO] 22:05:36 HttpHandler: command-get_enterprise_info handle completed .
[INFO] 22:06:29 HttpHandler: received http request, start handle... .
[INFO] 22:06:29 HttpHandler: start auth .
[INFO] 22:06:29 MongoDB: collection-0101 exist .
[INFO] 22:06:29 MongoDB: coll_exist?: second time search start .
[INFO] 22:06:29 MongoDB: collection_names_list has been updated .
[INFO] 22:06:29 MongoDB: collection-0101 exist .
[INFO] 22:06:29 HttpHandler: auth completed .
[INFO] 22:06:29 HttpHandler: user_login is allowed, start handle .
[INFO] 22:06:29 LocalCaller: start user_login .
[INFO] 22:06:29 UserManager: Try login 0101 .
[INFO] 22:06:29 UserInfoManager: try to get user- 0101's password .
[INFO] 22:06:29 MongoDB: try to get document from interviewer/0101 .
[INFO] 22:06:29 MongoDB: parsing the documents, targets: ['password'] .
[INFO] 22:06:29 UserInfoManager: try to get user- 0101's user_type .
[INFO] 22:06:29 MongoDB: update document success. Update count: 0 .
[INFO] 22:06:29 MongoDB: update document success. Update count: 1 .
[INFO] 22:06:29 MongoDB: update document success. Update count: 1 .
[INFO] 22:06:29 UserManager: login success .
[INFO] 22:06:29 MongoDB: try to get document from interviewer/0101 .
[INFO] 22:06:29 MongoDB: parsing the documents, targets: ['mappingComCode'] .
[INFO] 22:06:29 MongoDB: try to get document from interview/now .
[INFO] 22:06:29 MongoDB: parsing the documents, targets: ['status'] .
[INFO] 22:06:29 HttpHandler: command-user_login handle completed .
[INFO] 22:06:29 HttpHandler: received http request, start handle... .
[INFO] 22:06:29 HttpHandler: start auth .
[INFO] 22:06:29 MongoDB: collection-0101 exist .
[INFO] 22:06:29 MongoDB: coll_exist?: second time search start .
[INFO] 22:06:29 MongoDB: collection_names_list has been updated .
[INFO] 22:06:29 MongoDB: collection-0101 exist .
[INFO] 22:06:29 MongoDB: try to get document from interviewer/0101 .
[INFO] 22:06:29 MongoDB: parsing the documents, targets: ['lastLoginTimeStamp'] .
[INFO] 22:06:29 HttpHandler: user-0101's LLTS: 1650722789 .
[INFO] 22:06:29 MongoDB: try to get document from interviewer/0101 .
[INFO] 22:06:29 MongoDB: parsing the documents, targets: ['isOnline'] .
[INFO] 22:06:29 HttpHandler: time stamp is in law .
[INFO] 22:06:29 MongoDB: try to get document from interviewer/0101 .
[INFO] 22:06:29 MongoDB: parsing the documents, targets: ['token'] .
[INFO] 22:06:29 HttpHandler: auth completed .
[INFO] 22:06:29 HttpHandler: user_info_get_one_multi is allowed, start handle .
[INFO] 22:06:29 LocalCaller: start user_info_get_one_multi .
[INFO] 22:06:29 UserInfoManager: try to get user- 0101's mappingComCode .
[INFO] 22:06:29 HttpHandler: command-user_info_get_one_multi handle completed .
[INFO] 22:06:29 HttpHandler: received http request, start handle... .
[INFO] 22:06:29 HttpHandler: start auth .
[INFO] 22:06:29 MongoDB: collection-0101 exist .
[INFO] 22:06:29 MongoDB: coll_exist?: second time search start .
[INFO] 22:06:29 MongoDB: collection_names_list has been updated .
[INFO] 22:06:29 MongoDB: collection-0101 exist .
[INFO] 22:06:29 HttpHandler: auth completed .
[INFO] 22:06:29 HttpHandler: get_enterprise_info is allowed, start handle .
[INFO] 22:06:29 LocalCaller: start get_enterprise_info .
[INFO] 22:06:29 OIISBackendMain: try to get enterprise-None's info .
[INFO] 22:06:29 MongoDB: try to get document from enterprise/None .
[INFO] 22:06:29 HttpHandler: command-get_enterprise_info handle completed .
[INFO] 22:06:53 HttpHandler: received http request, start handle... .
[INFO] 22:06:53 HttpHandler: start auth .
[INFO] 22:06:53 MongoDB: collection-0101 exist .
[INFO] 22:06:53 MongoDB: coll_exist?: second time search start .
[INFO] 22:06:53 MongoDB: collection_names_list has been updated .
[INFO] 22:06:53 MongoDB: collection-0101 exist .
[INFO] 22:06:53 HttpHandler: auth completed .
[INFO] 22:06:53 HttpHandler: user_login is allowed, start handle .
[INFO] 22:06:53 LocalCaller: start user_login .
[INFO] 22:06:53 UserManager: Try login 0101 .
[INFO] 22:06:53 UserInfoManager: try to get user- 0101's password .
[INFO] 22:06:53 MongoDB: try to get document from interviewer/0101 .
[INFO] 22:06:53 MongoDB: parsing the documents, targets: ['password'] .
[INFO] 22:06:53 UserInfoManager: try to get user- 0101's user_type .
[INFO] 22:06:53 MongoDB: update document success. Update count: 0 .
[INFO] 22:06:53 MongoDB: update document success. Update count: 1 .
[INFO] 22:06:53 MongoDB: update document success. Update count: 1 .
[INFO] 22:06:53 UserManager: login success .
[INFO] 22:06:53 MongoDB: try to get document from interviewer/0101 .
[INFO] 22:06:53 MongoDB: parsing the documents, targets: ['mappingComCode'] .
[INFO] 22:06:53 MongoDB: try to get document from interview/now .
[INFO] 22:06:53 MongoDB: parsing the documents, targets: ['status'] .
[INFO] 22:06:53 HttpHandler: command-user_login handle completed .
[INFO] 22:06:53 HttpHandler: received http request, start handle... .
[INFO] 22:06:53 HttpHandler: start auth .
[INFO] 22:06:53 MongoDB: collection-0101 exist .
[INFO] 22:06:53 MongoDB: coll_exist?: second time search start .
[INFO] 22:06:53 MongoDB: collection_names_list has been updated .
[INFO] 22:06:53 MongoDB: collection-0101 exist .
[INFO] 22:06:53 MongoDB: try to get document from interviewer/0101 .
[INFO] 22:06:53 MongoDB: parsing the documents, targets: ['lastLoginTimeStamp'] .
[INFO] 22:06:53 HttpHandler: user-0101's LLTS: 1650722813 .
[INFO] 22:06:53 MongoDB: try to get document from interviewer/0101 .
[INFO] 22:06:53 MongoDB: parsing the documents, targets: ['isOnline'] .
[INFO] 22:06:53 HttpHandler: time stamp is in law .
[INFO] 22:06:53 MongoDB: try to get document from interviewer/0101 .
[INFO] 22:06:53 MongoDB: parsing the documents, targets: ['token'] .
[INFO] 22:06:53 HttpHandler: auth completed .
[INFO] 22:06:53 HttpHandler: user_info_get_one_multi is allowed, start handle .
[INFO] 22:06:53 LocalCaller: start user_info_get_one_multi .
[INFO] 22:06:53 UserInfoManager: try to get user- 0101's mappingComCode .
[INFO] 22:06:53 HttpHandler: command-user_info_get_one_multi handle completed .
[INFO] 22:06:53 HttpHandler: received http request, start handle... .
[INFO] 22:06:53 HttpHandler: start auth .
[INFO] 22:06:53 MongoDB: collection-0101 exist .
[INFO] 22:06:53 MongoDB: coll_exist?: second time search start .
[INFO] 22:06:53 MongoDB: collection_names_list has been updated .
[INFO] 22:06:53 MongoDB: collection-0101 exist .
[INFO] 22:06:53 HttpHandler: auth completed .
[INFO] 22:06:53 HttpHandler: get_enterprise_info is allowed, start handle .
[INFO] 22:06:53 LocalCaller: start get_enterprise_info .
[INFO] 22:06:53 OIISBackendMain: try to get enterprise-None's info .
[INFO] 22:06:53 MongoDB: try to get document from enterprise/None .
[INFO] 22:06:53 HttpHandler: command-get_enterprise_info handle completed .
[INFO] 22:10:05 HttpHandler: received http request, start handle... .
[INFO] 22:10:05 HttpHandler: start auth .
[INFO] 22:10:05 MongoDB: collection-0101 exist .
[INFO] 22:10:05 MongoDB: coll_exist?: second time search start .
[INFO] 22:10:05 MongoDB: collection_names_list has been updated .
[INFO] 22:10:05 MongoDB: collection-0101 exist .
[INFO] 22:10:05 HttpHandler: auth completed .
[INFO] 22:10:05 HttpHandler: user_login is allowed, start handle .
[INFO] 22:10:05 LocalCaller: start user_login .
[INFO] 22:10:05 UserManager: Try login 0101 .
[INFO] 22:10:05 UserInfoManager: try to get user- 0101's password .
[INFO] 22:10:05 MongoDB: try to get document from interviewer/0101 .
[INFO] 22:10:05 MongoDB: parsing the documents, targets: ['password'] .
[INFO] 22:10:05 UserInfoManager: try to get user- 0101's user_type .
[INFO] 22:10:05 MongoDB: update document success. Update count: 0 .
[INFO] 22:10:05 MongoDB: update document success. Update count: 1 .
[INFO] 22:10:05 MongoDB: update document success. Update count: 1 .
[INFO] 22:10:05 UserManager: login success .
[INFO] 22:10:05 MongoDB: try to get document from interviewer/0101 .
[INFO] 22:10:05 MongoDB: parsing the documents, targets: ['mappingComCode'] .
[INFO] 22:10:05 MongoDB: try to get document from interview/now .
[INFO] 22:10:05 MongoDB: parsing the documents, targets: ['status'] .
[INFO] 22:10:05 HttpHandler: command-user_login handle completed .
[INFO] 22:10:05 HttpHandler: received http request, start handle... .
[INFO] 22:10:05 HttpHandler: start auth .
[INFO] 22:10:05 MongoDB: collection-0101 exist .
[INFO] 22:10:05 MongoDB: coll_exist?: second time search start .
[INFO] 22:10:05 MongoDB: collection_names_list has been updated .
[INFO] 22:10:05 MongoDB: collection-0101 exist .
[INFO] 22:10:05 MongoDB: try to get document from interviewer/0101 .
[INFO] 22:10:05 MongoDB: parsing the documents, targets: ['lastLoginTimeStamp'] .
[INFO] 22:10:05 HttpHandler: user-0101's LLTS: 1650723005 .
[INFO] 22:10:05 MongoDB: try to get document from interviewer/0101 .
[INFO] 22:10:05 MongoDB: parsing the documents, targets: ['isOnline'] .
[INFO] 22:10:05 HttpHandler: time stamp is in law .
[INFO] 22:10:05 MongoDB: try to get document from interviewer/0101 .
[INFO] 22:10:05 MongoDB: parsing the documents, targets: ['token'] .
[INFO] 22:10:05 HttpHandler: auth completed .
[INFO] 22:10:05 HttpHandler: user_info_get_one_multi is allowed, start handle .
[INFO] 22:10:05 LocalCaller: start user_info_get_one_multi .
[INFO] 22:10:05 UserInfoManager: try to get user- 0101's mappingComCode .
[INFO] 22:10:05 HttpHandler: command-user_info_get_one_multi handle completed .
[INFO] 22:10:05 HttpHandler: received http request, start handle... .
[INFO] 22:10:05 HttpHandler: start auth .
[INFO] 22:10:05 MongoDB: collection-0101 exist .
[INFO] 22:10:05 MongoDB: coll_exist?: second time search start .
[INFO] 22:10:05 MongoDB: collection_names_list has been updated .
[INFO] 22:10:05 MongoDB: collection-0101 exist .
[INFO] 22:10:05 HttpHandler: auth completed .
[INFO] 22:10:05 HttpHandler: get_enterprise_info is allowed, start handle .
[INFO] 22:10:05 LocalCaller: start get_enterprise_info .
[INFO] 22:10:05 OIISBackendMain: try to get enterprise-None's info .
[INFO] 22:10:05 MongoDB: try to get document from enterprise/None .
[INFO] 22:10:05 HttpHandler: command-get_enterprise_info handle completed .
[INFO] 22:10:35 HttpHandler: received http request, start handle... .
[INFO] 22:10:35 HttpHandler: start auth .
[INFO] 22:10:35 MongoDB: collection-0101 exist .
[INFO] 22:10:35 MongoDB: coll_exist?: second time search start .
[INFO] 22:10:35 MongoDB: collection_names_list has been updated .
[INFO] 22:10:35 MongoDB: collection-0101 exist .
[INFO] 22:10:35 HttpHandler: auth completed .
[INFO] 22:10:35 HttpHandler: user_login is allowed, start handle .
[INFO] 22:10:35 LocalCaller: start user_login .
[INFO] 22:10:35 UserManager: Try login 0101 .
[INFO] 22:10:35 UserInfoManager: try to get user- 0101's password .
[INFO] 22:10:35 MongoDB: try to get document from interviewer/0101 .
[INFO] 22:10:35 MongoDB: parsing the documents, targets: ['password'] .
[INFO] 22:10:35 UserInfoManager: try to get user- 0101's user_type .
[INFO] 22:10:35 MongoDB: update document success. Update count: 0 .
[INFO] 22:10:35 MongoDB: update document success. Update count: 1 .
[INFO] 22:10:35 MongoDB: update document success. Update count: 1 .
[INFO] 22:10:35 UserManager: login success .
[INFO] 22:10:35 MongoDB: try to get document from interviewer/0101 .
[INFO] 22:10:35 MongoDB: parsing the documents, targets: ['mappingComCode'] .
[INFO] 22:10:35 MongoDB: try to get document from interview/now .
[INFO] 22:10:35 MongoDB: parsing the documents, targets: ['status'] .
[INFO] 22:10:35 HttpHandler: command-user_login handle completed .
[INFO] 22:10:35 HttpHandler: received http request, start handle... .
[INFO] 22:10:35 HttpHandler: start auth .
[INFO] 22:10:35 MongoDB: collection-0101 exist .
[INFO] 22:10:35 MongoDB: coll_exist?: second time search start .
[INFO] 22:10:35 MongoDB: collection_names_list has been updated .
[INFO] 22:10:35 MongoDB: collection-0101 exist .
[INFO] 22:10:35 MongoDB: try to get document from interviewer/0101 .
[INFO] 22:10:35 MongoDB: parsing the documents, targets: ['lastLoginTimeStamp'] .
[INFO] 22:10:35 HttpHandler: user-0101's LLTS: 1650723035 .
[INFO] 22:10:35 MongoDB: try to get document from interviewer/0101 .
[INFO] 22:10:35 MongoDB: parsing the documents, targets: ['isOnline'] .
[INFO] 22:10:35 HttpHandler: time stamp is in law .
[INFO] 22:10:35 MongoDB: try to get document from interviewer/0101 .
[INFO] 22:10:35 MongoDB: parsing the documents, targets: ['token'] .
[INFO] 22:10:35 HttpHandler: auth completed .
[INFO] 22:10:35 HttpHandler: user_info_get_one_multi is allowed, start handle .
[INFO] 22:10:35 LocalCaller: start user_info_get_one_multi .
[INFO] 22:10:35 UserInfoManager: try to get user- 0101's mappingComCode .
[INFO] 22:10:35 HttpHandler: command-user_info_get_one_multi handle completed .
[INFO] 22:10:56 HttpHandler: received http request, start handle... .
[INFO] 22:10:56 HttpHandler: start auth .
[INFO] 22:10:56 MongoDB: collection-0101 exist .
[INFO] 22:10:56 MongoDB: coll_exist?: second time search start .
[INFO] 22:10:56 MongoDB: collection_names_list has been updated .
[INFO] 22:10:56 MongoDB: collection-0101 exist .
[INFO] 22:10:56 HttpHandler: auth completed .
[INFO] 22:10:56 HttpHandler: user_login is allowed, start handle .
[INFO] 22:10:56 LocalCaller: start user_login .
[INFO] 22:10:56 UserManager: Try login 0101 .
[INFO] 22:10:56 UserInfoManager: try to get user- 0101's password .
[INFO] 22:10:56 MongoDB: try to get document from interviewer/0101 .
[INFO] 22:10:56 MongoDB: parsing the documents, targets: ['password'] .
[INFO] 22:10:56 UserInfoManager: try to get user- 0101's user_type .
[INFO] 22:10:56 MongoDB: update document success. Update count: 0 .
[INFO] 22:10:56 MongoDB: update document success. Update count: 1 .
[INFO] 22:10:56 MongoDB: update document success. Update count: 1 .
[INFO] 22:10:56 UserManager: login success .
[INFO] 22:10:56 MongoDB: try to get document from interviewer/0101 .
[INFO] 22:10:56 MongoDB: parsing the documents, targets: ['mappingComCode'] .
[INFO] 22:10:56 MongoDB: try to get document from interview/now .
[INFO] 22:10:56 MongoDB: parsing the documents, targets: ['status'] .
[INFO] 22:10:56 HttpHandler: command-user_login handle completed .
[INFO] 22:10:57 HttpHandler: received http request, start handle... .
[INFO] 22:10:57 HttpHandler: start auth .
[INFO] 22:10:57 MongoDB: collection-0101 exist .
[INFO] 22:10:57 MongoDB: coll_exist?: second time search start .
[INFO] 22:10:57 MongoDB: collection_names_list has been updated .
[INFO] 22:10:57 MongoDB: collection-0101 exist .
[INFO] 22:10:57 MongoDB: try to get document from interviewer/0101 .
[INFO] 22:10:57 MongoDB: parsing the documents, targets: ['lastLoginTimeStamp'] .
[INFO] 22:10:57 HttpHandler: user-0101's LLTS: 1650723056 .
[INFO] 22:10:57 MongoDB: try to get document from interviewer/0101 .
[INFO] 22:10:57 MongoDB: parsing the documents, targets: ['isOnline'] .
[INFO] 22:10:57 HttpHandler: time stamp is in law .
[INFO] 22:10:57 MongoDB: try to get document from interviewer/0101 .
[INFO] 22:10:57 MongoDB: parsing the documents, targets: ['token'] .
[INFO] 22:10:57 HttpHandler: auth completed .
[INFO] 22:10:57 HttpHandler: user_info_get_one_multi is allowed, start handle .
[INFO] 22:10:57 LocalCaller: start user_info_get_one_multi .
[INFO] 22:10:57 UserInfoManager: try to get user- 0101's mappingComCode .
[INFO] 22:10:57 HttpHandler: command-user_info_get_one_multi handle completed .
[INFO] 22:14:09 MongoDB: database_names_list has been updated .
[INFO] 22:14:09 MongoDB: database_names_list has been updated .
[INFO] 22:14:09 ######## NL-BACKEND RUN NOW ######## .
[INFO] 22:14:09 BackendInit: now start backend .
[INFO] 22:14:09 HttpServer: Start http server... .
[INFO] 22:14:09 WsServer: Start websocket server... .
[INFO] 22:14:09 HttpServer: ServerAddr: 0.0.0.0:5000 .
[INFO] 22:14:09 WsServer: socket listening on: 0.0.0.0:5024 .
[INFO] 22:14:09 WsServer: server start, wait for client connecting... .
[INFO] 22:14:26 HttpHandler: received http request, start handle... .
[INFO] 22:14:26 HttpHandler: start auth .
[INFO] 22:14:26 MongoDB: coll_exist?: second time search start .
[INFO] 22:14:26 MongoDB: collection_names_list has been updated .
[INFO] 22:14:26 MongoDB: collection-0101 exist .
[INFO] 22:14:26 HttpHandler: auth completed .
[INFO] 22:14:26 HttpHandler: user_login is allowed, start handle .
[INFO] 22:14:26 LocalCaller: start user_login .
[INFO] 22:14:26 UserManager: Try login 0101 .
[INFO] 22:14:26 UserInfoManager: try to get user- 0101's password .
[INFO] 22:14:26 MongoDB: try to get document from interviewer/0101 .
[INFO] 22:14:26 MongoDB: parsing the documents, targets: ['password'] .
[INFO] 22:14:26 UserInfoManager: try to get user- 0101's user_type .
[INFO] 22:14:26 MongoDB: update document success. Update count: 0 .
[INFO] 22:14:26 MongoDB: update document success. Update count: 1 .
[INFO] 22:14:26 MongoDB: update document success. Update count: 1 .
[INFO] 22:14:26 UserManager: login success .
[INFO] 22:14:26 MongoDB: try to get document from interviewer/0101 .
[INFO] 22:14:26 MongoDB: parsing the documents, targets: ['mappingComCode'] .
[INFO] 22:14:26 MongoDB: try to get document from interview/now .
[INFO] 22:14:26 MongoDB: parsing the documents, targets: ['status'] .
[INFO] 22:14:26 HttpHandler: command-user_login handle completed .
[INFO] 22:14:26 HttpHandler: received http request, start handle... .
[INFO] 22:14:26 HttpHandler: start auth .
[INFO] 22:14:26 MongoDB: collection-0101 exist .
[INFO] 22:14:26 MongoDB: coll_exist?: second time search start .
[INFO] 22:14:26 MongoDB: collection_names_list has been updated .
[INFO] 22:14:26 MongoDB: collection-0101 exist .
[INFO] 22:14:26 MongoDB: try to get document from interviewer/0101 .
[INFO] 22:14:26 MongoDB: parsing the documents, targets: ['lastLoginTimeStamp'] .
[INFO] 22:14:26 HttpHandler: user-0101's LLTS: 1650723266 .
[INFO] 22:14:26 MongoDB: try to get document from interviewer/0101 .
[INFO] 22:14:26 MongoDB: parsing the documents, targets: ['isOnline'] .
[INFO] 22:14:26 HttpHandler: time stamp is in law .
[INFO] 22:14:26 MongoDB: try to get document from interviewer/0101 .
[INFO] 22:14:26 MongoDB: parsing the documents, targets: ['token'] .
[INFO] 22:14:26 HttpHandler: auth completed .
[INFO] 22:14:26 HttpHandler: user_info_get_one_multi is allowed, start handle .
[INFO] 22:14:26 LocalCaller: start user_info_get_one_multi .
[INFO] 22:14:46 UserInfoManager: try to get user- 0101's mappingComCode .
[INFO] 22:14:46 HttpHandler: command-user_info_get_one_multi handle completed .
[INFO] 22:23:06 HttpHandler: received http request, start handle... .
[INFO] 22:23:06 HttpHandler: start auth .
[INFO] 22:23:06 MongoDB: collection-0101 exist .
[INFO] 22:23:06 MongoDB: coll_exist?: second time search start .
[INFO] 22:23:06 MongoDB: collection_names_list has been updated .
[INFO] 22:23:06 MongoDB: collection-0101 exist .
[INFO] 22:23:06 HttpHandler: auth completed .
[INFO] 22:23:06 HttpHandler: user_login is allowed, start handle .
[INFO] 22:23:06 LocalCaller: start user_login .
[INFO] 22:23:06 UserManager: Try login 0101 .
[INFO] 22:23:06 UserInfoManager: try to get user- 0101's password .
[INFO] 22:23:06 MongoDB: try to get document from interviewer/0101 .
[INFO] 22:23:06 MongoDB: parsing the documents, targets: ['password'] .
[INFO] 22:23:06 UserInfoManager: try to get user- 0101's user_type .
[INFO] 22:23:06 MongoDB: update document success. Update count: 0 .
[INFO] 22:23:06 MongoDB: update document success. Update count: 1 .
[INFO] 22:23:06 MongoDB: update document success. Update count: 1 .
[INFO] 22:23:06 UserManager: login success .
[INFO] 22:23:06 MongoDB: try to get document from interviewer/0101 .
[INFO] 22:23:06 MongoDB: parsing the documents, targets: ['mappingComCode'] .
[INFO] 22:23:06 MongoDB: try to get document from interview/now .
[INFO] 22:23:06 MongoDB: parsing the documents, targets: ['status'] .
[INFO] 22:23:06 HttpHandler: command-user_login handle completed .
[INFO] 22:23:06 HttpHandler: received http request, start handle... .
[INFO] 22:23:06 HttpHandler: start auth .
[INFO] 22:23:06 MongoDB: collection-0101 exist .
[INFO] 22:23:06 MongoDB: coll_exist?: second time search start .
[INFO] 22:23:06 MongoDB: collection_names_list has been updated .
[INFO] 22:23:06 MongoDB: collection-0101 exist .
[INFO] 22:23:06 MongoDB: try to get document from interviewer/0101 .
[INFO] 22:23:06 MongoDB: parsing the documents, targets: ['lastLoginTimeStamp'] .
[INFO] 22:23:06 HttpHandler: user-0101's LLTS: 1650723786 .
[INFO] 22:23:06 MongoDB: try to get document from interviewer/0101 .
[INFO] 22:23:06 MongoDB: parsing the documents, targets: ['isOnline'] .
[INFO] 22:23:06 HttpHandler: time stamp is in law .
[INFO] 22:23:06 MongoDB: try to get document from interviewer/0101 .
[INFO] 22:23:06 MongoDB: parsing the documents, targets: ['token'] .
[INFO] 22:23:06 HttpHandler: auth completed .
[INFO] 22:23:06 HttpHandler: user_info_get_one_multi is allowed, start handle .
[INFO] 22:23:06 LocalCaller: start user_info_get_one_multi .
[INFO] 22:23:06 UserInfoManager: try to get user- 0101's mappingComCode .
[INFO] 22:23:06 HttpHandler: command-user_info_get_one_multi handle completed .
[INFO] 22:23:26 MongoDB: database_names_list has been updated .
[INFO] 22:23:26 MongoDB: database_names_list has been updated .
[INFO] 22:23:26 ######## NL-BACKEND RUN NOW ######## .
[INFO] 22:23:26 BackendInit: now start backend .
[INFO] 22:23:26 WsServer: Start websocket server... .
[INFO] 22:23:26 HttpServer: Start http server... .
[INFO] 22:23:26 WsServer: socket listening on: 0.0.0.0:5024 .
[INFO] 22:23:26 HttpServer: ServerAddr: 0.0.0.0:5000 .
[INFO] 22:23:26 WsServer: server start, wait for client connecting... .
[INFO] 22:23:40 HttpHandler: received http request, start handle... .
[INFO] 22:23:40 HttpHandler: start auth .
[INFO] 22:23:40 MongoDB: coll_exist?: second time search start .
[INFO] 22:23:40 MongoDB: collection_names_list has been updated .
[INFO] 22:23:40 MongoDB: collection-0101 exist .
[INFO] 22:23:40 HttpHandler: auth completed .
[INFO] 22:23:40 HttpHandler: user_login is allowed, start handle .
[INFO] 22:23:40 LocalCaller: start user_login .
[INFO] 22:23:40 UserManager: Try login 0101 .
[INFO] 22:23:40 UserInfoManager: try to get user- 0101's password .
[INFO] 22:23:40 MongoDB: try to get document from interviewer/0101 .
[INFO] 22:23:40 MongoDB: parsing the documents, targets: ['password'] .
[INFO] 22:23:40 UserInfoManager: try to get user- 0101's user_type .
[INFO] 22:23:40 MongoDB: update document success. Update count: 0 .
[INFO] 22:23:40 MongoDB: update document success. Update count: 1 .
[INFO] 22:23:40 MongoDB: update document success. Update count: 1 .
[INFO] 22:23:40 UserManager: login success .
[INFO] 22:23:40 MongoDB: try to get document from interviewer/0101 .
[INFO] 22:23:40 MongoDB: parsing the documents, targets: ['mappingComCode'] .
[INFO] 22:23:40 MongoDB: try to get document from interview/now .
[INFO] 22:23:40 MongoDB: parsing the documents, targets: ['status'] .
[INFO] 22:23:40 HttpHandler: command-user_login handle completed .
[INFO] 22:23:40 HttpHandler: received http request, start handle... .
[INFO] 22:23:40 HttpHandler: start auth .
[INFO] 22:23:40 MongoDB: collection-0101 exist .
[INFO] 22:23:40 MongoDB: coll_exist?: second time search start .
[INFO] 22:23:40 MongoDB: collection_names_list has been updated .
[INFO] 22:23:40 MongoDB: collection-0101 exist .
[INFO] 22:23:40 MongoDB: try to get document from interviewer/0101 .
[INFO] 22:23:40 MongoDB: parsing the documents, targets: ['lastLoginTimeStamp'] .
[INFO] 22:23:40 HttpHandler: user-0101's LLTS: 1650723820 .
[INFO] 22:23:40 MongoDB: try to get document from interviewer/0101 .
[INFO] 22:23:40 MongoDB: parsing the documents, targets: ['isOnline'] .
[INFO] 22:23:40 HttpHandler: time stamp is in law .
[INFO] 22:23:40 MongoDB: try to get document from interviewer/0101 .
[INFO] 22:23:40 MongoDB: parsing the documents, targets: ['token'] .
[INFO] 22:23:40 HttpHandler: auth completed .
[INFO] 22:23:40 HttpHandler: user_info_get_one_multi is allowed, start handle .
[INFO] 22:23:40 LocalCaller: start user_info_get_one_multi .
[INFO] 22:23:40 UserInfoManager: try to get user- 0101's mappingComCode .
[INFO] 22:23:40 MongoDB: try to get document from interviewer/0101 .
[INFO] 22:23:40 MongoDB: parsing the documents, targets: ['mappingComCode'] .
[INFO] 22:23:40 HttpHandler: command-user_info_get_one_multi handle completed .
[INFO] 22:23:47 HttpHandler: received http request, start handle... .
[INFO] 22:23:47 HttpHandler: start auth .
[INFO] 22:23:47 MongoDB: collection-0101 exist .
[INFO] 22:23:47 MongoDB: coll_exist?: second time search start .
[INFO] 22:23:47 MongoDB: collection_names_list has been updated .
[INFO] 22:23:47 MongoDB: collection-0101 exist .
[INFO] 22:23:47 HttpHandler: auth completed .
[INFO] 22:23:47 HttpHandler: get_com_info is allowed, start handle .
[INFO] 22:23:47 LocalCaller: start get_com_info .
[INFO] 22:23:47 OIISBackendMain: try to get com-com1's info .
[INFO] 22:23:47 MongoDB: try to get document from interview/now .
[INFO] 22:23:47 OIISBackendMain: get com info success .
[INFO] 22:23:47 HttpHandler: command-get_com_info handle completed .
[INFO] 22:24:06 HttpHandler: received http request, start handle... .
[INFO] 22:24:06 HttpHandler: start auth .
[INFO] 22:24:06 MongoDB: collection-0101 exist .
[INFO] 22:24:06 MongoDB: coll_exist?: second time search start .
[INFO] 22:24:06 MongoDB: collection_names_list has been updated .
[INFO] 22:24:06 MongoDB: collection-0101 exist .
[INFO] 22:24:06 HttpHandler: auth completed .
[INFO] 22:24:06 HttpHandler: user_login is allowed, start handle .
[INFO] 22:24:06 LocalCaller: start user_login .
[INFO] 22:24:06 UserManager: Try login 0101 .
[INFO] 22:24:06 UserInfoManager: try to get user- 0101's password .
[INFO] 22:24:06 MongoDB: try to get document from interviewer/0101 .
[INFO] 22:24:06 MongoDB: parsing the documents, targets: ['password'] .
[INFO] 22:24:06 UserInfoManager: try to get user- 0101's user_type .
[INFO] 22:24:06 MongoDB: update document success. Update count: 0 .
[INFO] 22:24:06 MongoDB: update document success. Update count: 1 .
[INFO] 22:24:06 MongoDB: update document success. Update count: 1 .
[INFO] 22:24:06 UserManager: login success .
[INFO] 22:24:06 MongoDB: try to get document from interviewer/0101 .
[INFO] 22:24:06 MongoDB: parsing the documents, targets: ['mappingComCode'] .
[INFO] 22:24:06 MongoDB: try to get document from interview/now .
[INFO] 22:24:06 MongoDB: parsing the documents, targets: ['status'] .
[INFO] 22:24:06 HttpHandler: command-user_login handle completed .
[INFO] 22:24:06 HttpHandler: received http request, start handle... .
[INFO] 22:24:06 HttpHandler: start auth .
[INFO] 22:24:06 MongoDB: collection-0101 exist .
[INFO] 22:24:06 MongoDB: coll_exist?: second time search start .
[INFO] 22:24:06 MongoDB: collection_names_list has been updated .
[INFO] 22:24:06 MongoDB: collection-0101 exist .
[INFO] 22:24:06 MongoDB: try to get document from interviewer/0101 .
[INFO] 22:24:06 MongoDB: parsing the documents, targets: ['lastLoginTimeStamp'] .
[INFO] 22:24:06 HttpHandler: user-0101's LLTS: 1650723846 .
[INFO] 22:24:06 MongoDB: try to get document from interviewer/0101 .
[INFO] 22:24:06 MongoDB: parsing the documents, targets: ['isOnline'] .
[INFO] 22:24:06 HttpHandler: time stamp is in law .
[INFO] 22:24:06 MongoDB: try to get document from interviewer/0101 .
[INFO] 22:24:06 MongoDB: parsing the documents, targets: ['token'] .
[INFO] 22:24:06 HttpHandler: auth completed .
[INFO] 22:24:06 HttpHandler: user_info_get_one_multi is allowed, start handle .
[INFO] 22:24:06 LocalCaller: start user_info_get_one_multi .
[INFO] 22:24:06 UserInfoManager: try to get user- 0101's mappingComCode .
[INFO] 22:24:06 MongoDB: try to get document from interviewer/0101 .
[INFO] 22:24:06 MongoDB: parsing the documents, targets: ['mappingComCode'] .
[INFO] 22:24:06 HttpHandler: command-user_info_get_one_multi handle completed .
[INFO] 22:24:09 HttpHandler: received http request, start handle... .
[INFO] 22:24:09 HttpHandler: start auth .
[INFO] 22:24:09 MongoDB: collection-0101 exist .
[INFO] 22:24:09 MongoDB: coll_exist?: second time search start .
[INFO] 22:24:09 MongoDB: collection_names_list has been updated .
[INFO] 22:24:09 MongoDB: collection-0101 exist .
[INFO] 22:24:09 HttpHandler: auth completed .
[INFO] 22:24:09 HttpHandler: get_com_info is allowed, start handle .
[INFO] 22:24:09 LocalCaller: start get_com_info .
[INFO] 22:24:09 OIISBackendMain: try to get com-com1's info .
[INFO] 22:24:09 MongoDB: try to get document from interview/now .
[INFO] 22:24:09 OIISBackendMain: get com info success .
[INFO] 22:24:09 HttpHandler: command-get_com_info handle completed .
[INFO] 22:24:36 HttpHandler: received http request, start handle... .
[INFO] 22:24:36 HttpHandler: start auth .
[INFO] 22:24:36 MongoDB: collection-0101 exist .
[INFO] 22:24:36 MongoDB: coll_exist?: second time search start .
[INFO] 22:24:36 MongoDB: collection_names_list has been updated .
[INFO] 22:24:36 MongoDB: collection-0101 exist .
[INFO] 22:24:36 HttpHandler: auth completed .
[INFO] 22:24:36 HttpHandler: user_login is allowed, start handle .
[INFO] 22:24:36 LocalCaller: start user_login .
[INFO] 22:24:36 UserManager: Try login 0101 .
[INFO] 22:24:36 UserInfoManager: try to get user- 0101's password .
[INFO] 22:24:36 MongoDB: try to get document from interviewer/0101 .
[INFO] 22:24:36 MongoDB: parsing the documents, targets: ['password'] .
[INFO] 22:24:36 UserInfoManager: try to get user- 0101's user_type .
[INFO] 22:24:36 MongoDB: update document success. Update count: 0 .
[INFO] 22:24:36 MongoDB: update document success. Update count: 1 .
[INFO] 22:24:36 MongoDB: update document success. Update count: 1 .
[INFO] 22:24:36 UserManager: login success .
[INFO] 22:24:36 MongoDB: try to get document from interviewer/0101 .
[INFO] 22:24:36 MongoDB: parsing the documents, targets: ['mappingComCode'] .
[INFO] 22:24:36 MongoDB: try to get document from interview/now .
[INFO] 22:24:36 MongoDB: parsing the documents, targets: ['status'] .
[INFO] 22:24:36 HttpHandler: command-user_login handle completed .
[INFO] 22:24:36 HttpHandler: received http request, start handle... .
[INFO] 22:24:36 HttpHandler: start auth .
[INFO] 22:24:36 MongoDB: collection-0101 exist .
[INFO] 22:24:36 MongoDB: coll_exist?: second time search start .
[INFO] 22:24:36 MongoDB: collection_names_list has been updated .
[INFO] 22:24:36 MongoDB: collection-0101 exist .
[INFO] 22:24:36 MongoDB: try to get document from interviewer/0101 .
[INFO] 22:24:36 MongoDB: parsing the documents, targets: ['lastLoginTimeStamp'] .
[INFO] 22:24:36 HttpHandler: user-0101's LLTS: 1650723876 .
[INFO] 22:24:36 MongoDB: try to get document from interviewer/0101 .
[INFO] 22:24:36 MongoDB: parsing the documents, targets: ['isOnline'] .
[INFO] 22:24:36 HttpHandler: time stamp is in law .
[INFO] 22:24:36 MongoDB: try to get document from interviewer/0101 .
[INFO] 22:24:36 MongoDB: parsing the documents, targets: ['token'] .
[INFO] 22:24:36 HttpHandler: auth completed .
[INFO] 22:24:36 HttpHandler: user_info_get_one_multi is allowed, start handle .
[INFO] 22:24:36 LocalCaller: start user_info_get_one_multi .
[INFO] 22:24:36 UserInfoManager: try to get user- 0101's mappingComCode .
[INFO] 22:24:36 MongoDB: try to get document from interviewer/0101 .
[INFO] 22:24:36 MongoDB: parsing the documents, targets: ['mappingComCode'] .
[INFO] 22:24:36 HttpHandler: command-user_info_get_one_multi handle completed .
[INFO] 22:24:36 HttpHandler: received http request, start handle... .
[INFO] 22:24:36 HttpHandler: start auth .
[INFO] 22:24:36 MongoDB: collection-0101 exist .
[INFO] 22:24:36 MongoDB: coll_exist?: second time search start .
[INFO] 22:24:36 MongoDB: collection_names_list has been updated .
[INFO] 22:24:36 MongoDB: collection-0101 exist .
[INFO] 22:24:36 HttpHandler: auth completed .
[INFO] 22:24:36 HttpHandler: get_com_info is allowed, start handle .
[INFO] 22:24:36 LocalCaller: start get_com_info .
[INFO] 22:24:36 OIISBackendMain: try to get com-com1's info .
[INFO] 22:24:36 MongoDB: try to get document from interview/now .
[INFO] 22:24:36 OIISBackendMain: get com info success .
[INFO] 22:24:36 HttpHandler: command-get_com_info handle completed .
[INFO] 22:25:28 HttpHandler: received http request, start handle... .
[INFO] 22:25:28 HttpHandler: start auth .
[INFO] 22:25:28 MongoDB: collection-0101 exist .
[INFO] 22:25:28 MongoDB: coll_exist?: second time search start .
[INFO] 22:25:28 MongoDB: collection_names_list has been updated .
[INFO] 22:25:28 MongoDB: collection-0101 exist .
[INFO] 22:25:28 HttpHandler: auth completed .
[INFO] 22:25:28 HttpHandler: user_login is allowed, start handle .
[INFO] 22:25:28 LocalCaller: start user_login .
[INFO] 22:25:28 UserManager: Try login 0101 .
[INFO] 22:25:28 UserInfoManager: try to get user- 0101's password .
[INFO] 22:25:28 MongoDB: try to get document from interviewer/0101 .
[INFO] 22:25:28 MongoDB: parsing the documents, targets: ['password'] .
[INFO] 22:25:28 UserInfoManager: try to get user- 0101's user_type .
[INFO] 22:25:28 MongoDB: update document success. Update count: 0 .
[INFO] 22:25:28 MongoDB: update document success. Update count: 1 .
[INFO] 22:25:28 MongoDB: update document success. Update count: 1 .
[INFO] 22:25:28 UserManager: login success .
[INFO] 22:25:28 MongoDB: try to get document from interviewer/0101 .
[INFO] 22:25:28 MongoDB: parsing the documents, targets: ['mappingComCode'] .
[INFO] 22:25:28 MongoDB: try to get document from interview/now .
[INFO] 22:25:28 MongoDB: parsing the documents, targets: ['status'] .
[INFO] 22:25:28 HttpHandler: command-user_login handle completed .
[INFO] 22:25:29 HttpHandler: received http request, start handle... .
[INFO] 22:25:29 HttpHandler: start auth .
[INFO] 22:25:29 MongoDB: collection-0101 exist .
[INFO] 22:25:29 MongoDB: coll_exist?: second time search start .
[INFO] 22:25:29 MongoDB: collection_names_list has been updated .
[INFO] 22:25:29 MongoDB: collection-0101 exist .
[INFO] 22:25:29 MongoDB: try to get document from interviewer/0101 .
[INFO] 22:25:29 MongoDB: parsing the documents, targets: ['lastLoginTimeStamp'] .
[INFO] 22:25:29 HttpHandler: user-0101's LLTS: 1650723928 .
[INFO] 22:25:29 MongoDB: try to get document from interviewer/0101 .
[INFO] 22:25:29 MongoDB: parsing the documents, targets: ['isOnline'] .
[INFO] 22:25:29 HttpHandler: time stamp is in law .
[INFO] 22:25:29 MongoDB: try to get document from interviewer/0101 .
[INFO] 22:25:29 MongoDB: parsing the documents, targets: ['token'] .
[INFO] 22:25:29 HttpHandler: auth completed .
[INFO] 22:25:29 HttpHandler: user_info_get_one_multi is allowed, start handle .
[INFO] 22:25:29 LocalCaller: start user_info_get_one_multi .
[INFO] 22:25:29 UserInfoManager: try to get user- 0101's mappingComCode .
[INFO] 22:25:29 MongoDB: try to get document from interviewer/0101 .
[INFO] 22:25:29 MongoDB: parsing the documents, targets: ['mappingComCode'] .
[INFO] 22:25:29 HttpHandler: command-user_info_get_one_multi handle completed .
[INFO] 22:25:29 HttpHandler: received http request, start handle... .
[INFO] 22:25:29 HttpHandler: start auth .
[INFO] 22:25:29 MongoDB: collection-0101 exist .
[INFO] 22:25:29 MongoDB: coll_exist?: second time search start .
[INFO] 22:25:29 MongoDB: collection_names_list has been updated .
[INFO] 22:25:29 MongoDB: collection-0101 exist .
[INFO] 22:25:29 HttpHandler: auth completed .
[INFO] 22:25:29 HttpHandler: get_com_info is allowed, start handle .
[INFO] 22:25:29 LocalCaller: start get_com_info .
[INFO] 22:25:29 OIISBackendMain: try to get com-com1's info .
[INFO] 22:25:29 MongoDB: try to get document from interview/now .
[INFO] 22:25:29 OIISBackendMain: get com info success .
[INFO] 22:25:29 HttpHandler: command-get_com_info handle completed .
[INFO] 22:25:50 HttpHandler: received http request, start handle... .
[INFO] 22:25:50 HttpHandler: start auth .
[INFO] 22:25:50 MongoDB: collection-0101 exist .
[INFO] 22:25:50 MongoDB: coll_exist?: second time search start .
[INFO] 22:25:50 MongoDB: collection_names_list has been updated .
[INFO] 22:25:50 MongoDB: collection-0101 exist .
[INFO] 22:25:50 HttpHandler: auth completed .
[INFO] 22:25:50 HttpHandler: user_login is allowed, start handle .
[INFO] 22:25:50 LocalCaller: start user_login .
[INFO] 22:25:50 UserManager: Try login 0101 .
[INFO] 22:25:50 UserInfoManager: try to get user- 0101's password .
[INFO] 22:25:50 MongoDB: try to get document from interviewer/0101 .
[INFO] 22:25:50 MongoDB: parsing the documents, targets: ['password'] .
[INFO] 22:25:50 UserInfoManager: try to get user- 0101's user_type .
[INFO] 22:25:50 MongoDB: update document success. Update count: 0 .
[INFO] 22:25:50 MongoDB: update document success. Update count: 1 .
[INFO] 22:25:50 MongoDB: update document success. Update count: 1 .
[INFO] 22:25:50 UserManager: login success .
[INFO] 22:25:50 MongoDB: try to get document from interviewer/0101 .
[INFO] 22:25:50 MongoDB: parsing the documents, targets: ['mappingComCode'] .
[INFO] 22:25:50 MongoDB: try to get document from interview/now .
[INFO] 22:25:50 MongoDB: parsing the documents, targets: ['status'] .
[INFO] 22:25:50 HttpHandler: command-user_login handle completed .
[INFO] 22:25:50 HttpHandler: received http request, start handle... .
[INFO] 22:25:50 HttpHandler: start auth .
[INFO] 22:25:50 MongoDB: collection-0101 exist .
[INFO] 22:25:50 MongoDB: coll_exist?: second time search start .
[INFO] 22:25:50 MongoDB: collection_names_list has been updated .
[INFO] 22:25:50 MongoDB: collection-0101 exist .
[INFO] 22:25:50 MongoDB: try to get document from interviewer/0101 .
[INFO] 22:25:50 MongoDB: parsing the documents, targets: ['lastLoginTimeStamp'] .
[INFO] 22:25:50 HttpHandler: user-0101's LLTS: 1650723950 .
[INFO] 22:25:50 MongoDB: try to get document from interviewer/0101 .
[INFO] 22:25:50 MongoDB: parsing the documents, targets: ['isOnline'] .
[INFO] 22:25:50 HttpHandler: time stamp is in law .
[INFO] 22:25:50 MongoDB: try to get document from interviewer/0101 .
[INFO] 22:25:50 MongoDB: parsing the documents, targets: ['token'] .
[INFO] 22:25:50 HttpHandler: auth completed .
[INFO] 22:25:50 HttpHandler: user_info_get_one_multi is allowed, start handle .
[INFO] 22:25:50 LocalCaller: start user_info_get_one_multi .
[INFO] 22:25:50 UserInfoManager: try to get user- 0101's mappingComCode .
[INFO] 22:25:50 MongoDB: try to get document from interviewer/0101 .
[INFO] 22:25:50 MongoDB: parsing the documents, targets: ['mappingComCode'] .
[INFO] 22:25:50 HttpHandler: command-user_info_get_one_multi handle completed .
[INFO] 22:25:50 HttpHandler: received http request, start handle... .
[INFO] 22:25:50 HttpHandler: start auth .
[INFO] 22:25:50 MongoDB: collection-0101 exist .
[INFO] 22:25:50 MongoDB: coll_exist?: second time search start .
[INFO] 22:25:50 MongoDB: collection_names_list has been updated .
[INFO] 22:25:50 MongoDB: collection-0101 exist .
[INFO] 22:25:50 HttpHandler: auth completed .
[INFO] 22:25:50 HttpHandler: get_com_info is allowed, start handle .
[INFO] 22:25:50 LocalCaller: start get_com_info .
[INFO] 22:25:50 OIISBackendMain: try to get com-com1's info .
[INFO] 22:25:50 MongoDB: try to get document from interview/now .
[INFO] 22:25:50 OIISBackendMain: get com info success .
[INFO] 22:25:50 HttpHandler: command-get_com_info handle completed .
[INFO] 22:27:05 HttpHandler: received http request, start handle... .
[INFO] 22:27:05 HttpHandler: start auth .
[INFO] 22:27:05 MongoDB: collection-0101 exist .
[INFO] 22:27:05 MongoDB: coll_exist?: second time search start .
[INFO] 22:27:05 MongoDB: collection_names_list has been updated .
[INFO] 22:27:05 MongoDB: collection-0101 exist .
[INFO] 22:27:05 HttpHandler: auth completed .
[INFO] 22:27:05 HttpHandler: user_login is allowed, start handle .
[INFO] 22:27:05 LocalCaller: start user_login .
[INFO] 22:27:05 UserManager: Try login 0101 .
[INFO] 22:27:05 UserInfoManager: try to get user- 0101's password .
[INFO] 22:27:05 MongoDB: try to get document from interviewer/0101 .
[INFO] 22:27:05 MongoDB: parsing the documents, targets: ['password'] .
[INFO] 22:27:05 UserInfoManager: try to get user- 0101's user_type .
[INFO] 22:27:05 MongoDB: update document success. Update count: 0 .
[INFO] 22:27:05 MongoDB: update document success. Update count: 1 .
[INFO] 22:27:05 MongoDB: update document success. Update count: 1 .
[INFO] 22:27:05 UserManager: login success .
[INFO] 22:27:05 MongoDB: try to get document from interviewer/0101 .
[INFO] 22:27:05 MongoDB: parsing the documents, targets: ['mappingComCode'] .
[INFO] 22:27:05 MongoDB: try to get document from interview/now .
[INFO] 22:27:05 MongoDB: parsing the documents, targets: ['status'] .
[INFO] 22:27:05 HttpHandler: command-user_login handle completed .
[INFO] 22:27:05 HttpHandler: received http request, start handle... .
[INFO] 22:27:05 HttpHandler: start auth .
[INFO] 22:27:05 MongoDB: collection-0101 exist .
[INFO] 22:27:05 MongoDB: coll_exist?: second time search start .
[INFO] 22:27:05 MongoDB: collection_names_list has been updated .
[INFO] 22:27:05 MongoDB: collection-0101 exist .
[INFO] 22:27:05 MongoDB: try to get document from interviewer/0101 .
[INFO] 22:27:05 MongoDB: parsing the documents, targets: ['lastLoginTimeStamp'] .
[INFO] 22:27:05 HttpHandler: user-0101's LLTS: 1650724025 .
[INFO] 22:27:05 MongoDB: try to get document from interviewer/0101 .
[INFO] 22:27:05 MongoDB: parsing the documents, targets: ['isOnline'] .
[INFO] 22:27:05 HttpHandler: time stamp is in law .
[INFO] 22:27:05 MongoDB: try to get document from interviewer/0101 .
[INFO] 22:27:05 MongoDB: parsing the documents, targets: ['token'] .
[INFO] 22:27:05 HttpHandler: auth completed .
[INFO] 22:27:05 HttpHandler: user_info_get_one_multi is allowed, start handle .
[INFO] 22:27:05 LocalCaller: start user_info_get_one_multi .
[INFO] 22:27:05 UserInfoManager: try to get user- 0101's mappingComCode .
[INFO] 22:27:05 MongoDB: try to get document from interviewer/0101 .
[INFO] 22:27:05 MongoDB: parsing the documents, targets: ['mappingComCode'] .
[INFO] 22:27:05 HttpHandler: command-user_info_get_one_multi handle completed .
[INFO] 22:27:05 HttpHandler: received http request, start handle... .
[INFO] 22:27:05 HttpHandler: start auth .
[INFO] 22:27:05 MongoDB: collection-0101 exist .
[INFO] 22:27:05 MongoDB: coll_exist?: second time search start .
[INFO] 22:27:05 MongoDB: collection_names_list has been updated .
[INFO] 22:27:05 MongoDB: collection-0101 exist .
[INFO] 22:27:05 HttpHandler: auth completed .
[INFO] 22:27:05 HttpHandler: get_com_info is allowed, start handle .
[INFO] 22:27:05 LocalCaller: start get_com_info .
[INFO] 22:27:05 OIISBackendMain: try to get com-com1's info .
[INFO] 22:27:05 MongoDB: try to get document from interview/now .
[INFO] 22:27:05 OIISBackendMain: get com info success .
[INFO] 22:27:05 HttpHandler: command-get_com_info handle completed .
[INFO] 22:27:31 HttpHandler: received http request, start handle... .
[INFO] 22:27:31 HttpHandler: start auth .
[INFO] 22:27:31 MongoDB: collection-0101 exist .
[INFO] 22:27:31 MongoDB: coll_exist?: second time search start .
[INFO] 22:27:31 MongoDB: collection_names_list has been updated .
[INFO] 22:27:31 MongoDB: collection-0101 exist .
[INFO] 22:27:31 HttpHandler: auth completed .
[INFO] 22:27:31 HttpHandler: user_login is allowed, start handle .
[INFO] 22:27:31 LocalCaller: start user_login .
[INFO] 22:27:31 UserManager: Try login 0101 .
[INFO] 22:27:31 UserInfoManager: try to get user- 0101's password .
[INFO] 22:27:31 MongoDB: try to get document from interviewer/0101 .
[INFO] 22:27:31 MongoDB: parsing the documents, targets: ['password'] .
[INFO] 22:27:31 UserInfoManager: try to get user- 0101's user_type .
[INFO] 22:27:31 MongoDB: update document success. Update count: 0 .
[INFO] 22:27:31 MongoDB: update document success. Update count: 1 .
[INFO] 22:27:31 MongoDB: update document success. Update count: 1 .
[INFO] 22:27:31 UserManager: login success .
[INFO] 22:27:31 MongoDB: try to get document from interviewer/0101 .
[INFO] 22:27:31 MongoDB: parsing the documents, targets: ['mappingComCode'] .
[INFO] 22:27:31 MongoDB: try to get document from interview/now .
[INFO] 22:27:31 MongoDB: parsing the documents, targets: ['status'] .
[INFO] 22:27:31 HttpHandler: command-user_login handle completed .
[INFO] 22:27:31 HttpHandler: received http request, start handle... .
[INFO] 22:27:31 HttpHandler: start auth .
[INFO] 22:27:31 MongoDB: collection-0101 exist .
[INFO] 22:27:31 MongoDB: coll_exist?: second time search start .
[INFO] 22:27:31 MongoDB: collection_names_list has been updated .
[INFO] 22:27:31 MongoDB: collection-0101 exist .
[INFO] 22:27:31 MongoDB: try to get document from interviewer/0101 .
[INFO] 22:27:31 MongoDB: parsing the documents, targets: ['lastLoginTimeStamp'] .
[INFO] 22:27:31 HttpHandler: user-0101's LLTS: 1650724051 .
[INFO] 22:27:31 MongoDB: try to get document from interviewer/0101 .
[INFO] 22:27:31 MongoDB: parsing the documents, targets: ['isOnline'] .
[INFO] 22:27:31 HttpHandler: time stamp is in law .
[INFO] 22:27:31 MongoDB: try to get document from interviewer/0101 .
[INFO] 22:27:31 MongoDB: parsing the documents, targets: ['token'] .
[INFO] 22:27:31 HttpHandler: auth completed .
[INFO] 22:27:31 HttpHandler: user_info_get_one_multi is allowed, start handle .
[INFO] 22:27:31 LocalCaller: start user_info_get_one_multi .
[INFO] 22:27:31 UserInfoManager: try to get user- 0101's mappingComCode .
[INFO] 22:27:31 MongoDB: try to get document from interviewer/0101 .
[INFO] 22:27:31 MongoDB: parsing the documents, targets: ['mappingComCode'] .
[INFO] 22:27:31 HttpHandler: command-user_info_get_one_multi handle completed .
[INFO] 22:27:31 HttpHandler: received http request, start handle... .
[INFO] 22:27:31 HttpHandler: start auth .
[INFO] 22:27:31 MongoDB: collection-0101 exist .
[INFO] 22:27:31 MongoDB: coll_exist?: second time search start .
[INFO] 22:27:31 MongoDB: collection_names_list has been updated .
[INFO] 22:27:31 MongoDB: collection-0101 exist .
[INFO] 22:27:31 HttpHandler: auth completed .
[INFO] 22:27:31 HttpHandler: get_com_info is allowed, start handle .
[INFO] 22:27:31 LocalCaller: start get_com_info .
[INFO] 22:27:31 OIISBackendMain: try to get com-com1's info .
[INFO] 22:27:31 MongoDB: try to get document from interview/now .
[INFO] 22:27:31 OIISBackendMain: get com info success .
[INFO] 22:27:31 HttpHandler: command-get_com_info handle completed .
[INFO] 22:27:34 HttpHandler: received http request, start handle... .
[INFO] 22:27:34 HttpHandler: start auth .
[INFO] 22:27:34 MongoDB: collection-0101 exist .
[INFO] 22:27:34 MongoDB: coll_exist?: second time search start .
[INFO] 22:27:34 MongoDB: collection_names_list has been updated .
[INFO] 22:27:34 MongoDB: collection-0101 exist .
[INFO] 22:27:34 HttpHandler: auth completed .
[INFO] 22:27:34 HttpHandler: get_enterprise_info is allowed, start handle .
[INFO] 22:27:34 LocalCaller: start get_enterprise_info .
[INFO] 22:27:34 OIISBackendMain: try to get enterprise-1's info .
[INFO] 22:27:34 MongoDB: try to get document from enterprise/1 .
[INFO] 22:27:34 HttpHandler: command-get_enterprise_info handle completed .
[INFO] 22:28:02 HttpHandler: received http request, start handle... .
[INFO] 22:28:02 HttpHandler: start auth .
[INFO] 22:28:02 MongoDB: collection-0101 exist .
[INFO] 22:28:02 MongoDB: coll_exist?: second time search start .
[INFO] 22:28:02 MongoDB: collection_names_list has been updated .
[INFO] 22:28:02 MongoDB: collection-0101 exist .
[INFO] 22:28:02 HttpHandler: auth completed .
[INFO] 22:28:02 HttpHandler: user_login is allowed, start handle .
[INFO] 22:28:02 LocalCaller: start user_login .
[INFO] 22:28:02 UserManager: Try login 0101 .
[INFO] 22:28:02 UserInfoManager: try to get user- 0101's password .
[INFO] 22:28:02 MongoDB: try to get document from interviewer/0101 .
[INFO] 22:28:02 MongoDB: parsing the documents, targets: ['password'] .
[INFO] 22:28:02 UserInfoManager: try to get user- 0101's user_type .
[INFO] 22:28:02 MongoDB: update document success. Update count: 0 .
[INFO] 22:28:02 MongoDB: update document success. Update count: 1 .
[INFO] 22:28:02 MongoDB: update document success. Update count: 1 .
[INFO] 22:28:02 UserManager: login success .
[INFO] 22:28:02 MongoDB: try to get document from interviewer/0101 .
[INFO] 22:28:02 MongoDB: parsing the documents, targets: ['mappingComCode'] .
[INFO] 22:28:02 MongoDB: try to get document from interview/now .
[INFO] 22:28:02 MongoDB: parsing the documents, targets: ['status'] .
[INFO] 22:28:02 HttpHandler: command-user_login handle completed .
[INFO] 22:28:02 HttpHandler: received http request, start handle... .
[INFO] 22:28:02 HttpHandler: start auth .
[INFO] 22:28:02 MongoDB: collection-0101 exist .
[INFO] 22:28:02 MongoDB: coll_exist?: second time search start .
[INFO] 22:28:02 MongoDB: collection_names_list has been updated .
[INFO] 22:28:02 MongoDB: collection-0101 exist .
[INFO] 22:28:02 MongoDB: try to get document from interviewer/0101 .
[INFO] 22:28:02 MongoDB: parsing the documents, targets: ['lastLoginTimeStamp'] .
[INFO] 22:28:02 HttpHandler: user-0101's LLTS: 1650724082 .
[INFO] 22:28:02 MongoDB: try to get document from interviewer/0101 .
[INFO] 22:28:02 MongoDB: parsing the documents, targets: ['isOnline'] .
[INFO] 22:28:02 HttpHandler: time stamp is in law .
[INFO] 22:28:02 MongoDB: try to get document from interviewer/0101 .
[INFO] 22:28:02 MongoDB: parsing the documents, targets: ['token'] .
[INFO] 22:28:02 HttpHandler: auth completed .
[INFO] 22:28:02 HttpHandler: user_info_get_one_multi is allowed, start handle .
[INFO] 22:28:02 LocalCaller: start user_info_get_one_multi .
[INFO] 22:28:02 UserInfoManager: try to get user- 0101's mappingComCode .
[INFO] 22:28:02 MongoDB: try to get document from interviewer/0101 .
[INFO] 22:28:02 MongoDB: parsing the documents, targets: ['mappingComCode'] .
[INFO] 22:28:02 HttpHandler: command-user_info_get_one_multi handle completed .
[INFO] 22:28:02 HttpHandler: received http request, start handle... .
[INFO] 22:28:02 HttpHandler: start auth .
[INFO] 22:28:02 MongoDB: collection-0101 exist .
[INFO] 22:28:02 MongoDB: coll_exist?: second time search start .
[INFO] 22:28:02 MongoDB: collection_names_list has been updated .
[INFO] 22:28:02 MongoDB: collection-0101 exist .
[INFO] 22:28:02 HttpHandler: auth completed .
[INFO] 22:28:02 HttpHandler: get_com_info is allowed, start handle .
[INFO] 22:28:02 LocalCaller: start get_com_info .
[INFO] 22:28:02 OIISBackendMain: try to get com-com1's info .
[INFO] 22:28:02 MongoDB: try to get document from interview/now .
[INFO] 22:28:02 OIISBackendMain: get com info success .
[INFO] 22:28:02 HttpHandler: command-get_com_info handle completed .
[INFO] 22:28:04 HttpHandler: received http request, start handle... .
[INFO] 22:28:04 HttpHandler: start auth .
[INFO] 22:28:04 MongoDB: collection-0101 exist .
[INFO] 22:28:04 MongoDB: coll_exist?: second time search start .
[INFO] 22:28:04 MongoDB: collection_names_list has been updated .
[INFO] 22:28:04 MongoDB: collection-0101 exist .
[INFO] 22:28:04 HttpHandler: auth completed .
[INFO] 22:28:04 HttpHandler: get_enterprise_info is allowed, start handle .
[INFO] 22:28:04 LocalCaller: start get_enterprise_info .
[INFO] 22:28:04 OIISBackendMain: try to get enterprise-1's info .
[INFO] 22:28:04 MongoDB: try to get document from enterprise/1 .
[INFO] 22:28:04 HttpHandler: command-get_enterprise_info handle completed .
[INFO] 22:28:10 WsHandler: receive new websocket conn .
[INFO] 22:28:10 WsHandler: receive command, start handle .
[INFO] 22:28:10 MongoDB: collection-0101 exist .
[INFO] 22:28:10 MongoDB: coll_exist?: second time search start .
[INFO] 22:28:10 MongoDB: collection_names_list has been updated .
[INFO] 22:28:10 MongoDB: collection-0101 exist .
[INFO] 22:28:10 MongoDB: try to get document from interviewer/0101 .
[INFO] 22:28:10 MongoDB: parsing the documents, targets: ['isOnline'] .
[INFO] 22:28:10 MongoDB: try to get document from interviewer/0101 .
[INFO] 22:28:10 MongoDB: parsing the documents, targets: ['token'] .
[INFO] 22:28:10 WsHandler: auth success .
[INFO] 22:28:10 WsHandler: start auto_close_conn .
[INFO] 22:28:10 WsHandler: start communicate with client-0101 .
[INFO] 22:28:10 WsHandler: receive message from client-0101, start handle .
[INFO] 22:28:10 WsHandler: empty param .
[INFO] 22:28:10 WsHandler: recv_command-heartbeat from client-0101 .
[DEBUG] 22:28:10 WsHandler: client-0101 heartbeat success .
[INFO] 22:28:40 WsHandler: receive message from client-0101, start handle .
[INFO] 22:28:40 WsHandler: empty param .
[INFO] 22:28:40 WsHandler: recv_command-heartbeat from client-0101 .
[DEBUG] 22:28:40 WsHandler: client-0101 heartbeat success .
